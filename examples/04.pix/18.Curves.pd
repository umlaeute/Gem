#N canvas 0 0 764 634 10;
#X obj 38 123 gemwin;
#X msg 29 74 create;
#X msg 126 54 1;
#X msg 127 77 0;
#X msg 30 98 destroy;
#N canvas 285 0 681 629 tables 0;
#X graph graph5 0 -0 255 255 95 170 351 30;
#X array red 256 float 0;
#X pop;
#X graph graph6 0 0 255 255 399 169 655 29;
#X array green 256 float 0;
#X pop;
#X graph graph5 0 0 255 255 98 354 354 214;
#X array blue 256 float 0;
#X pop;
#X graph graph6 0 0 63 255 396 352 652 212;
#X array alpha 64 float 0;
#X pop;
#X graph graph5 0 0 7 255 49 580 305 440;
#X array edge 8 float 0;
#X pop;
#X text 319 459 set all black and white pixels to black.;
#X text 318 477 set all "grey" pixels (the transients) to white.;
#X restore 219 225 pd tables;
#X obj 30 272 gemhead;
#X obj 30 468 pix_texture;
#X graph graph7 0 0 255 256 217 210 473 70;
#X array rgba 256 float 0;
#X pop;
#X text 78 8 pix_curve: adjust the colour of an image;
#X text 291 227 separate tables for r \, g \, b and a;
#X obj 466 274 pix_curve rgba;
#X obj 469 324 pix_curve red green blue;
#X obj 470 373 pix_curve red green blue alpha;
#X text 504 291 one curve for all channels;
#X text 505 391 curves for r \, g \, b \, a;
#X text 500 341 curves for r \, g \, b \; leave a unchanged;
#X msg 507 127 \; rgba cosinesum 64 128 128;
#X obj 30 393 pix_curve rgba;
#N canvas 328 58 600 502 init 0;
#X obj 93 39 loadbang;
#X msg 115 87 \; rgba resize 256 \; red resize 256 green resize 256
\; blue resize 256 \; alpha resize 64 \; alpha const 128;
#X obj 93 197 t b b;
#X msg 93 219 256;
#X msg 125 218 0;
#X obj 93 241 until;
#X obj 93 262 i;
#X obj 123 261 + 1;
#X msg 93 177 bang;
#X obj 93 283 t f f f;
#X obj 93 370 tabwrite rgba;
#X msg 93 348 \$1 \$1;
#X obj 210 304 / 255;
#X obj 210 326 sqrt;
#X obj 210 347 * 255;
#X obj 210 395 tabwrite red;
#X obj 210 373 pack 0 0;
#X obj 299 396 tabwrite green;
#X obj 299 348 v- 255;
#X obj 299 373 v* -1;
#X obj 104 395 tabwrite blue;
#X obj 93 63 t b b b;
#X msg 364 83 \; edge resize 8 \; edge const 255 \; edge 0 0 \; edge
7 0;
#X connect 0 0 21 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 3 0 5 0;
#X connect 4 0 6 1;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 9 0;
#X connect 7 0 6 1;
#X connect 8 0 2 0;
#X connect 9 0 11 0;
#X connect 9 1 12 0;
#X connect 9 2 16 1;
#X connect 11 0 10 0;
#X connect 11 0 20 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 16 0;
#X connect 16 0 15 0;
#X connect 16 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 17 0;
#X connect 21 0 8 0;
#X connect 21 1 1 0;
#X connect 21 2 22 0;
#X restore 604 470 pd init;
#X msg 284 275 set rgba;
#X msg 282 325 set red green blue;
#X msg 278 375 set red green blue alpha;
#X text 505 110 an alternative colour-curve;
#X obj 116 101 f;
#X text 228 56 paint your own curve;
#X obj 30 509 square 2;
#X obj 30 488 translateXYZ -2 0 0;
#X obj 244 486 gemhead;
#X obj 244 548 pix_texture;
#X obj 244 569 translateXYZ 2 0 0;
#X obj 244 527 pix_curve edge;
#N canvas 80 38 600 318 pix_update 0;
#X obj 59 115 inlet;
#X obj 59 227 outlet;
#X obj 220 121 inlet;
#X obj 220 144 metro 500;
#X obj 59 198 pix_gain;
#X msg 220 165 1;
#X text 61 19 this is quite a dummy-routine:;
#X text 78 47 just multiply the pix-buffer with 1 (do nothing !) \,
and make it thereby dirty \, so that the pix_curve routines are going
to be called....;
#X text 56 272 maybe this could be done more easily..?;
#X connect 0 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 5 0 4 1;
#X restore 30 331 pd pix_update;
#X obj 244 592 square 2;
#X obj 244 506 pix_image dancer.JPG;
#X obj 30 303 pix_image fractal.JPG;
#X obj 30 435 alpha;
#X connect 1 0 0 0;
#X connect 2 0 24 0;
#X connect 3 0 24 0;
#X connect 4 0 0 0;
#X connect 6 0 35 0;
#X connect 7 0 27 0;
#X connect 18 0 36 0;
#X connect 20 0 18 0;
#X connect 21 0 18 0;
#X connect 22 0 18 0;
#X connect 24 0 0 0;
#X connect 24 0 32 1;
#X connect 27 0 26 0;
#X connect 28 0 34 0;
#X connect 29 0 30 0;
#X connect 30 0 33 0;
#X connect 31 0 29 0;
#X connect 32 0 18 0;
#X connect 34 0 31 0;
#X connect 35 0 32 0;
#X connect 36 0 7 0;
