#N canvas 111 106 885 510 10;
#X floatatom 664 182 0 0 0;
#X obj 664 210 / 100;
#X floatatom 610 163 0 0 0;
#X obj 610 192 / 100;
#X obj 32 282 gemwin;
#X msg 69 115 create;
#X obj 343 26 gemhead;
#X msg 78 144 destroy;
#X msg 89 171 1;
#X msg 89 203 0;
#X obj 343 319 pix_texture;
#X msg 394 359 4;
#X floatatom 556 121 0 0 0;
#X obj 556 149 / 100;
#X obj 343 268 pix_gain;
#X obj 556 241 pack 0 0 0;
#X obj 343 387 triangle;
#X text 128 174 turn rendering on and off;
#X text 39 89 create and destroy the graphics window;
#X text 356 341 click here to change the size of the triangle;
#X msg 570 213 bang;
#X obj 343 72 pix_image ../data/fractal.JPG;
#X obj 368 119 vsl 15 128 0 1 0 0 empty empty empty 20 8 0 8 -262144
-1 -1 12700 1;
#X text 366 96 overall factor;
#X text 632 121 color-wise factor;
#X text 103 453 using [pix_gain] is probably very expensive (since
it does operations on your CPU). Try using [color] if your card has
openGL-hw-accleration...;
#N canvas 91 174 290 179 Gem.init 0;
#X obj 83 30 loadbang;
#X msg 161 76 reset;
#X obj 45 107 outlet;
#X msg 45 75 dimen 300 300;
#X obj 88 51 t b b;
#X connect 0 0 4 0;
#X connect 1 0 2 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 4 1 1 0;
#X restore 100 254 pd Gem.init;
#X connect 0 0 1 0;
#X connect 1 0 15 2;
#X connect 1 0 20 0;
#X connect 2 0 3 0;
#X connect 3 0 15 1;
#X connect 3 0 20 0;
#X connect 5 0 4 0;
#X connect 6 0 21 0;
#X connect 7 0 4 0;
#X connect 8 0 4 0;
#X connect 9 0 4 0;
#X connect 10 0 16 0;
#X connect 11 0 16 1;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 14 0 10 0;
#X connect 15 0 14 2;
#X connect 20 0 15 0;
#X connect 21 0 14 0;
#X connect 22 0 14 1;
#X connect 26 0 4 0;
