dnl Process this file with autoconf to produce a configure script.
AC_INIT(../Base/CPPExtern.h)
dnl AC_CONFIG_HEADER(../Base/configLinux.h)
CONFFILE=../Base/config`uname`.h
AC_CONFIG_HEADER($CONFFILE)
gemsrc="./.."

VERSION=0.87-cvs
PACKAGE=gem

AC_SUBST(VERSION)
AC_SUBST(PACKAGE)

dnl we should rather search for the GemLibs
GEMLIBS="../../../GemLibs/"

dnl i have no idea, how to display these default-strings in the "--help"-stuff below
default_search_libs="$GEMLIBS /usr/local/lib /usr/local/src"
default_search_heads="/usr/include /usr/local/include $GEMLIBS"

dnl
dnl first comes the user-config stuff
dnl
AC_ARG_ENABLE(x, [  --gemlibs=DIR{:DIRS}     where to search for non-standard libs (aka GemLibs)])
AC_ARG_ENABLE(x, [                          [DIR=../../../GemLibs:/usr/local/lib:/usr/local/src ]])
AC_ARG_ENABLE(x, [  --includedir=DIR{:DIRS} where to search for non-standard headers])
AC_ARG_ENABLE(x, [                          [DIR=/usr/include:/usr/local/include:../../../GemLibs]])
AC_ARG_ENABLE(x, [])
AC_ARG_ENABLE(mmx,    [  --enable-mmx            enable MMX-support])
AC_ARG_ENABLE(static, [  --enable-static         static linking (default is: dynamic) ])
AC_ARG_ENABLE(new,    [  --disable-new           disable new versions of pix_film/pix_video])
AC_ARG_WITH(gltt,      [  --with-gltt             enable GLTT (for font rendering (old))])
AC_ARG_WITH(ftgl,      [  --with-ftgl             enable FTGL (for font rendering)])
AC_ARG_WITH(mpeg,      [  --with-mpeg             enable MPEG(1)-filmIN support])
AC_ARG_WITH(mpeg3,     [  --with-mpeg3            enable MPEG3-filmIN support (overrides MPEG(1)-support)])
AC_ARG_WITH(quicktime, [  --with-quicktime        enable quicktime-filmIN support])
AC_ARG_WITH(avi,       [  --with-avi              enable AVI-support (might provide MPEG)])
AC_ARG_WITH(aviplay,   [  --with-aviplay          alias for \"--with-avi\"])
AC_ARG_WITH(avcodec,   [  --with-avcodec=<lib>    location of libavcodec.a])
AC_ARG_WITH(avformat,  [  --with-avformat=<lib>   location of libavformat.a])
AC_ARG_WITH(ieee1394,  [  --with-ieee1394         enable IEEE1394-support (aka. firewire or DV)])
AC_ARG_WITH(pdversion, [  --with-pdversion=<ver>  enforce a certain pd-version (e.g. 0.37)])


if test "$with_aviplay"
then
  if test -z "$with_avi"
  then
    with_avi="$with_aviplay"
  else
    if test "$with_avi" != "$with_aviplay"
    then
      echo "--libaviplay is an alias for --libavi."
      echo "they shouldn't be set to contradictory values..."
      exit 1
    fi
  fi
fi

dnl of course we need X, so don't let the user disable it
if test "$with_x" = "no"
then
  echo "Gem will not run without X"
  exit 1
fi

dnl there should be a flag for which paths to search the libs in
dnl "--libdir"
if test "$libdir" && test "$libdir" != "\${exec_prefix}/lib"
then
  libdir=":$libdir"
  LIBS="$LIBS `echo $libdir | sed -e 's/:/ -L/g'`"
fi

dnl there should be a flag for which paths to search the libs in
dnl "--gemlibs"
if test "$gemlibs"
then
  search_libs=`echo $gemlibs | sed -e 's/:/ /g'`
else
  search_libs=$default_search_libs
fi

dnl there should be a flag for which paths to search the headers in
dnl maybe ab-use "--includedir"
if test "$includedir" != "\${prefix}/include"
then
  search_heads=`echo $includedir | sed -e 's/:/ /g'`
else
  search_heads="$default_search_heads"
fi

echo HEAD: $search_heads
echo LIBS: $search_libs

dnl
dnl now comes the path-stuff
dnl
PDBASE=/lib/pd
DOCBASE=/share/doc
AC_SUBST(PDBASE)
AC_SUBST(DOCBASE)
dnl ac_prefix is /usr/local by default
AC_SUBST(prefix)


dnl check for architecture
dnl ***********************************************************************

AC_CANONICAL_HOST

ttarget=pd_`echo $host_os | sed /.*/s/-.*//`
target=`echo $ttarget | sed -e 's/\[.].*//'`

echo Configuring for Gem.$target
AC_SUBST(target)

dnl Check for make version

AC_SUBST_FILE(build_rules)

echo $ac_n "checking for gnu make""... $ac_c"  1>&6

ac_make_gnu=`make -v | sed /GNU/p`
if test "$ac_make_gnu" != ""; then
  ac_make_gnu="yes";
  build_rules="Config.gnumake"
  echo $ac_t "yes";
else 
  ac_make_gnu="no";
  build_rules="Config.make"
  echo $ac_t "no";
fi

dnl Checks for programs.
dnl ***********************************************************************

dnl how should we check for intels compiler icc ? AC_PROG_CXX (icc,g++) doesnt seem to work
AC_PROG_CXX
#case $target in 
#pd_irix*)
#    echo $ac_n "checking for irix C++ compiler""... $ac_c" 1>&6

#    if test "${GXX+set}" = set; then 
#      echo $ac_t yes;
#      echo "adding flags for irix CC compiler";
#      CXXFLAGS="$CXXFLAGS -o32 -mips2 -xansi -woff 3157,3173";
#    else
#      echo $ac_t no;
#    fi;;
#esac

AC_PROG_CC
AC_SUBST(CC)
AC_SUBST(CXX)
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_CHECK_PROGS(shell_prog,sh)

AC_PATH_XTRA

if test "$enable_new" != "no"; then
 CXXFLAGS="$CXXFLAGS -D__NEW__"
fi

dnl Checks for MMX
if test "$enable_mmx" != "no"; then
AC_MSG_CHECKING("for MMX")
dnl right now, i only know how to do this for gcc
cat > conftest.c++ << EOF
#include <mmintrin.h>
int main(){
  __m64 m;
  return 0;
}
EOF
MMXFLAGS=""
$CXX $CXXFLAGS $CPPFLAGS $MMXFLAGS -mmmx -o conftest.o conftest.c++ && MMXFLAGS="-mmmx"
dnl $CXX $CXXFLAGS $CPPFLAGS $MMXFLAGS -mfpmath=sse -o conftest.o conftest.c++ && MMXFLAGS="-mmmx"
fi
if test "$MMXFLAGS" != ""; then
  MMXFLAGS="$MMXFLAGS"
  AC_MSG_CHECKING("MMX found")
  echo
  dummy="HAVE_MMX"
  AC_DEFINE_UNQUOTED($dummy)	
else
  if test "$enable_mmx" == "yes"; then
    AC_MSG_ERROR([you enforced the use of MMX although the compiler ($CXX) doesn't support it])
  elif test "$enable_mmx" == ""; then
    AC_MSG_CHECKING("MMX not found")
    echo
  else
    echo "disabled MMX..."
  fi
fi

dnl Checks for libraries.
dnl ***********************************************************************

dnl 
dnl make the auxiliary libraries GemLibs
dnl 


if test -d $GEMLIBS
then
  . makeauxlibs
fi

source_dirs="$SOURCEDIRS"
AC_SUBST(source_dirs)

LIBTOOL=""
AC_SUBST(LIBTOOL)
arch_ld_flags="-shared"
AC_SUBST(arch_ld_flags)

if test "$x_libraries" != ""; then
LDFLAGS="$LDFLAGS -L$x_libraries";
fi

AC_CHECK_LIB(X11,main)
AC_CHECK_LIB(Xext,main)
AC_CHECK_LIB(Xxf86vm,XF86VidModeGetAllModeLines)
dnl add -shared to the libraries, so X will be shared
LIBS="-Wl,-shared -Wl,-export-dynamic $LIBS"

dnl AC_ARG_ENABLE(static, "   " ,LIBS="/usr/lib/gcc-lib/i486-linux/egcs-2.91.57/libstdc++.a $LIBS")

AC_CHECK_LIB(m,sin)
AC_CHECK_LIB(z,main)

if test "${GXX+set}" != set; then
AC_CHECK_LIB(dl,dlopen)
AC_CHECK_LIB(stdc++,main)
fi

ggstatic="-Wl,-Bstatic"
dnl AC_ARG_WITH(static,"   " ,LIBS="$ggstatic $LIBS")
if test "$enable_static" = "yes"
then
  LIBS="$ggstatic $LIBS"
fi


dnl Check for OpenGL (Original or Mesa)

	AC_CHECK_LIB(GL, glInitNames,,
		AC_CHECK_LIB(MesaGL,glInitNames,,
        	echo "OpenGL is mandatory";exit 1)
		)

dnl Check for GLU (Original or Mesa)
	AC_CHECK_LIB(GLU, gluLookAt, ,
		AC_CHECK_LIB(MesaGLU,gluLookAt,,
		echo "incomplete OpenGL (no GLU)";exit 1)
		)

dnl Checking image-libraries
dnl Check for PNG
	AC_FIND_LIB(png, png_set_compression_level, $search_libs, fail)
dnl Check for TIFF
	AC_FIND_LIB(tiff, TIFFOpen, $search_libs, fail)
dnl Check for Jpeg
	AC_FIND_LIB(jpeg, jpeg_read_header, $search_libs, fail)

dnl Checking font-libraries
if test "$with_gltt" == "yes"; then
  if test "$with_ftgl" != "yes"; then
    with_ftgl="no"
  fi
fi

dnl Check for ftgl
if test "$with_gltt" == "yes"; then
 if test "$with_ftgl" != "yes"; then
  with_ftgl="no"
 fi
fi

if test "$with_ftgl" != "no"; then
AC_FIND_LIB(ftgl, FTGLPixmapFont,$search_libs, $with_ftgl)
if test "$ac_tr_lib" == "HAVE_LIBFTGL"; then
  dnl Check for freetype (ftgl depends on freetype)
  AC_FIND_LIB(freetype, New_Face,$search_libs, fail)
  with_ftgl="yes"
  with_gltt="no"
else
  with_ftgl="no"
  with_gltt="yes"
fi  fi

if test "$with_gltt" != "no"
then
dnl Check for gltt
  AC_FIND_LIB(gltt, open, $search_libs, $with_gltt)
dnl Check for TTF (gltt depends on ttf)
  if test "$ac_tr_lib" == "HAVE_LIBGLTT"; then
    AC_FIND_LIB(ttf, TT_FreeType_Version, $search_libs, fail)
  fi
fi

dnl Checking for video-libraries
dnl Check for sgi vl library
AC_CHECK_LIB(vl,main,
             SGI_SPECIFIC="pix_videoSGI.o pix_indycam.o")


dnl Check glib (do we need this for png ?)
	AC_CHECK_LIB(glib, main)

dnl Checking the rest

dnl video formats (selectable by command-line args)
if test "$with_mpeg3" != "no"
then
  AC_FIND_LIB(mpeg3, mpeg3_check_sig, $search_libs, $with_mpeg3)
fi

if test "$ac_tr_lib" != "HAVE_LIBMPEG3"
then
  with_mpeg3="no"
fi

if test "$with_mpeg" != "no"
then
  if test "$ac_tr_lib" != "HAVE_LIBMPEG3"
  then
    AC_FIND_LIB(mpeg, OpenMPEG, $search_libs, $with_mpeg)
  else
    echo skipping check for mpeg because mpeg3 is used
  fi
fi
if  test "$ac_tr_lib" != "HAVE_LIBMPEG"
then
  with_mpeg="no"
fi

if test "$with_quicktime" != "no"
then
  AC_FIND_LIB(quicktime, quicktime_check_sig, $search_libs, $with_quicktime)
fi
if  test "$ac_tr_lib" != "HAVE_LIBQUICKTIME"
then
  with_quicktime="no"
fi

if test "$with_avi" != "no"
then
  if which avifile-config > /dev/null
  then
    LIBS="`avifile-config --libs` $LIBS"
    ac_tr_lib="HAVE_LIBAVIPLAY"
    AC_DEFINE_UNQUOTED($ac_tr_lib)
  else
    AC_FIND_LIB(aviplay, CreateIAviReadFile, $search_libs, $with_avi)
  fi
fi
if  test "$ac_tr_lib" != "HAVE_LIBAVIPLAY"
then
  with_avi="no"
fi
#
#  Test for FFMPEG libraries
#

if test "$with_avcodec" != "" -a "$with_avformat" != ""
then
  echo "building pix_filmFFMPEG"
  LIBS="$with_avcodec $with_avformat $LIBS $with_avcodec $with_avformat"
  AC_DEFINE_UNQUOTED(HAVE_LIBAVCODEC)
  AC_DEFINE_UNQUOTED(HAVE_LIBAVFORMAT)
fi

# end FFMPEG

if test "$with_ieee1394" != "no"
then
  AC_FIND_LIB(dv, dv_init, $search_libs, $with_ieee1394)
fi

if test "$ac_tr_lib" != "HAVE_LIBDV"
then
  with_ieee1394="no"
else
  :  
fi

dnl Checking for Headers !
dnl there should be a flag for which paths to search
dnl maybe ab-use "--includedir"

dnl look for PD
AC_FIND_HEADER(m_pd.h, $search_heads , fail)

dnl OpenGL
AC_CHECK_HEADERS(GL/gl.h GL/glu.h,,
        	echo "OpenGL is mandatory";exit 1)


dnl truetype
if test "$with_ftgl" != "no"
then 
  AC_FIND_HEADER(freetype/config/ftheader.h, $search_heads, $with_ftgl)
  AC_FIND_HEADER(FTGLPixmapFont.h, $search_heads, $with_ftgl)
fi
if test "$with_gltt" != "no"
then 
  AC_FIND_HEADER(GLTTFont.h, $search_heads, $with_gltt)
fi

dnl video formats
if test "$with_mpeg" != "no"
then
  AC_FIND_HEADER(mpeg.h, $search_heads, $with_mpeg)
fi

if test "$with_mpeg3" != "no"
then
  AC_FIND_HEADER(libmpeg3.h, $search_heads, $with_mpeg3)
fi

if test "$with_quicktime" != "no"
then
  AC_FIND_HEADER(quicktime/quicktime.h, $search_heads, $with_quicktime)
fi

if test "$with_avi" != "no"
then
  if which avifile-config > /dev/null
  then
    INCLUDES="`avifile-config --cflags` $INCLUDES"
  else
    AC_FIND_HEADER(avifile.h, $search_heads, $with_avi)
  fi
fi

if test "$with_ieee1394" != "no"
then
  AC_FIND_HEADER(libdv/dv.h, $search_heads, $with_ieee1394)
fi

dnl Checks for pd-version, to set the correct help-path
AC_MSG_CHECKING("pd\>=0.37")

if test "$with_pdversion" != ""
then
echo -n "($with_pdversion)... "
  PD_VERSION="$with_pdversion"
else
cat > conftest.c << EOF
#include <stdio.h>
#include "m_pd.h"
int main(){
  printf("%d.%d\n", PD_MAJOR_VERSION, PD_MINOR_VERSION);
  return 0;
}
EOF
 if $CXX $INCLUDES -o conftest.o conftest.c > /dev/null 2>&1
 then
  PD_VERSION=`./conftest.o`
 else
  PD_VERSION=""
 fi
fi

let PD_MAJORVERSION=`echo $PD_VERSION | cut -d"." -f1`+0
let PD_MINORVERSION=`echo $PD_VERSION | cut -d"." -f2`+0

if test "$PD_MAJORVERSION" -gt 0 || test "$PD_MINORVERSION" -ge 37
then
  REFERENCEPATH=extra/help-Gem
  echo "yes"
else
  REFERENCEPATH=doc/5.reference/Gem
  echo "no"
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
dnl AC_C_INLINE
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(strdup strstr)


AC_SUBST(SGI_SPECIFIC)

AC_SUBST(arch_ld_flags)
AC_SUBST(LIBS)
AC_SUBST(INCLUDES)

AC_SUBST(REFERENCEPATH)

RANLIB=gcc 
AC_SUBST(RANLIB)

CXXFLAGS="$CXXFLAGS -fPIC $MMXFLAGS"
AC_SUBST(CXXFLAGS)

dnl 
dnl We will use the same Makefiles for any subdir .. so build the Makefile.in
dnl 
. makesource

AC_OUTPUT(Makefile  
$gemsrc/Manips/Makefile
$gemsrc/Particles/Makefile
$gemsrc/Base/Makefile
$gemsrc/MarkEx/Makefile 
$gemsrc/Pixes/Makefile 
$gemsrc/Controls/Makefile 
$gemsrc/Nongeos/Makefile 
$gemsrc/Geos/Makefile
$gemsrc/openGL/Makefile
)

