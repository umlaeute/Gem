

KNOWN BUGS:
- using e.g. 2 pix_file_read with 2 different videos is not possible ATM (every instance will play the
  same movie)), so there must be some interfering gstreamer messages somewhere ...

- UDP end-of-stream bug (FileReadGst): When you read an UDP stream and the stream is finished and you
    have not sent the stop message before this, the application freezes untilthere is a new stream to read.
    
- audio_bin_ gets no end-of-stream (FileReadGst): When you play a file with audio and video tracks and
    you turn on audio and video playback, then with some video files the application freezes at the end
    of the video file. It seems that then only the video_bin_ gets the EOS signal and the audio_bin_ 
    then tries to pull a buffer but cannot get one.
    
- audio/video synchronisation (FileReadGst): If play only the video track of a file and later start playing
    the audio track, the audio track starts at the beginning, though the video is somewhere else
    
- writing an empty gemwin (FileWriteGst): If you open a file to record, start recording and then open
    an empty gemwin, it gets segmentation fault (this seems to be a bug in pix_file_read::render)


MAJOR TODOs:

- now all the video pixel data is copied 3 times (in gstreamer, in VIOFrame, then in GEM imageStruct) which
  is of course not acceptable for big resolutions - so implement this with pointers !

- audio support for DeviceRead (should be the same as for FileRead) and FileWrite

- integrate priorities into the plugin system

- windows/mac port


MINOR TODOs:

- see the various TODO-marks in source code comments
