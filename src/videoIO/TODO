
TODO:

KNOWN BUGS:
- UDP end-of-stream bug (FileReadGst): When you read an UDP stream and the stream is finished and you
    have not sent the stop message before this, the application freezes untilthere is a new stream to read.
    
- audio_bin_ gets no end-of-stream (FileReadGst): When you play a file with audio and video tracks and
    you turn on audio and video playback, then with some video files the application freezes at the end
    of the video file. It seems that then only the video_bin_ gets the EOS signal and the audio_bin_ 
    then tries to pull a buffer but cannot get one.
    
- audio/video synchronisation (FileReadGst): If play only the video track of a file and later start playing
    the audio track, the audio track starts at the beginning, though the video is somewhere else
    
- writing an empty gemwin (FileWriteGst): If you open a file to record, start recording and then open
    an empty gemwin, it gets segmentation fault (this seems to be a bug in pix_file_read::render)



PLUGIN-FACTORY:
	(read+write)
	factory.getPlugin() needs argument, to decide which plugin to use
		arguments include: 	"filename" (connection string)
					"colorspace"
					"preferred_plugin" (esp. important when writing; but might also be of interested when reading)
					...
		use argument map (id<->value);
		

	think about PRIORITIES: several plugins can decode the same "file", but some might do a better job; these should be used!
				therefore a plugin returns a value on "how good" it is at decoding the specified thing
						a return value of "-1" would mean: i CANNOT do this


colorspaces:
	request at plugin-instantiation a certain colorspace in FourCC code (string? hex-value?)
	for now we do not offer any automatic converision:
		either the decoding-libraries offer the requested format, or we get some "native" format
	if we don't care, set the FourCC to <null>

	what about "writing"?  conversion in the host (if plugin does not know how to handle the requested cs)


// on parameter maps
class VIOPluginParameter {
	/* this is bad as it needs re-compilation of plugins and hosts! */
	setFilename(String s);
	setColorspace(int);

	/* this is good, as neither plugins nor hosts need to be recompiled */
	setParameter(String id, String parm); // id=="filename" or id="colorspace";
	setParameter(String id, int parm);

	Map<>map;

	getParameter();

}

setParameter("mysuperaparm", huhu);
>>>>>>> 1.1.2.2
