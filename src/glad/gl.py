# -*- coding: utf-8 -*-
#
# TARGET arch is: []
# WORD_SIZE is: 8
# POINTER_SIZE is: 8
# LONGDOUBLE_SIZE is: 16
#
import ctypes


class AsDictMixin:
    @classmethod
    def as_dict(cls, self):
        result = {}
        if not isinstance(self, AsDictMixin):
            # not a structure, assume it's already a python object
            return self
        if not hasattr(cls, "_fields_"):
            return result
        # sys.version_info >= (3, 5)
        # for (field, *_) in cls._fields_:  # noqa
        for field_tuple in cls._fields_:  # noqa
            field = field_tuple[0]
            if field.startswith('PADDING_'):
                continue
            value = getattr(self, field)
            type_ = type(value)
            if hasattr(value, "_length_") and hasattr(value, "_type_"):
                # array
                if not hasattr(type_, "as_dict"):
                    value = [v for v in value]
                else:
                    type_ = type_._type_
                    value = [type_.as_dict(v) for v in value]
            elif hasattr(value, "contents") and hasattr(value, "_type_"):
                # pointer
                try:
                    if not hasattr(type_, "as_dict"):
                        value = value.contents
                    else:
                        type_ = type_._type_
                        value = type_.as_dict(value.contents)
                except ValueError:
                    # nullptr
                    value = None
            elif isinstance(value, AsDictMixin):
                # other structure
                value = type_.as_dict(value)
            result[field] = value
        return result


class Structure(ctypes.Structure, AsDictMixin):

    def __init__(self, *args, **kwds):
        # We don't want to use positional arguments fill PADDING_* fields

        args = dict(zip(self.__class__._field_names_(), args))
        args.update(kwds)
        super(Structure, self).__init__(**args)

    @classmethod
    def _field_names_(cls):
        if hasattr(cls, '_fields_'):
            return (f[0] for f in cls._fields_ if not f[0].startswith('PADDING'))
        else:
            return ()

    @classmethod
    def get_type(cls, field):
        for f in cls._fields_:
            if f[0] == field:
                return f[1]
        return None

    @classmethod
    def bind(cls, bound_fields):
        fields = {}
        for name, type_ in cls._fields_:
            if hasattr(type_, "restype"):
                if name in bound_fields:
                    if bound_fields[name] is None:
                        fields[name] = type_()
                    else:
                        # use a closure to capture the callback from the loop scope
                        fields[name] = (
                            type_((lambda callback: lambda *args: callback(*args))(
                                bound_fields[name]))
                        )
                    del bound_fields[name]
                else:
                    # default callback implementation (does nothing)
                    try:
                        default_ = type_(0).restype().value
                    except TypeError:
                        default_ = None
                    fields[name] = type_((
                        lambda default_: lambda *args: default_)(default_))
            else:
                # not a callback function, use default initialization
                if name in bound_fields:
                    fields[name] = bound_fields[name]
                    del bound_fields[name]
                else:
                    fields[name] = type_()
        if len(bound_fields) != 0:
            raise ValueError(
                "Cannot bind the following unknown callback(s) {}.{}".format(
                    cls.__name__, bound_fields.keys()
            ))
        return cls(**fields)


class Union(ctypes.Union, AsDictMixin):
    pass



c_int128 = ctypes.c_ubyte*16
c_uint128 = c_int128
void = None
if ctypes.sizeof(ctypes.c_longdouble) == 16:
    c_long_double_t = ctypes.c_longdouble
else:
    c_long_double_t = ctypes.c_ubyte*16

def string_cast(char_pointer, encoding='utf-8', errors='strict'):
    value = ctypes.cast(char_pointer, ctypes.c_char_p).value
    if value is not None and encoding is not None:
        value = value.decode(encoding, errors=errors)
    return value


def char_pointer_cast(string, encoding='utf-8'):
    if encoding is not None:
        try:
            string = string.encode(encoding)
        except AttributeError:
            # In Python3, bytes has no encode attribute
            pass
    string = ctypes.c_char_p(string)
    return ctypes.cast(string, ctypes.POINTER(ctypes.c_char))





GLAD_GL_H_ = True # macro
__gl_h_ = 1 # macro
__gl3_h_ = 1 # macro
__glext_h_ = 1 # macro
__gl3ext_h_ = 1 # macro
GLAD_GL = True # macro
GLAD_OPTION_GL_ALIAS = True # macro
GLAD_OPTION_GL_LOADER = True # macro
GLAD_OPTION_GL_MX = True # macro
GLAD_PLATFORM_H_ = True # macro
GLAD_PLATFORM_WIN32 = 0 # macro
GLAD_PLATFORM_APPLE = 0 # macro
GLAD_PLATFORM_EMSCRIPTEN = 0 # macro
GLAD_PLATFORM_UWP = 0 # macro
# GLAD_GNUC_EXTENSION = __extension__ # macro
# def GLAD_UNUSED(x):  # macro
#    return (void)(x)  
# GLAD_API_CALL = extern # macro
GLAD_API_PTR = True # macro
# GLAPI = extern # macro
GLAPIENTRY = True # macro
# def GLAD_MAKE_VERSION(major, minor):  # macro
#    return (major*10000+minor)  
# def GLAD_VERSION_MAJOR(version):  # macro
#    return (version/10000)  
# def GLAD_VERSION_MINOR(version):  # macro
#    return (version%10000)  
GLAD_GENERATOR_VERSION = "2.0.4" # macro
GL_1PASS_EXT = 0x80A1 # macro
GL_1PASS_SGIS = 0x80A1 # macro
GL_2D = 0x0600 # macro
GL_2PASS_0_EXT = 0x80A2 # macro
GL_2PASS_0_SGIS = 0x80A2 # macro
GL_2PASS_1_EXT = 0x80A3 # macro
GL_2PASS_1_SGIS = 0x80A3 # macro
GL_2X_BIT_ATI = 0x00000001 # macro
GL_2_BYTES = 0x1407 # macro
GL_2_BYTES_NV = 0x1407 # macro
GL_3D = 0x0601 # macro
GL_3D_COLOR = 0x0602 # macro
GL_3D_COLOR_TEXTURE = 0x0603 # macro
GL_3_BYTES = 0x1408 # macro
GL_3_BYTES_NV = 0x1408 # macro
GL_422_AVERAGE_EXT = 0x80CE # macro
GL_422_EXT = 0x80CC # macro
GL_422_REV_AVERAGE_EXT = 0x80CF # macro
GL_422_REV_EXT = 0x80CD # macro
GL_4D_COLOR_TEXTURE = 0x0604 # macro
GL_4PASS_0_EXT = 0x80A4 # macro
GL_4PASS_0_SGIS = 0x80A4 # macro
GL_4PASS_1_EXT = 0x80A5 # macro
GL_4PASS_1_SGIS = 0x80A5 # macro
GL_4PASS_2_EXT = 0x80A6 # macro
GL_4PASS_2_SGIS = 0x80A6 # macro
GL_4PASS_3_EXT = 0x80A7 # macro
GL_4PASS_3_SGIS = 0x80A7 # macro
GL_4X_BIT_ATI = 0x00000002 # macro
GL_4_BYTES = 0x1409 # macro
GL_4_BYTES_NV = 0x1409 # macro
GL_8X_BIT_ATI = 0x00000004 # macro
GL_ABGR_EXT = 0x8000 # macro
GL_ACCUM = 0x0100 # macro
GL_ACCUM_ADJACENT_PAIRS_NV = 0x90AD # macro
GL_ACCUM_ALPHA_BITS = 0x0D5B # macro
GL_ACCUM_BLUE_BITS = 0x0D5A # macro
GL_ACCUM_BUFFER_BIT = 0x00000200 # macro
GL_ACCUM_CLEAR_VALUE = 0x0B80 # macro
GL_ACCUM_GREEN_BITS = 0x0D59 # macro
GL_ACCUM_RED_BITS = 0x0D58 # macro
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92D9 # macro
GL_ACTIVE_ATTRIBUTES = 0x8B89 # macro
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A # macro
GL_ACTIVE_PROGRAM = 0x8259 # macro
GL_ACTIVE_PROGRAM_EXT = 0x8B8D # macro
GL_ACTIVE_RESOURCES = 0x92F5 # macro
GL_ACTIVE_STENCIL_FACE_EXT = 0x8911 # macro
GL_ACTIVE_SUBROUTINES = 0x8DE5 # macro
GL_ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8E48 # macro
GL_ACTIVE_SUBROUTINE_UNIFORMS = 0x8DE6 # macro
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47 # macro
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49 # macro
GL_ACTIVE_TEXTURE = 0x84E0 # macro
GL_ACTIVE_TEXTURE_ARB = 0x84E0 # macro
GL_ACTIVE_UNIFORMS = 0x8B86 # macro
GL_ACTIVE_UNIFORM_BLOCKS = 0x8A36 # macro
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35 # macro
GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87 # macro
GL_ACTIVE_VARIABLES = 0x9305 # macro
GL_ACTIVE_VARYINGS_NV = 0x8C81 # macro
GL_ACTIVE_VARYING_MAX_LENGTH_NV = 0x8C82 # macro
GL_ACTIVE_VERTEX_UNITS_ARB = 0x86A5 # macro
GL_ADD = 0x0104 # macro
GL_ADD_ATI = 0x8963 # macro
GL_ADD_SIGNED = 0x8574 # macro
GL_ADD_SIGNED_ARB = 0x8574 # macro
GL_ADD_SIGNED_EXT = 0x8574 # macro
GL_ADJACENT_PAIRS_NV = 0x90AE # macro
GL_AFFINE_2D_NV = 0x9092 # macro
GL_AFFINE_3D_NV = 0x9094 # macro
GL_ALIASED_LINE_WIDTH_RANGE = 0x846E # macro
GL_ALIASED_POINT_SIZE_RANGE = 0x846D # macro
GL_ALLOW_DRAW_FRG_HINT_PGI = 0x1A210 # macro
GL_ALLOW_DRAW_MEM_HINT_PGI = 0x1A211 # macro
GL_ALLOW_DRAW_OBJ_HINT_PGI = 0x1A20E # macro
GL_ALLOW_DRAW_WIN_HINT_PGI = 0x1A20F # macro
GL_ALL_ATTRIB_BITS = 0xFFFFFFFF # macro
GL_ALL_BARRIER_BITS = 0xFFFFFFFF # macro
GL_ALL_BARRIER_BITS_EXT = 0xFFFFFFFF # macro
GL_ALL_COMPLETED_NV = 0x84F2 # macro
GL_ALL_PIXELS_AMD = 0xFFFFFFFF # macro
GL_ALL_SHADER_BITS = 0xFFFFFFFF # macro
GL_ALL_STATIC_DATA_IBM = 103060 # macro
GL_ALPHA = 0x1906 # macro
GL_ALPHA12 = 0x803D # macro
GL_ALPHA12_EXT = 0x803D # macro
GL_ALPHA16 = 0x803E # macro
GL_ALPHA16F_ARB = 0x881C # macro
GL_ALPHA16F_EXT = 0x881C # macro
GL_ALPHA16I_EXT = 0x8D8A # macro
GL_ALPHA16UI_EXT = 0x8D78 # macro
GL_ALPHA16_EXT = 0x803E # macro
GL_ALPHA16_SNORM = 0x9018 # macro
GL_ALPHA32F_ARB = 0x8816 # macro
GL_ALPHA32F_EXT = 0x8816 # macro
GL_ALPHA32I_EXT = 0x8D84 # macro
GL_ALPHA32UI_EXT = 0x8D72 # macro
GL_ALPHA4 = 0x803B # macro
GL_ALPHA4_EXT = 0x803B # macro
GL_ALPHA8 = 0x803C # macro
GL_ALPHA8I_EXT = 0x8D90 # macro
GL_ALPHA8UI_EXT = 0x8D7E # macro
GL_ALPHA8_EXT = 0x803C # macro
GL_ALPHA8_SNORM = 0x9014 # macro
GL_ALPHA_BIAS = 0x0D1D # macro
GL_ALPHA_BITS = 0x0D55 # macro
GL_ALPHA_FLOAT16_APPLE = 0x881C # macro
GL_ALPHA_FLOAT16_ATI = 0x881C # macro
GL_ALPHA_FLOAT32_APPLE = 0x8816 # macro
GL_ALPHA_FLOAT32_ATI = 0x8816 # macro
GL_ALPHA_INTEGER = 0x8D97 # macro
GL_ALPHA_INTEGER_EXT = 0x8D97 # macro
GL_ALPHA_MAX_CLAMP_INGR = 0x8567 # macro
GL_ALPHA_MAX_SGIX = 0x8321 # macro
GL_ALPHA_MIN_CLAMP_INGR = 0x8563 # macro
GL_ALPHA_MIN_SGIX = 0x8320 # macro
GL_ALPHA_REF_COMMAND_NV = 0x000F # macro
GL_ALPHA_SCALE = 0x0D1C # macro
GL_ALPHA_SNORM = 0x9010 # macro
GL_ALPHA_TEST = 0x0BC0 # macro
GL_ALPHA_TEST_FUNC = 0x0BC1 # macro
GL_ALPHA_TEST_REF = 0x0BC2 # macro
GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV = 0x934D # macro
GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV = 0x934F # macro
GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV = 0x934E # macro
GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV = 0x92BF # macro
GL_ALREADY_SIGNALED = 0x911A # macro
GL_ALWAYS = 0x0207 # macro
GL_ALWAYS_FAST_HINT_PGI = 0x1A20C # macro
GL_ALWAYS_SOFT_HINT_PGI = 0x1A20D # macro
GL_AMBIENT = 0x1200 # macro
GL_AMBIENT_AND_DIFFUSE = 0x1602 # macro
GL_AND = 0x1501 # macro
GL_AND_INVERTED = 0x1504 # macro
GL_AND_REVERSE = 0x1502 # macro
GL_ANY_SAMPLES_PASSED = 0x8C2F # macro
GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A # macro
GL_ARC_TO_NV = 0xFE # macro
GL_ARRAY_BUFFER = 0x8892 # macro
GL_ARRAY_BUFFER_ARB = 0x8892 # macro
GL_ARRAY_BUFFER_BINDING = 0x8894 # macro
GL_ARRAY_BUFFER_BINDING_ARB = 0x8894 # macro
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = 0x81A9 # macro
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = 0x81A8 # macro
GL_ARRAY_OBJECT_BUFFER_ATI = 0x8766 # macro
GL_ARRAY_OBJECT_OFFSET_ATI = 0x8767 # macro
GL_ARRAY_SIZE = 0x92FB # macro
GL_ARRAY_STRIDE = 0x92FE # macro
GL_ASYNC_DRAW_PIXELS_SGIX = 0x835D # macro
GL_ASYNC_HISTOGRAM_SGIX = 0x832C # macro
GL_ASYNC_MARKER_SGIX = 0x8329 # macro
GL_ASYNC_READ_PIXELS_SGIX = 0x835E # macro
GL_ASYNC_TEX_IMAGE_SGIX = 0x835C # macro
GL_ATOMIC_COUNTER_BARRIER_BIT = 0x00001000 # macro
GL_ATOMIC_COUNTER_BARRIER_BIT_EXT = 0x00001000 # macro
GL_ATOMIC_COUNTER_BUFFER = 0x92C0 # macro
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = 0x92C5 # macro
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = 0x92C6 # macro
GL_ATOMIC_COUNTER_BUFFER_BINDING = 0x92C1 # macro
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = 0x92C4 # macro
GL_ATOMIC_COUNTER_BUFFER_INDEX = 0x9301 # macro
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = 0x90ED # macro
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = 0x92CB # macro
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = 0x92CA # macro
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV = 0x959E # macro
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV = 0x959F # macro
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = 0x92C8 # macro
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x92C9 # macro
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = 0x92C7 # macro
GL_ATOMIC_COUNTER_BUFFER_SIZE = 0x92C3 # macro
GL_ATOMIC_COUNTER_BUFFER_START = 0x92C2 # macro
GL_ATTACHED_MEMORY_OBJECT_NV = 0x95A4 # macro
GL_ATTACHED_MEMORY_OFFSET_NV = 0x95A5 # macro
GL_ATTACHED_SHADERS = 0x8B85 # macro
GL_ATTENUATION_EXT = 0x834D # macro
GL_ATTRIBUTE_ADDRESS_COMMAND_NV = 0x0009 # macro
GL_ATTRIB_ARRAY_POINTER_NV = 0x8645 # macro
GL_ATTRIB_ARRAY_SIZE_NV = 0x8623 # macro
GL_ATTRIB_ARRAY_STRIDE_NV = 0x8624 # macro
GL_ATTRIB_ARRAY_TYPE_NV = 0x8625 # macro
GL_ATTRIB_STACK_DEPTH = 0x0BB0 # macro
GL_AUTO_GENERATE_MIPMAP = 0x8295 # macro
GL_AUTO_NORMAL = 0x0D80 # macro
GL_AUX0 = 0x0409 # macro
GL_AUX1 = 0x040A # macro
GL_AUX2 = 0x040B # macro
GL_AUX3 = 0x040C # macro
GL_AUX_BUFFERS = 0x0C00 # macro
GL_AUX_DEPTH_STENCIL_APPLE = 0x8A14 # macro
GL_AVERAGE_EXT = 0x8335 # macro
GL_AVERAGE_HP = 0x8160 # macro
GL_BACK = 0x0405 # macro
GL_BACK_LEFT = 0x0402 # macro
GL_BACK_NORMALS_HINT_PGI = 0x1A223 # macro
GL_BACK_PRIMARY_COLOR_NV = 0x8C77 # macro
GL_BACK_RIGHT = 0x0403 # macro
GL_BACK_SECONDARY_COLOR_NV = 0x8C78 # macro
GL_BEVEL_NV = 0x90A6 # macro
GL_BGR = 0x80E0 # macro
GL_BGRA = 0x80E1 # macro
GL_BGRA8_EXT = 0x93A1 # macro
GL_BGRA_EXT = 0x80E1 # macro
GL_BGRA_INTEGER = 0x8D9B # macro
GL_BGRA_INTEGER_EXT = 0x8D9B # macro
GL_BGR_EXT = 0x80E0 # macro
GL_BGR_INTEGER = 0x8D9A # macro
GL_BGR_INTEGER_EXT = 0x8D9A # macro
GL_BIAS_BIT_ATI = 0x00000008 # macro
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV = 0x8541 # macro
GL_BINORMAL_ARRAY_EXT = 0x843A # macro
GL_BINORMAL_ARRAY_POINTER_EXT = 0x8443 # macro
GL_BINORMAL_ARRAY_STRIDE_EXT = 0x8441 # macro
GL_BINORMAL_ARRAY_TYPE_EXT = 0x8440 # macro
GL_BITMAP = 0x1A00 # macro
GL_BITMAP_TOKEN = 0x0704 # macro
GL_BLACKHOLE_RENDER_INTEL = 0x83FC # macro
GL_BLEND = 0x0BE2 # macro
GL_BLEND_ADVANCED_COHERENT_KHR = 0x9285 # macro
GL_BLEND_ADVANCED_COHERENT_NV = 0x9285 # macro
GL_BLEND_COLOR = 0x8005 # macro
GL_BLEND_COLOR_COMMAND_NV = 0x000B # macro
GL_BLEND_COLOR_EXT = 0x8005 # macro
GL_BLEND_DST = 0x0BE0 # macro
GL_BLEND_DST_ALPHA = 0x80CA # macro
GL_BLEND_DST_ALPHA_EXT = 0x80CA # macro
GL_BLEND_DST_RGB = 0x80C8 # macro
GL_BLEND_DST_RGB_EXT = 0x80C8 # macro
GL_BLEND_EQUATION = 0x8009 # macro
GL_BLEND_EQUATION_ALPHA = 0x883D # macro
GL_BLEND_EQUATION_ALPHA_EXT = 0x883D # macro
GL_BLEND_EQUATION_EXT = 0x8009 # macro
GL_BLEND_EQUATION_RGB = 0x8009 # macro
GL_BLEND_EQUATION_RGB_EXT = 0x8009 # macro
GL_BLEND_OVERLAP_NV = 0x9281 # macro
GL_BLEND_PREMULTIPLIED_SRC_NV = 0x9280 # macro
GL_BLEND_SRC = 0x0BE1 # macro
GL_BLEND_SRC_ALPHA = 0x80CB # macro
GL_BLEND_SRC_ALPHA_EXT = 0x80CB # macro
GL_BLEND_SRC_RGB = 0x80C9 # macro
GL_BLEND_SRC_RGB_EXT = 0x80C9 # macro
GL_BLOCK_INDEX = 0x92FD # macro
GL_BLUE = 0x1905 # macro
GL_BLUE_BIAS = 0x0D1B # macro
GL_BLUE_BITS = 0x0D54 # macro
GL_BLUE_BIT_ATI = 0x00000004 # macro
GL_BLUE_INTEGER = 0x8D96 # macro
GL_BLUE_INTEGER_EXT = 0x8D96 # macro
GL_BLUE_MAX_CLAMP_INGR = 0x8566 # macro
GL_BLUE_MIN_CLAMP_INGR = 0x8562 # macro
GL_BLUE_NV = 0x1905 # macro
GL_BLUE_SCALE = 0x0D1A # macro
GL_BOLD_BIT_NV = 0x01 # macro
GL_BOOL = 0x8B56 # macro
GL_BOOL_ARB = 0x8B56 # macro
GL_BOOL_VEC2 = 0x8B57 # macro
GL_BOOL_VEC2_ARB = 0x8B57 # macro
GL_BOOL_VEC3 = 0x8B58 # macro
GL_BOOL_VEC3_ARB = 0x8B58 # macro
GL_BOOL_VEC4 = 0x8B59 # macro
GL_BOOL_VEC4_ARB = 0x8B59 # macro
GL_BOUNDING_BOX_NV = 0x908D # macro
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV = 0x909C # macro
GL_BUFFER = 0x82E0 # macro
GL_BUFFER_ACCESS = 0x88BB # macro
GL_BUFFER_ACCESS_ARB = 0x88BB # macro
GL_BUFFER_ACCESS_FLAGS = 0x911F # macro
GL_BUFFER_BINDING = 0x9302 # macro
GL_BUFFER_DATA_SIZE = 0x9303 # macro
GL_BUFFER_FLUSHING_UNMAP_APPLE = 0x8A13 # macro
GL_BUFFER_GPU_ADDRESS_NV = 0x8F1D # macro
GL_BUFFER_IMMUTABLE_STORAGE = 0x821F # macro
GL_BUFFER_MAPPED = 0x88BC # macro
GL_BUFFER_MAPPED_ARB = 0x88BC # macro
GL_BUFFER_MAP_LENGTH = 0x9120 # macro
GL_BUFFER_MAP_OFFSET = 0x9121 # macro
GL_BUFFER_MAP_POINTER = 0x88BD # macro
GL_BUFFER_MAP_POINTER_ARB = 0x88BD # macro
GL_BUFFER_OBJECT_APPLE = 0x85B3 # macro
GL_BUFFER_OBJECT_EXT = 0x9151 # macro
GL_BUFFER_SERIALIZED_MODIFY_APPLE = 0x8A12 # macro
GL_BUFFER_SIZE = 0x8764 # macro
GL_BUFFER_SIZE_ARB = 0x8764 # macro
GL_BUFFER_STORAGE_FLAGS = 0x8220 # macro
GL_BUFFER_UPDATE_BARRIER_BIT = 0x00000200 # macro
GL_BUFFER_UPDATE_BARRIER_BIT_EXT = 0x00000200 # macro
GL_BUFFER_USAGE = 0x8765 # macro
GL_BUFFER_USAGE_ARB = 0x8765 # macro
GL_BUFFER_VARIABLE = 0x92E5 # macro
GL_BUMP_ENVMAP_ATI = 0x877B # macro
GL_BUMP_NUM_TEX_UNITS_ATI = 0x8777 # macro
GL_BUMP_ROT_MATRIX_ATI = 0x8775 # macro
GL_BUMP_ROT_MATRIX_SIZE_ATI = 0x8776 # macro
GL_BUMP_TARGET_ATI = 0x877C # macro
GL_BUMP_TEX_UNITS_ATI = 0x8778 # macro
GL_BYTE = 0x1400 # macro
GL_C3F_V3F = 0x2A24 # macro
GL_C4F_N3F_V3F = 0x2A26 # macro
GL_C4UB_V2F = 0x2A22 # macro
GL_C4UB_V3F = 0x2A23 # macro
GL_CALLIGRAPHIC_FRAGMENT_SGIX = 0x8183 # macro
GL_CAVEAT_SUPPORT = 0x82B8 # macro
GL_CCW = 0x0901 # macro
GL_CIRCULAR_CCW_ARC_TO_NV = 0xF8 # macro
GL_CIRCULAR_CW_ARC_TO_NV = 0xFA # macro
GL_CIRCULAR_TANGENT_ARC_TO_NV = 0xFC # macro
GL_CLAMP = 0x2900 # macro
GL_CLAMP_FRAGMENT_COLOR = 0x891B # macro
GL_CLAMP_FRAGMENT_COLOR_ARB = 0x891B # macro
GL_CLAMP_READ_COLOR = 0x891C # macro
GL_CLAMP_READ_COLOR_ARB = 0x891C # macro
GL_CLAMP_TO_BORDER = 0x812D # macro
GL_CLAMP_TO_BORDER_ARB = 0x812D # macro
GL_CLAMP_TO_BORDER_SGIS = 0x812D # macro
GL_CLAMP_TO_EDGE = 0x812F # macro
GL_CLAMP_TO_EDGE_SGIS = 0x812F # macro
GL_CLAMP_VERTEX_COLOR = 0x891A # macro
GL_CLAMP_VERTEX_COLOR_ARB = 0x891A # macro
GL_CLEAR = 0x1500 # macro
GL_CLEAR_BUFFER = 0x82B4 # macro
GL_CLEAR_TEXTURE = 0x9365 # macro
GL_CLIENT_ACTIVE_TEXTURE = 0x84E1 # macro
GL_CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1 # macro
GL_CLIENT_ALL_ATTRIB_BITS = 0xFFFFFFFF # macro
GL_CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1 # macro
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = 0x00004000 # macro
GL_CLIENT_PIXEL_STORE_BIT = 0x00000001 # macro
GL_CLIENT_STORAGE_BIT = 0x0200 # macro
GL_CLIENT_VERTEX_ARRAY_BIT = 0x00000002 # macro
GL_CLIPPING_INPUT_PRIMITIVES = 0x82F6 # macro
GL_CLIPPING_INPUT_PRIMITIVES_ARB = 0x82F6 # macro
GL_CLIPPING_OUTPUT_PRIMITIVES = 0x82F7 # macro
GL_CLIPPING_OUTPUT_PRIMITIVES_ARB = 0x82F7 # macro
GL_CLIP_DEPTH_MODE = 0x935D # macro
GL_CLIP_DISTANCE0 = 0x3000 # macro
GL_CLIP_DISTANCE1 = 0x3001 # macro
GL_CLIP_DISTANCE2 = 0x3002 # macro
GL_CLIP_DISTANCE3 = 0x3003 # macro
GL_CLIP_DISTANCE4 = 0x3004 # macro
GL_CLIP_DISTANCE5 = 0x3005 # macro
GL_CLIP_DISTANCE6 = 0x3006 # macro
GL_CLIP_DISTANCE7 = 0x3007 # macro
GL_CLIP_DISTANCE_NV = 0x8C7A # macro
GL_CLIP_FAR_HINT_PGI = 0x1A221 # macro
GL_CLIP_NEAR_HINT_PGI = 0x1A220 # macro
GL_CLIP_ORIGIN = 0x935C # macro
GL_CLIP_PLANE0 = 0x3000 # macro
GL_CLIP_PLANE1 = 0x3001 # macro
GL_CLIP_PLANE2 = 0x3002 # macro
GL_CLIP_PLANE3 = 0x3003 # macro
GL_CLIP_PLANE4 = 0x3004 # macro
GL_CLIP_PLANE5 = 0x3005 # macro
GL_CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80F0 # macro
GL_CLOSE_PATH_NV = 0x00 # macro
GL_CMYKA_EXT = 0x800D # macro
GL_CMYK_EXT = 0x800C # macro
GL_CND0_ATI = 0x896B # macro
GL_CND_ATI = 0x896A # macro
GL_COEFF = 0x0A00 # macro
GL_COLOR = 0x1800 # macro
GL_COLOR3_BIT_PGI = 0x00010000 # macro
GL_COLOR4_BIT_PGI = 0x00020000 # macro
GL_COLORBURN_KHR = 0x929A # macro
GL_COLORBURN_NV = 0x929A # macro
GL_COLORDODGE_KHR = 0x9299 # macro
GL_COLORDODGE_NV = 0x9299 # macro
GL_COLOR_ALPHA_PAIRING_ATI = 0x8975 # macro
GL_COLOR_ARRAY = 0x8076 # macro
GL_COLOR_ARRAY_ADDRESS_NV = 0x8F23 # macro
GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898 # macro
GL_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x8898 # macro
GL_COLOR_ARRAY_COUNT_EXT = 0x8084 # macro
GL_COLOR_ARRAY_EXT = 0x8076 # macro
GL_COLOR_ARRAY_LENGTH_NV = 0x8F2D # macro
GL_COLOR_ARRAY_LIST_IBM = 103072 # macro
GL_COLOR_ARRAY_LIST_STRIDE_IBM = 103082 # macro
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F7 # macro
GL_COLOR_ARRAY_POINTER = 0x8090 # macro
GL_COLOR_ARRAY_POINTER_EXT = 0x8090 # macro
GL_COLOR_ARRAY_SIZE = 0x8081 # macro
GL_COLOR_ARRAY_SIZE_EXT = 0x8081 # macro
GL_COLOR_ARRAY_STRIDE = 0x8083 # macro
GL_COLOR_ARRAY_STRIDE_EXT = 0x8083 # macro
GL_COLOR_ARRAY_TYPE = 0x8082 # macro
GL_COLOR_ARRAY_TYPE_EXT = 0x8082 # macro
GL_COLOR_ATTACHMENT0 = 0x8CE0 # macro
GL_COLOR_ATTACHMENT0_EXT = 0x8CE0 # macro
GL_COLOR_ATTACHMENT1 = 0x8CE1 # macro
GL_COLOR_ATTACHMENT10 = 0x8CEA # macro
GL_COLOR_ATTACHMENT10_EXT = 0x8CEA # macro
GL_COLOR_ATTACHMENT11 = 0x8CEB # macro
GL_COLOR_ATTACHMENT11_EXT = 0x8CEB # macro
GL_COLOR_ATTACHMENT12 = 0x8CEC # macro
GL_COLOR_ATTACHMENT12_EXT = 0x8CEC # macro
GL_COLOR_ATTACHMENT13 = 0x8CED # macro
GL_COLOR_ATTACHMENT13_EXT = 0x8CED # macro
GL_COLOR_ATTACHMENT14 = 0x8CEE # macro
GL_COLOR_ATTACHMENT14_EXT = 0x8CEE # macro
GL_COLOR_ATTACHMENT15 = 0x8CEF # macro
GL_COLOR_ATTACHMENT15_EXT = 0x8CEF # macro
GL_COLOR_ATTACHMENT16 = 0x8CF0 # macro
GL_COLOR_ATTACHMENT17 = 0x8CF1 # macro
GL_COLOR_ATTACHMENT18 = 0x8CF2 # macro
GL_COLOR_ATTACHMENT19 = 0x8CF3 # macro
GL_COLOR_ATTACHMENT1_EXT = 0x8CE1 # macro
GL_COLOR_ATTACHMENT2 = 0x8CE2 # macro
GL_COLOR_ATTACHMENT20 = 0x8CF4 # macro
GL_COLOR_ATTACHMENT21 = 0x8CF5 # macro
GL_COLOR_ATTACHMENT22 = 0x8CF6 # macro
GL_COLOR_ATTACHMENT23 = 0x8CF7 # macro
GL_COLOR_ATTACHMENT24 = 0x8CF8 # macro
GL_COLOR_ATTACHMENT25 = 0x8CF9 # macro
GL_COLOR_ATTACHMENT26 = 0x8CFA # macro
GL_COLOR_ATTACHMENT27 = 0x8CFB # macro
GL_COLOR_ATTACHMENT28 = 0x8CFC # macro
GL_COLOR_ATTACHMENT29 = 0x8CFD # macro
GL_COLOR_ATTACHMENT2_EXT = 0x8CE2 # macro
GL_COLOR_ATTACHMENT3 = 0x8CE3 # macro
GL_COLOR_ATTACHMENT30 = 0x8CFE # macro
GL_COLOR_ATTACHMENT31 = 0x8CFF # macro
GL_COLOR_ATTACHMENT3_EXT = 0x8CE3 # macro
GL_COLOR_ATTACHMENT4 = 0x8CE4 # macro
GL_COLOR_ATTACHMENT4_EXT = 0x8CE4 # macro
GL_COLOR_ATTACHMENT5 = 0x8CE5 # macro
GL_COLOR_ATTACHMENT5_EXT = 0x8CE5 # macro
GL_COLOR_ATTACHMENT6 = 0x8CE6 # macro
GL_COLOR_ATTACHMENT6_EXT = 0x8CE6 # macro
GL_COLOR_ATTACHMENT7 = 0x8CE7 # macro
GL_COLOR_ATTACHMENT7_EXT = 0x8CE7 # macro
GL_COLOR_ATTACHMENT8 = 0x8CE8 # macro
GL_COLOR_ATTACHMENT8_EXT = 0x8CE8 # macro
GL_COLOR_ATTACHMENT9 = 0x8CE9 # macro
GL_COLOR_ATTACHMENT9_EXT = 0x8CE9 # macro
GL_COLOR_BUFFER_BIT = 0x00004000 # macro
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = 0x8835 # macro
GL_COLOR_CLEAR_VALUE = 0x0C22 # macro
GL_COLOR_COMPONENTS = 0x8283 # macro
GL_COLOR_ENCODING = 0x8296 # macro
GL_COLOR_FLOAT_APPLE = 0x8A0F # macro
GL_COLOR_INDEX = 0x1900 # macro
GL_COLOR_INDEX12_EXT = 0x80E6 # macro
GL_COLOR_INDEX16_EXT = 0x80E7 # macro
GL_COLOR_INDEX1_EXT = 0x80E2 # macro
GL_COLOR_INDEX2_EXT = 0x80E3 # macro
GL_COLOR_INDEX4_EXT = 0x80E4 # macro
GL_COLOR_INDEX8_EXT = 0x80E5 # macro
GL_COLOR_INDEXES = 0x1603 # macro
GL_COLOR_LOGIC_OP = 0x0BF2 # macro
GL_COLOR_MATERIAL = 0x0B57 # macro
GL_COLOR_MATERIAL_FACE = 0x0B55 # macro
GL_COLOR_MATERIAL_PARAMETER = 0x0B56 # macro
GL_COLOR_MATRIX = 0x80B1 # macro
GL_COLOR_MATRIX_SGI = 0x80B1 # macro
GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2 # macro
GL_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B2 # macro
GL_COLOR_RENDERABLE = 0x8286 # macro
GL_COLOR_SAMPLES_NV = 0x8E20 # macro
GL_COLOR_SUM = 0x8458 # macro
GL_COLOR_SUM_ARB = 0x8458 # macro
GL_COLOR_SUM_CLAMP_NV = 0x854F # macro
GL_COLOR_SUM_EXT = 0x8458 # macro
GL_COLOR_TABLE = 0x80D0 # macro
GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD # macro
GL_COLOR_TABLE_ALPHA_SIZE_SGI = 0x80DD # macro
GL_COLOR_TABLE_BIAS = 0x80D7 # macro
GL_COLOR_TABLE_BIAS_SGI = 0x80D7 # macro
GL_COLOR_TABLE_BLUE_SIZE = 0x80DC # macro
GL_COLOR_TABLE_BLUE_SIZE_SGI = 0x80DC # macro
GL_COLOR_TABLE_FORMAT = 0x80D8 # macro
GL_COLOR_TABLE_FORMAT_SGI = 0x80D8 # macro
GL_COLOR_TABLE_GREEN_SIZE = 0x80DB # macro
GL_COLOR_TABLE_GREEN_SIZE_SGI = 0x80DB # macro
GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF # macro
GL_COLOR_TABLE_INTENSITY_SIZE_SGI = 0x80DF # macro
GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE # macro
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = 0x80DE # macro
GL_COLOR_TABLE_RED_SIZE = 0x80DA # macro
GL_COLOR_TABLE_RED_SIZE_SGI = 0x80DA # macro
GL_COLOR_TABLE_SCALE = 0x80D6 # macro
GL_COLOR_TABLE_SCALE_SGI = 0x80D6 # macro
GL_COLOR_TABLE_SGI = 0x80D0 # macro
GL_COLOR_TABLE_WIDTH = 0x80D9 # macro
GL_COLOR_TABLE_WIDTH_SGI = 0x80D9 # macro
GL_COLOR_WRITEMASK = 0x0C23 # macro
GL_COMBINE = 0x8570 # macro
GL_COMBINE4_NV = 0x8503 # macro
GL_COMBINER0_NV = 0x8550 # macro
GL_COMBINER1_NV = 0x8551 # macro
GL_COMBINER2_NV = 0x8552 # macro
GL_COMBINER3_NV = 0x8553 # macro
GL_COMBINER4_NV = 0x8554 # macro
GL_COMBINER5_NV = 0x8555 # macro
GL_COMBINER6_NV = 0x8556 # macro
GL_COMBINER7_NV = 0x8557 # macro
GL_COMBINER_AB_DOT_PRODUCT_NV = 0x8545 # macro
GL_COMBINER_AB_OUTPUT_NV = 0x854A # macro
GL_COMBINER_BIAS_NV = 0x8549 # macro
GL_COMBINER_CD_DOT_PRODUCT_NV = 0x8546 # macro
GL_COMBINER_CD_OUTPUT_NV = 0x854B # macro
GL_COMBINER_COMPONENT_USAGE_NV = 0x8544 # macro
GL_COMBINER_INPUT_NV = 0x8542 # macro
GL_COMBINER_MAPPING_NV = 0x8543 # macro
GL_COMBINER_MUX_SUM_NV = 0x8547 # macro
GL_COMBINER_SCALE_NV = 0x8548 # macro
GL_COMBINER_SUM_OUTPUT_NV = 0x854C # macro
GL_COMBINE_ALPHA = 0x8572 # macro
GL_COMBINE_ALPHA_ARB = 0x8572 # macro
GL_COMBINE_ALPHA_EXT = 0x8572 # macro
GL_COMBINE_ARB = 0x8570 # macro
GL_COMBINE_EXT = 0x8570 # macro
GL_COMBINE_RGB = 0x8571 # macro
GL_COMBINE_RGB_ARB = 0x8571 # macro
GL_COMBINE_RGB_EXT = 0x8571 # macro
GL_COMMAND_BARRIER_BIT = 0x00000040 # macro
GL_COMMAND_BARRIER_BIT_EXT = 0x00000040 # macro
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = 0x884E # macro
GL_COMPARE_REF_TO_TEXTURE = 0x884E # macro
GL_COMPARE_R_TO_TEXTURE = 0x884E # macro
GL_COMPARE_R_TO_TEXTURE_ARB = 0x884E # macro
GL_COMPATIBLE_SUBROUTINES = 0x8E4B # macro
GL_COMPILE = 0x1300 # macro
GL_COMPILE_AND_EXECUTE = 0x1301 # macro
GL_COMPILE_STATUS = 0x8B81 # macro
GL_COMPLETION_STATUS_ARB = 0x91B1 # macro
GL_COMPLETION_STATUS_KHR = 0x91B1 # macro
GL_COMPRESSED_ALPHA = 0x84E9 # macro
GL_COMPRESSED_ALPHA_ARB = 0x84E9 # macro
GL_COMPRESSED_INTENSITY = 0x84EC # macro
GL_COMPRESSED_INTENSITY_ARB = 0x84EC # macro
GL_COMPRESSED_LUMINANCE = 0x84EA # macro
GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB # macro
GL_COMPRESSED_LUMINANCE_ALPHA_ARB = 0x84EB # macro
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C72 # macro
GL_COMPRESSED_LUMINANCE_ARB = 0x84EA # macro
GL_COMPRESSED_LUMINANCE_LATC1_EXT = 0x8C70 # macro
GL_COMPRESSED_R11_EAC = 0x9270 # macro
GL_COMPRESSED_RED = 0x8225 # macro
GL_COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD # macro
GL_COMPRESSED_RED_RGTC1 = 0x8DBB # macro
GL_COMPRESSED_RED_RGTC1_EXT = 0x8DBB # macro
GL_COMPRESSED_RG = 0x8226 # macro
GL_COMPRESSED_RG11_EAC = 0x9272 # macro
GL_COMPRESSED_RGB = 0x84ED # macro
GL_COMPRESSED_RGB8_ETC2 = 0x9274 # macro
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276 # macro
GL_COMPRESSED_RGBA = 0x84EE # macro
GL_COMPRESSED_RGBA8_ETC2_EAC = 0x9278 # macro
GL_COMPRESSED_RGBA_ARB = 0x84EE # macro
GL_COMPRESSED_RGBA_ASTC_10x10_KHR = 0x93BB # macro
GL_COMPRESSED_RGBA_ASTC_10x5_KHR = 0x93B8 # macro
GL_COMPRESSED_RGBA_ASTC_10x6_KHR = 0x93B9 # macro
GL_COMPRESSED_RGBA_ASTC_10x8_KHR = 0x93BA # macro
GL_COMPRESSED_RGBA_ASTC_12x10_KHR = 0x93BC # macro
GL_COMPRESSED_RGBA_ASTC_12x12_KHR = 0x93BD # macro
GL_COMPRESSED_RGBA_ASTC_4x4_KHR = 0x93B0 # macro
GL_COMPRESSED_RGBA_ASTC_5x4_KHR = 0x93B1 # macro
GL_COMPRESSED_RGBA_ASTC_5x5_KHR = 0x93B2 # macro
GL_COMPRESSED_RGBA_ASTC_6x5_KHR = 0x93B3 # macro
GL_COMPRESSED_RGBA_ASTC_6x6_KHR = 0x93B4 # macro
GL_COMPRESSED_RGBA_ASTC_8x5_KHR = 0x93B5 # macro
GL_COMPRESSED_RGBA_ASTC_8x6_KHR = 0x93B6 # macro
GL_COMPRESSED_RGBA_ASTC_8x8_KHR = 0x93B7 # macro
GL_COMPRESSED_RGBA_BPTC_UNORM = 0x8E8C # macro
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = 0x8E8C # macro
GL_COMPRESSED_RGBA_FXT1_3DFX = 0x86B1 # macro
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1 # macro
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2 # macro
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3 # macro
GL_COMPRESSED_RGB_ARB = 0x84ED # macro
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = 0x8E8E # macro
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = 0x8E8E # macro
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = 0x8E8F # macro
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = 0x8E8F # macro
GL_COMPRESSED_RGB_FXT1_3DFX = 0x86B0 # macro
GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0 # macro
GL_COMPRESSED_RG_RGTC2 = 0x8DBD # macro
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C73 # macro
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8C71 # macro
GL_COMPRESSED_SIGNED_R11_EAC = 0x9271 # macro
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE # macro
GL_COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC # macro
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC # macro
GL_COMPRESSED_SIGNED_RG11_EAC = 0x9273 # macro
GL_COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE # macro
GL_COMPRESSED_SLUMINANCE = 0x8C4A # macro
GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B # macro
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT = 0x8C4B # macro
GL_COMPRESSED_SLUMINANCE_EXT = 0x8C4A # macro
GL_COMPRESSED_SRGB = 0x8C48 # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 0x93DB # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 0x93D8 # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 0x93D9 # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 0x93DA # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 0x93DC # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 0x93DD # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 0x93D0 # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 0x93D1 # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 0x93D2 # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 0x93D3 # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 0x93D4 # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 0x93D5 # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 0x93D6 # macro
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 0x93D7 # macro
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279 # macro
GL_COMPRESSED_SRGB8_ETC2 = 0x9275 # macro
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277 # macro
GL_COMPRESSED_SRGB_ALPHA = 0x8C49 # macro
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = 0x8E8D # macro
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = 0x8E8D # macro
GL_COMPRESSED_SRGB_ALPHA_EXT = 0x8C49 # macro
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8C4D # macro
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8C4E # macro
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8C4F # macro
GL_COMPRESSED_SRGB_EXT = 0x8C48 # macro
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8C4C # macro
GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3 # macro
GL_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A3 # macro
GL_COMPUTE_PROGRAM_NV = 0x90FB # macro
GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV = 0x90FC # macro
GL_COMPUTE_SHADER = 0x91B9 # macro
GL_COMPUTE_SHADER_BIT = 0x00000020 # macro
GL_COMPUTE_SHADER_INVOCATIONS = 0x82F5 # macro
GL_COMPUTE_SHADER_INVOCATIONS_ARB = 0x82F5 # macro
GL_COMPUTE_SUBROUTINE = 0x92ED # macro
GL_COMPUTE_SUBROUTINE_UNIFORM = 0x92F3 # macro
GL_COMPUTE_TEXTURE = 0x82A0 # macro
GL_COMPUTE_WORK_GROUP_SIZE = 0x8267 # macro
GL_COMP_BIT_ATI = 0x00000002 # macro
GL_CONDITION_SATISFIED = 0x911C # macro
GL_CONFORMANT_NV = 0x9374 # macro
GL_CONIC_CURVE_TO_NV = 0x1A # macro
GL_CONJOINT_NV = 0x9284 # macro
GL_CONSERVATIVE_RASTERIZATION_INTEL = 0x83FE # macro
GL_CONSERVATIVE_RASTERIZATION_NV = 0x9346 # macro
GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV = 0x937B # macro
GL_CONSERVATIVE_RASTER_DILATE_NV = 0x9379 # macro
GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV = 0x937A # macro
GL_CONSERVATIVE_RASTER_MODE_NV = 0x954D # macro
GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV = 0x954E # macro
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV = 0x9550 # macro
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV = 0x954F # macro
GL_CONSERVE_MEMORY_HINT_PGI = 0x1A1FD # macro
GL_CONSTANT = 0x8576 # macro
GL_CONSTANT_ALPHA = 0x8003 # macro
GL_CONSTANT_ALPHA_EXT = 0x8003 # macro
GL_CONSTANT_ARB = 0x8576 # macro
GL_CONSTANT_ATTENUATION = 0x1207 # macro
GL_CONSTANT_BORDER = 0x8151 # macro
GL_CONSTANT_BORDER_HP = 0x8151 # macro
GL_CONSTANT_COLOR = 0x8001 # macro
GL_CONSTANT_COLOR0_NV = 0x852A # macro
GL_CONSTANT_COLOR1_NV = 0x852B # macro
GL_CONSTANT_COLOR_EXT = 0x8001 # macro
GL_CONSTANT_EXT = 0x8576 # macro
GL_CONSTANT_NV = 0x8576 # macro
GL_CONST_EYE_NV = 0x86E5 # macro
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002 # macro
GL_CONTEXT_CORE_PROFILE_BIT = 0x00000001 # macro
GL_CONTEXT_FLAGS = 0x821E # macro
GL_CONTEXT_FLAG_DEBUG_BIT = 0x00000002 # macro
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x00000001 # macro
GL_CONTEXT_FLAG_NO_ERROR_BIT = 0x00000008 # macro
GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR = 0x00000008 # macro
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = 0x00000004 # macro
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = 0x00000004 # macro
GL_CONTEXT_LOST = 0x0507 # macro
GL_CONTEXT_PROFILE_MASK = 0x9126 # macro
GL_CONTEXT_RELEASE_BEHAVIOR = 0x82FB # macro
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0x82FC # macro
GL_CONTEXT_ROBUST_ACCESS = 0x90F3 # macro
GL_CONTINUOUS_AMD = 0x9007 # macro
GL_CONTRAST_NV = 0x92A1 # macro
GL_CONVEX_HULL_NV = 0x908B # macro
GL_CONVOLUTION_1D = 0x8010 # macro
GL_CONVOLUTION_1D_EXT = 0x8010 # macro
GL_CONVOLUTION_2D = 0x8011 # macro
GL_CONVOLUTION_2D_EXT = 0x8011 # macro
GL_CONVOLUTION_BORDER_COLOR = 0x8154 # macro
GL_CONVOLUTION_BORDER_COLOR_HP = 0x8154 # macro
GL_CONVOLUTION_BORDER_MODE = 0x8013 # macro
GL_CONVOLUTION_BORDER_MODE_EXT = 0x8013 # macro
GL_CONVOLUTION_FILTER_BIAS = 0x8015 # macro
GL_CONVOLUTION_FILTER_BIAS_EXT = 0x8015 # macro
GL_CONVOLUTION_FILTER_SCALE = 0x8014 # macro
GL_CONVOLUTION_FILTER_SCALE_EXT = 0x8014 # macro
GL_CONVOLUTION_FORMAT = 0x8017 # macro
GL_CONVOLUTION_FORMAT_EXT = 0x8017 # macro
GL_CONVOLUTION_HEIGHT = 0x8019 # macro
GL_CONVOLUTION_HEIGHT_EXT = 0x8019 # macro
GL_CONVOLUTION_HINT_SGIX = 0x8316 # macro
GL_CONVOLUTION_WIDTH = 0x8018 # macro
GL_CONVOLUTION_WIDTH_EXT = 0x8018 # macro
GL_CON_0_ATI = 0x8941 # macro
GL_CON_10_ATI = 0x894B # macro
GL_CON_11_ATI = 0x894C # macro
GL_CON_12_ATI = 0x894D # macro
GL_CON_13_ATI = 0x894E # macro
GL_CON_14_ATI = 0x894F # macro
GL_CON_15_ATI = 0x8950 # macro
GL_CON_16_ATI = 0x8951 # macro
GL_CON_17_ATI = 0x8952 # macro
GL_CON_18_ATI = 0x8953 # macro
GL_CON_19_ATI = 0x8954 # macro
GL_CON_1_ATI = 0x8942 # macro
GL_CON_20_ATI = 0x8955 # macro
GL_CON_21_ATI = 0x8956 # macro
GL_CON_22_ATI = 0x8957 # macro
GL_CON_23_ATI = 0x8958 # macro
GL_CON_24_ATI = 0x8959 # macro
GL_CON_25_ATI = 0x895A # macro
GL_CON_26_ATI = 0x895B # macro
GL_CON_27_ATI = 0x895C # macro
GL_CON_28_ATI = 0x895D # macro
GL_CON_29_ATI = 0x895E # macro
GL_CON_2_ATI = 0x8943 # macro
GL_CON_30_ATI = 0x895F # macro
GL_CON_31_ATI = 0x8960 # macro
GL_CON_3_ATI = 0x8944 # macro
GL_CON_4_ATI = 0x8945 # macro
GL_CON_5_ATI = 0x8946 # macro
GL_CON_6_ATI = 0x8947 # macro
GL_CON_7_ATI = 0x8948 # macro
GL_CON_8_ATI = 0x8949 # macro
GL_CON_9_ATI = 0x894A # macro
GL_COORD_REPLACE = 0x8862 # macro
GL_COORD_REPLACE_ARB = 0x8862 # macro
GL_COORD_REPLACE_NV = 0x8862 # macro
GL_COPY = 0x1503 # macro
GL_COPY_INVERTED = 0x150C # macro
GL_COPY_PIXEL_TOKEN = 0x0706 # macro
GL_COPY_READ_BUFFER = 0x8F36 # macro
GL_COPY_READ_BUFFER_BINDING = 0x8F36 # macro
GL_COPY_WRITE_BUFFER = 0x8F37 # macro
GL_COPY_WRITE_BUFFER_BINDING = 0x8F37 # macro
GL_COUNTER_RANGE_AMD = 0x8BC1 # macro
GL_COUNTER_TYPE_AMD = 0x8BC0 # macro
GL_COUNT_DOWN_NV = 0x9089 # macro
GL_COUNT_UP_NV = 0x9088 # macro
GL_COVERAGE_MODULATION_NV = 0x9332 # macro
GL_COVERAGE_MODULATION_TABLE_NV = 0x9331 # macro
GL_COVERAGE_MODULATION_TABLE_SIZE_NV = 0x9333 # macro
GL_CUBIC_CURVE_TO_NV = 0x0C # macro
GL_CUBIC_EXT = 0x8334 # macro
GL_CUBIC_HP = 0x815F # macro
GL_CULL_FACE = 0x0B44 # macro
GL_CULL_FACE_MODE = 0x0B45 # macro
GL_CULL_FRAGMENT_NV = 0x86E7 # macro
GL_CULL_MODES_NV = 0x86E0 # macro
GL_CULL_VERTEX_EXT = 0x81AA # macro
GL_CULL_VERTEX_EYE_POSITION_EXT = 0x81AB # macro
GL_CULL_VERTEX_IBM = 103050 # macro
GL_CULL_VERTEX_OBJECT_POSITION_EXT = 0x81AC # macro
GL_CURRENT_ATTRIB_NV = 0x8626 # macro
GL_CURRENT_BINORMAL_EXT = 0x843C # macro
GL_CURRENT_BIT = 0x00000001 # macro
GL_CURRENT_COLOR = 0x0B00 # macro
GL_CURRENT_FOG_COORD = 0x8453 # macro
GL_CURRENT_FOG_COORDINATE = 0x8453 # macro
GL_CURRENT_FOG_COORDINATE_EXT = 0x8453 # macro
GL_CURRENT_INDEX = 0x0B01 # macro
GL_CURRENT_MATRIX_ARB = 0x8641 # macro
GL_CURRENT_MATRIX_INDEX_ARB = 0x8845 # macro
GL_CURRENT_MATRIX_NV = 0x8641 # macro
GL_CURRENT_MATRIX_STACK_DEPTH_ARB = 0x8640 # macro
GL_CURRENT_MATRIX_STACK_DEPTH_NV = 0x8640 # macro
GL_CURRENT_NORMAL = 0x0B02 # macro
GL_CURRENT_OCCLUSION_QUERY_ID_NV = 0x8865 # macro
GL_CURRENT_PALETTE_MATRIX_ARB = 0x8843 # macro
GL_CURRENT_PROGRAM = 0x8B8D # macro
GL_CURRENT_QUERY = 0x8865 # macro
GL_CURRENT_QUERY_ARB = 0x8865 # macro
GL_CURRENT_RASTER_COLOR = 0x0B04 # macro
GL_CURRENT_RASTER_DISTANCE = 0x0B09 # macro
GL_CURRENT_RASTER_INDEX = 0x0B05 # macro
GL_CURRENT_RASTER_NORMAL_SGIX = 0x8406 # macro
GL_CURRENT_RASTER_POSITION = 0x0B07 # macro
GL_CURRENT_RASTER_POSITION_VALID = 0x0B08 # macro
GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F # macro
GL_CURRENT_RASTER_TEXTURE_COORDS = 0x0B06 # macro
GL_CURRENT_SECONDARY_COLOR = 0x8459 # macro
GL_CURRENT_SECONDARY_COLOR_EXT = 0x8459 # macro
GL_CURRENT_TANGENT_EXT = 0x843B # macro
GL_CURRENT_TEXTURE_COORDS = 0x0B03 # macro
GL_CURRENT_TIME_NV = 0x8E28 # macro
GL_CURRENT_VERTEX_ATTRIB = 0x8626 # macro
GL_CURRENT_VERTEX_ATTRIB_ARB = 0x8626 # macro
GL_CURRENT_VERTEX_EXT = 0x87E2 # macro
GL_CURRENT_VERTEX_WEIGHT_EXT = 0x850B # macro
GL_CURRENT_WEIGHT_ARB = 0x86A8 # macro
GL_CW = 0x0900 # macro
GL_D3D12_FENCE_VALUE_EXT = 0x9595 # macro
GL_DARKEN_KHR = 0x9297 # macro
GL_DARKEN_NV = 0x9297 # macro
GL_DATA_BUFFER_AMD = 0x9151 # macro
GL_DEBUG_CALLBACK_FUNCTION = 0x8244 # macro
GL_DEBUG_CALLBACK_FUNCTION_ARB = 0x8244 # macro
GL_DEBUG_CALLBACK_USER_PARAM = 0x8245 # macro
GL_DEBUG_CALLBACK_USER_PARAM_ARB = 0x8245 # macro
GL_DEBUG_CATEGORY_API_ERROR_AMD = 0x9149 # macro
GL_DEBUG_CATEGORY_APPLICATION_AMD = 0x914F # macro
GL_DEBUG_CATEGORY_DEPRECATION_AMD = 0x914B # macro
GL_DEBUG_CATEGORY_OTHER_AMD = 0x9150 # macro
GL_DEBUG_CATEGORY_PERFORMANCE_AMD = 0x914D # macro
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD = 0x914E # macro
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD = 0x914C # macro
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD = 0x914A # macro
GL_DEBUG_GROUP_STACK_DEPTH = 0x826D # macro
GL_DEBUG_LOGGED_MESSAGES = 0x9145 # macro
GL_DEBUG_LOGGED_MESSAGES_AMD = 0x9145 # macro
GL_DEBUG_LOGGED_MESSAGES_ARB = 0x9145 # macro
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 0x8243 # macro
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = 0x8243 # macro
GL_DEBUG_OUTPUT = 0x92E0 # macro
GL_DEBUG_OUTPUT_SYNCHRONOUS = 0x8242 # macro
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB = 0x8242 # macro
GL_DEBUG_SEVERITY_HIGH = 0x9146 # macro
GL_DEBUG_SEVERITY_HIGH_AMD = 0x9146 # macro
GL_DEBUG_SEVERITY_HIGH_ARB = 0x9146 # macro
GL_DEBUG_SEVERITY_LOW = 0x9148 # macro
GL_DEBUG_SEVERITY_LOW_AMD = 0x9148 # macro
GL_DEBUG_SEVERITY_LOW_ARB = 0x9148 # macro
GL_DEBUG_SEVERITY_MEDIUM = 0x9147 # macro
GL_DEBUG_SEVERITY_MEDIUM_AMD = 0x9147 # macro
GL_DEBUG_SEVERITY_MEDIUM_ARB = 0x9147 # macro
GL_DEBUG_SEVERITY_NOTIFICATION = 0x826B # macro
GL_DEBUG_SOURCE_API = 0x8246 # macro
GL_DEBUG_SOURCE_API_ARB = 0x8246 # macro
GL_DEBUG_SOURCE_APPLICATION = 0x824A # macro
GL_DEBUG_SOURCE_APPLICATION_ARB = 0x824A # macro
GL_DEBUG_SOURCE_OTHER = 0x824B # macro
GL_DEBUG_SOURCE_OTHER_ARB = 0x824B # macro
GL_DEBUG_SOURCE_SHADER_COMPILER = 0x8248 # macro
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB = 0x8248 # macro
GL_DEBUG_SOURCE_THIRD_PARTY = 0x8249 # macro
GL_DEBUG_SOURCE_THIRD_PARTY_ARB = 0x8249 # macro
GL_DEBUG_SOURCE_WINDOW_SYSTEM = 0x8247 # macro
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = 0x8247 # macro
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = 0x824D # macro
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = 0x824D # macro
GL_DEBUG_TYPE_ERROR = 0x824C # macro
GL_DEBUG_TYPE_ERROR_ARB = 0x824C # macro
GL_DEBUG_TYPE_MARKER = 0x8268 # macro
GL_DEBUG_TYPE_OTHER = 0x8251 # macro
GL_DEBUG_TYPE_OTHER_ARB = 0x8251 # macro
GL_DEBUG_TYPE_PERFORMANCE = 0x8250 # macro
GL_DEBUG_TYPE_PERFORMANCE_ARB = 0x8250 # macro
GL_DEBUG_TYPE_POP_GROUP = 0x826A # macro
GL_DEBUG_TYPE_PORTABILITY = 0x824F # macro
GL_DEBUG_TYPE_PORTABILITY_ARB = 0x824F # macro
GL_DEBUG_TYPE_PUSH_GROUP = 0x8269 # macro
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = 0x824E # macro
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = 0x824E # macro
GL_DECAL = 0x2101 # macro
GL_DECODE_EXT = 0x8A49 # macro
GL_DECR = 0x1E03 # macro
GL_DECR_WRAP = 0x8508 # macro
GL_DECR_WRAP_EXT = 0x8508 # macro
GL_DEDICATED_MEMORY_OBJECT_EXT = 0x9581 # macro
GL_DEFORMATIONS_MASK_SGIX = 0x8196 # macro
GL_DELETE_STATUS = 0x8B80 # macro
GL_DEPENDENT_AR_TEXTURE_2D_NV = 0x86E9 # macro
GL_DEPENDENT_GB_TEXTURE_2D_NV = 0x86EA # macro
GL_DEPENDENT_HILO_TEXTURE_2D_NV = 0x8858 # macro
GL_DEPENDENT_RGB_TEXTURE_3D_NV = 0x8859 # macro
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = 0x885A # macro
GL_DEPTH = 0x1801 # macro
GL_DEPTH24_STENCIL8 = 0x88F0 # macro
GL_DEPTH24_STENCIL8_EXT = 0x88F0 # macro
GL_DEPTH32F_STENCIL8 = 0x8CAD # macro
GL_DEPTH32F_STENCIL8_NV = 0x8DAC # macro
GL_DEPTH_ATTACHMENT = 0x8D00 # macro
GL_DEPTH_ATTACHMENT_EXT = 0x8D00 # macro
GL_DEPTH_BIAS = 0x0D1F # macro
GL_DEPTH_BITS = 0x0D56 # macro
GL_DEPTH_BOUNDS_EXT = 0x8891 # macro
GL_DEPTH_BOUNDS_TEST_EXT = 0x8890 # macro
GL_DEPTH_BUFFER_BIT = 0x00000100 # macro
GL_DEPTH_BUFFER_FLOAT_MODE_NV = 0x8DAF # macro
GL_DEPTH_CLAMP = 0x864F # macro
GL_DEPTH_CLAMP_FAR_AMD = 0x901F # macro
GL_DEPTH_CLAMP_NEAR_AMD = 0x901E # macro
GL_DEPTH_CLAMP_NV = 0x864F # macro
GL_DEPTH_CLEAR_VALUE = 0x0B73 # macro
GL_DEPTH_COMPONENT = 0x1902 # macro
GL_DEPTH_COMPONENT16 = 0x81A5 # macro
GL_DEPTH_COMPONENT16_ARB = 0x81A5 # macro
GL_DEPTH_COMPONENT16_SGIX = 0x81A5 # macro
GL_DEPTH_COMPONENT24 = 0x81A6 # macro
GL_DEPTH_COMPONENT24_ARB = 0x81A6 # macro
GL_DEPTH_COMPONENT24_SGIX = 0x81A6 # macro
GL_DEPTH_COMPONENT32 = 0x81A7 # macro
GL_DEPTH_COMPONENT32F = 0x8CAC # macro
GL_DEPTH_COMPONENT32F_NV = 0x8DAB # macro
GL_DEPTH_COMPONENT32_ARB = 0x81A7 # macro
GL_DEPTH_COMPONENT32_SGIX = 0x81A7 # macro
GL_DEPTH_COMPONENTS = 0x8284 # macro
GL_DEPTH_FUNC = 0x0B74 # macro
GL_DEPTH_RANGE = 0x0B70 # macro
GL_DEPTH_RENDERABLE = 0x8287 # macro
GL_DEPTH_SAMPLES_NV = 0x932D # macro
GL_DEPTH_SCALE = 0x0D1E # macro
GL_DEPTH_STENCIL = 0x84F9 # macro
GL_DEPTH_STENCIL_ATTACHMENT = 0x821A # macro
GL_DEPTH_STENCIL_EXT = 0x84F9 # macro
GL_DEPTH_STENCIL_NV = 0x84F9 # macro
GL_DEPTH_STENCIL_TEXTURE_MODE = 0x90EA # macro
GL_DEPTH_STENCIL_TO_BGRA_NV = 0x886F # macro
GL_DEPTH_STENCIL_TO_RGBA_NV = 0x886E # macro
GL_DEPTH_TEST = 0x0B71 # macro
GL_DEPTH_TEXTURE_MODE = 0x884B # macro
GL_DEPTH_TEXTURE_MODE_ARB = 0x884B # macro
GL_DEPTH_WRITEMASK = 0x0B72 # macro
GL_DETACHED_BUFFERS_NV = 0x95AB # macro
GL_DETACHED_MEMORY_INCARNATION_NV = 0x95A9 # macro
GL_DETACHED_TEXTURES_NV = 0x95AA # macro
GL_DETAIL_TEXTURE_2D_BINDING_SGIS = 0x8096 # macro
GL_DETAIL_TEXTURE_2D_SGIS = 0x8095 # macro
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = 0x809C # macro
GL_DETAIL_TEXTURE_LEVEL_SGIS = 0x809A # macro
GL_DETAIL_TEXTURE_MODE_SGIS = 0x809B # macro
GL_DEVICE_LUID_EXT = 0x9599 # macro
GL_DEVICE_NODE_MASK_EXT = 0x959A # macro
GL_DEVICE_UUID_EXT = 0x9597 # macro
GL_DIFFERENCE_KHR = 0x929E # macro
GL_DIFFERENCE_NV = 0x929E # macro
GL_DIFFUSE = 0x1201 # macro
GL_DISCARD_ATI = 0x8763 # macro
GL_DISCARD_NV = 0x8530 # macro
GL_DISCRETE_AMD = 0x9006 # macro
GL_DISJOINT_NV = 0x9283 # macro
GL_DISPATCH_INDIRECT_BUFFER = 0x90EE # macro
GL_DISPATCH_INDIRECT_BUFFER_BINDING = 0x90EF # macro
GL_DISPLAY_LIST = 0x82E7 # macro
GL_DISTANCE_ATTENUATION_EXT = 0x8129 # macro
GL_DISTANCE_ATTENUATION_SGIS = 0x8129 # macro
GL_DITHER = 0x0BD0 # macro
GL_DOMAIN = 0x0A02 # macro
GL_DONT_CARE = 0x1100 # macro
GL_DOT2_ADD_ATI = 0x896C # macro
GL_DOT3_ATI = 0x8966 # macro
GL_DOT3_RGB = 0x86AE # macro
GL_DOT3_RGBA = 0x86AF # macro
GL_DOT3_RGBA_ARB = 0x86AF # macro
GL_DOT3_RGBA_EXT = 0x8741 # macro
GL_DOT3_RGB_ARB = 0x86AE # macro
GL_DOT3_RGB_EXT = 0x8740 # macro
GL_DOT4_ATI = 0x8967 # macro
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = 0x885D # macro
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = 0x86F3 # macro
GL_DOT_PRODUCT_DEPTH_REPLACE_NV = 0x86ED # macro
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = 0x86F1 # macro
GL_DOT_PRODUCT_NV = 0x86EC # macro
GL_DOT_PRODUCT_PASS_THROUGH_NV = 0x885B # macro
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV = 0x86F2 # macro
GL_DOT_PRODUCT_TEXTURE_1D_NV = 0x885C # macro
GL_DOT_PRODUCT_TEXTURE_2D_NV = 0x86EE # macro
GL_DOT_PRODUCT_TEXTURE_3D_NV = 0x86EF # macro
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = 0x86F0 # macro
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV = 0x864E # macro
GL_DOUBLE = 0x140A # macro
GL_DOUBLEBUFFER = 0x0C32 # macro
GL_DOUBLE_MAT2 = 0x8F46 # macro
GL_DOUBLE_MAT2_EXT = 0x8F46 # macro
GL_DOUBLE_MAT2x3 = 0x8F49 # macro
GL_DOUBLE_MAT2x3_EXT = 0x8F49 # macro
GL_DOUBLE_MAT2x4 = 0x8F4A # macro
GL_DOUBLE_MAT2x4_EXT = 0x8F4A # macro
GL_DOUBLE_MAT3 = 0x8F47 # macro
GL_DOUBLE_MAT3_EXT = 0x8F47 # macro
GL_DOUBLE_MAT3x2 = 0x8F4B # macro
GL_DOUBLE_MAT3x2_EXT = 0x8F4B # macro
GL_DOUBLE_MAT3x4 = 0x8F4C # macro
GL_DOUBLE_MAT3x4_EXT = 0x8F4C # macro
GL_DOUBLE_MAT4 = 0x8F48 # macro
GL_DOUBLE_MAT4_EXT = 0x8F48 # macro
GL_DOUBLE_MAT4x2 = 0x8F4D # macro
GL_DOUBLE_MAT4x2_EXT = 0x8F4D # macro
GL_DOUBLE_MAT4x3 = 0x8F4E # macro
GL_DOUBLE_MAT4x3_EXT = 0x8F4E # macro
GL_DOUBLE_VEC2 = 0x8FFC # macro
GL_DOUBLE_VEC2_EXT = 0x8FFC # macro
GL_DOUBLE_VEC3 = 0x8FFD # macro
GL_DOUBLE_VEC3_EXT = 0x8FFD # macro
GL_DOUBLE_VEC4 = 0x8FFE # macro
GL_DOUBLE_VEC4_EXT = 0x8FFE # macro
GL_DRAW_ARRAYS_COMMAND_NV = 0x0003 # macro
GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV = 0x0007 # macro
GL_DRAW_ARRAYS_STRIP_COMMAND_NV = 0x0005 # macro
GL_DRAW_BUFFER = 0x0C01 # macro
GL_DRAW_BUFFER0 = 0x8825 # macro
GL_DRAW_BUFFER0_ARB = 0x8825 # macro
GL_DRAW_BUFFER0_ATI = 0x8825 # macro
GL_DRAW_BUFFER1 = 0x8826 # macro
GL_DRAW_BUFFER10 = 0x882F # macro
GL_DRAW_BUFFER10_ARB = 0x882F # macro
GL_DRAW_BUFFER10_ATI = 0x882F # macro
GL_DRAW_BUFFER11 = 0x8830 # macro
GL_DRAW_BUFFER11_ARB = 0x8830 # macro
GL_DRAW_BUFFER11_ATI = 0x8830 # macro
GL_DRAW_BUFFER12 = 0x8831 # macro
GL_DRAW_BUFFER12_ARB = 0x8831 # macro
GL_DRAW_BUFFER12_ATI = 0x8831 # macro
GL_DRAW_BUFFER13 = 0x8832 # macro
GL_DRAW_BUFFER13_ARB = 0x8832 # macro
GL_DRAW_BUFFER13_ATI = 0x8832 # macro
GL_DRAW_BUFFER14 = 0x8833 # macro
GL_DRAW_BUFFER14_ARB = 0x8833 # macro
GL_DRAW_BUFFER14_ATI = 0x8833 # macro
GL_DRAW_BUFFER15 = 0x8834 # macro
GL_DRAW_BUFFER15_ARB = 0x8834 # macro
GL_DRAW_BUFFER15_ATI = 0x8834 # macro
GL_DRAW_BUFFER1_ARB = 0x8826 # macro
GL_DRAW_BUFFER1_ATI = 0x8826 # macro
GL_DRAW_BUFFER2 = 0x8827 # macro
GL_DRAW_BUFFER2_ARB = 0x8827 # macro
GL_DRAW_BUFFER2_ATI = 0x8827 # macro
GL_DRAW_BUFFER3 = 0x8828 # macro
GL_DRAW_BUFFER3_ARB = 0x8828 # macro
GL_DRAW_BUFFER3_ATI = 0x8828 # macro
GL_DRAW_BUFFER4 = 0x8829 # macro
GL_DRAW_BUFFER4_ARB = 0x8829 # macro
GL_DRAW_BUFFER4_ATI = 0x8829 # macro
GL_DRAW_BUFFER5 = 0x882A # macro
GL_DRAW_BUFFER5_ARB = 0x882A # macro
GL_DRAW_BUFFER5_ATI = 0x882A # macro
GL_DRAW_BUFFER6 = 0x882B # macro
GL_DRAW_BUFFER6_ARB = 0x882B # macro
GL_DRAW_BUFFER6_ATI = 0x882B # macro
GL_DRAW_BUFFER7 = 0x882C # macro
GL_DRAW_BUFFER7_ARB = 0x882C # macro
GL_DRAW_BUFFER7_ATI = 0x882C # macro
GL_DRAW_BUFFER8 = 0x882D # macro
GL_DRAW_BUFFER8_ARB = 0x882D # macro
GL_DRAW_BUFFER8_ATI = 0x882D # macro
GL_DRAW_BUFFER9 = 0x882E # macro
GL_DRAW_BUFFER9_ARB = 0x882E # macro
GL_DRAW_BUFFER9_ATI = 0x882E # macro
GL_DRAW_ELEMENTS_COMMAND_NV = 0x0002 # macro
GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV = 0x0006 # macro
GL_DRAW_ELEMENTS_STRIP_COMMAND_NV = 0x0004 # macro
GL_DRAW_FRAMEBUFFER = 0x8CA9 # macro
GL_DRAW_FRAMEBUFFER_BINDING = 0x8CA6 # macro
GL_DRAW_FRAMEBUFFER_BINDING_EXT = 0x8CA6 # macro
GL_DRAW_FRAMEBUFFER_EXT = 0x8CA9 # macro
GL_DRAW_INDIRECT_ADDRESS_NV = 0x8F41 # macro
GL_DRAW_INDIRECT_BUFFER = 0x8F3F # macro
GL_DRAW_INDIRECT_BUFFER_BINDING = 0x8F43 # macro
GL_DRAW_INDIRECT_LENGTH_NV = 0x8F42 # macro
GL_DRAW_INDIRECT_UNIFIED_NV = 0x8F40 # macro
GL_DRAW_PIXELS_APPLE = 0x8A0A # macro
GL_DRAW_PIXEL_TOKEN = 0x0705 # macro
GL_DRIVER_UUID_EXT = 0x9598 # macro
GL_DSDT8_MAG8_INTENSITY8_NV = 0x870B # macro
GL_DSDT8_MAG8_NV = 0x870A # macro
GL_DSDT8_NV = 0x8709 # macro
GL_DSDT_MAG_INTENSITY_NV = 0x86DC # macro
GL_DSDT_MAG_NV = 0x86F6 # macro
GL_DSDT_MAG_VIB_NV = 0x86F7 # macro
GL_DSDT_NV = 0x86F5 # macro
GL_DST_ALPHA = 0x0304 # macro
GL_DST_ATOP_NV = 0x928F # macro
GL_DST_COLOR = 0x0306 # macro
GL_DST_IN_NV = 0x928B # macro
GL_DST_NV = 0x9287 # macro
GL_DST_OUT_NV = 0x928D # macro
GL_DST_OVER_NV = 0x9289 # macro
GL_DS_BIAS_NV = 0x8716 # macro
GL_DS_SCALE_NV = 0x8710 # macro
GL_DT_BIAS_NV = 0x8717 # macro
GL_DT_SCALE_NV = 0x8711 # macro
GL_DU8DV8_ATI = 0x877A # macro
GL_DUAL_ALPHA12_SGIS = 0x8112 # macro
GL_DUAL_ALPHA16_SGIS = 0x8113 # macro
GL_DUAL_ALPHA4_SGIS = 0x8110 # macro
GL_DUAL_ALPHA8_SGIS = 0x8111 # macro
GL_DUAL_INTENSITY12_SGIS = 0x811A # macro
GL_DUAL_INTENSITY16_SGIS = 0x811B # macro
GL_DUAL_INTENSITY4_SGIS = 0x8118 # macro
GL_DUAL_INTENSITY8_SGIS = 0x8119 # macro
GL_DUAL_LUMINANCE12_SGIS = 0x8116 # macro
GL_DUAL_LUMINANCE16_SGIS = 0x8117 # macro
GL_DUAL_LUMINANCE4_SGIS = 0x8114 # macro
GL_DUAL_LUMINANCE8_SGIS = 0x8115 # macro
GL_DUAL_LUMINANCE_ALPHA4_SGIS = 0x811C # macro
GL_DUAL_LUMINANCE_ALPHA8_SGIS = 0x811D # macro
GL_DUAL_TEXTURE_SELECT_SGIS = 0x8124 # macro
GL_DUDV_ATI = 0x8779 # macro
GL_DUP_FIRST_CUBIC_CURVE_TO_NV = 0xF2 # macro
GL_DUP_LAST_CUBIC_CURVE_TO_NV = 0xF4 # macro
GL_DYNAMIC_ATI = 0x8761 # macro
GL_DYNAMIC_COPY = 0x88EA # macro
GL_DYNAMIC_COPY_ARB = 0x88EA # macro
GL_DYNAMIC_DRAW = 0x88E8 # macro
GL_DYNAMIC_DRAW_ARB = 0x88E8 # macro
GL_DYNAMIC_READ = 0x88E9 # macro
GL_DYNAMIC_READ_ARB = 0x88E9 # macro
GL_DYNAMIC_STORAGE_BIT = 0x0100 # macro
GL_EDGEFLAG_BIT_PGI = 0x00040000 # macro
GL_EDGE_FLAG = 0x0B43 # macro
GL_EDGE_FLAG_ARRAY = 0x8079 # macro
GL_EDGE_FLAG_ARRAY_ADDRESS_NV = 0x8F26 # macro
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B # macro
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = 0x889B # macro
GL_EDGE_FLAG_ARRAY_COUNT_EXT = 0x808D # macro
GL_EDGE_FLAG_ARRAY_EXT = 0x8079 # macro
GL_EDGE_FLAG_ARRAY_LENGTH_NV = 0x8F30 # macro
GL_EDGE_FLAG_ARRAY_LIST_IBM = 103075 # macro
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = 103085 # macro
GL_EDGE_FLAG_ARRAY_POINTER = 0x8093 # macro
GL_EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093 # macro
GL_EDGE_FLAG_ARRAY_STRIDE = 0x808C # macro
GL_EDGE_FLAG_ARRAY_STRIDE_EXT = 0x808C # macro
GL_EFFECTIVE_RASTER_SAMPLES_EXT = 0x932C # macro
GL_EIGHTH_BIT_ATI = 0x00000020 # macro
GL_ELEMENT_ADDRESS_COMMAND_NV = 0x0008 # macro
GL_ELEMENT_ARRAY_ADDRESS_NV = 0x8F29 # macro
GL_ELEMENT_ARRAY_APPLE = 0x8A0C # macro
GL_ELEMENT_ARRAY_ATI = 0x8768 # macro
GL_ELEMENT_ARRAY_BARRIER_BIT = 0x00000002 # macro
GL_ELEMENT_ARRAY_BARRIER_BIT_EXT = 0x00000002 # macro
GL_ELEMENT_ARRAY_BUFFER = 0x8893 # macro
GL_ELEMENT_ARRAY_BUFFER_ARB = 0x8893 # macro
GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895 # macro
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB = 0x8895 # macro
GL_ELEMENT_ARRAY_LENGTH_NV = 0x8F33 # macro
GL_ELEMENT_ARRAY_POINTER_APPLE = 0x8A0E # macro
GL_ELEMENT_ARRAY_POINTER_ATI = 0x876A # macro
GL_ELEMENT_ARRAY_TYPE_APPLE = 0x8A0D # macro
GL_ELEMENT_ARRAY_TYPE_ATI = 0x8769 # macro
GL_ELEMENT_ARRAY_UNIFIED_NV = 0x8F1F # macro
GL_EMBOSS_CONSTANT_NV = 0x855E # macro
GL_EMBOSS_LIGHT_NV = 0x855D # macro
GL_EMBOSS_MAP_NV = 0x855F # macro
GL_EMISSION = 0x1600 # macro
GL_ENABLE_BIT = 0x00002000 # macro
GL_EQUAL = 0x0202 # macro
GL_EQUIV = 0x1509 # macro
GL_EVAL_2D_NV = 0x86C0 # macro
GL_EVAL_BIT = 0x00010000 # macro
GL_EVAL_FRACTIONAL_TESSELLATION_NV = 0x86C5 # macro
GL_EVAL_TRIANGULAR_2D_NV = 0x86C1 # macro
GL_EVAL_VERTEX_ATTRIB0_NV = 0x86C6 # macro
GL_EVAL_VERTEX_ATTRIB10_NV = 0x86D0 # macro
GL_EVAL_VERTEX_ATTRIB11_NV = 0x86D1 # macro
GL_EVAL_VERTEX_ATTRIB12_NV = 0x86D2 # macro
GL_EVAL_VERTEX_ATTRIB13_NV = 0x86D3 # macro
GL_EVAL_VERTEX_ATTRIB14_NV = 0x86D4 # macro
GL_EVAL_VERTEX_ATTRIB15_NV = 0x86D5 # macro
GL_EVAL_VERTEX_ATTRIB1_NV = 0x86C7 # macro
GL_EVAL_VERTEX_ATTRIB2_NV = 0x86C8 # macro
GL_EVAL_VERTEX_ATTRIB3_NV = 0x86C9 # macro
GL_EVAL_VERTEX_ATTRIB4_NV = 0x86CA # macro
GL_EVAL_VERTEX_ATTRIB5_NV = 0x86CB # macro
GL_EVAL_VERTEX_ATTRIB6_NV = 0x86CC # macro
GL_EVAL_VERTEX_ATTRIB7_NV = 0x86CD # macro
GL_EVAL_VERTEX_ATTRIB8_NV = 0x86CE # macro
GL_EVAL_VERTEX_ATTRIB9_NV = 0x86CF # macro
GL_EXCLUSION_KHR = 0x92A0 # macro
GL_EXCLUSION_NV = 0x92A0 # macro
GL_EXCLUSIVE_EXT = 0x8F11 # macro
GL_EXP = 0x0800 # macro
GL_EXP2 = 0x0801 # macro
GL_EXPAND_NEGATE_NV = 0x8539 # macro
GL_EXPAND_NORMAL_NV = 0x8538 # macro
GL_EXTENSIONS = 0x1F03 # macro
GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD = 0x9160 # macro
GL_EYE_DISTANCE_TO_LINE_SGIS = 0x81F2 # macro
GL_EYE_DISTANCE_TO_POINT_SGIS = 0x81F0 # macro
GL_EYE_LINEAR = 0x2400 # macro
GL_EYE_LINEAR_NV = 0x2400 # macro
GL_EYE_LINE_SGIS = 0x81F6 # macro
GL_EYE_PLANE = 0x2502 # macro
GL_EYE_PLANE_ABSOLUTE_NV = 0x855C # macro
GL_EYE_POINT_SGIS = 0x81F4 # macro
GL_EYE_RADIAL_NV = 0x855B # macro
GL_E_TIMES_F_NV = 0x8531 # macro
GL_FACTOR_MAX_AMD = 0x901D # macro
GL_FACTOR_MIN_AMD = 0x901C # macro
GL_FAILURE_NV = 0x9030 # macro
GL_FALSE = 0 # macro
GL_FASTEST = 0x1101 # macro
GL_FEEDBACK = 0x1C01 # macro
GL_FEEDBACK_BUFFER_POINTER = 0x0DF0 # macro
GL_FEEDBACK_BUFFER_SIZE = 0x0DF1 # macro
GL_FEEDBACK_BUFFER_TYPE = 0x0DF2 # macro
GL_FENCE_APPLE = 0x8A0B # macro
GL_FENCE_CONDITION_NV = 0x84F4 # macro
GL_FENCE_STATUS_NV = 0x84F3 # macro
GL_FIELDS_NV = 0x8E27 # macro
GL_FIELD_LOWER_NV = 0x9023 # macro
GL_FIELD_UPPER_NV = 0x9022 # macro
GL_FILE_NAME_NV = 0x9074 # macro
GL_FILL = 0x1B02 # macro
GL_FILL_RECTANGLE_NV = 0x933C # macro
GL_FILTER = 0x829A # macro
GL_FILTER4_SGIS = 0x8146 # macro
GL_FIRST_TO_REST_NV = 0x90AF # macro
GL_FIRST_VERTEX_CONVENTION = 0x8E4D # macro
GL_FIRST_VERTEX_CONVENTION_EXT = 0x8E4D # macro
GL_FIXED = 0x140C # macro
GL_FIXED_OES = 0x140C # macro
GL_FIXED_ONLY = 0x891D # macro
GL_FIXED_ONLY_ARB = 0x891D # macro
GL_FLAT = 0x1D00 # macro
GL_FLOAT = 0x1406 # macro
GL_FLOAT16_MAT2_AMD = 0x91C5 # macro
GL_FLOAT16_MAT2x3_AMD = 0x91C8 # macro
GL_FLOAT16_MAT2x4_AMD = 0x91C9 # macro
GL_FLOAT16_MAT3_AMD = 0x91C6 # macro
GL_FLOAT16_MAT3x2_AMD = 0x91CA # macro
GL_FLOAT16_MAT3x4_AMD = 0x91CB # macro
GL_FLOAT16_MAT4_AMD = 0x91C7 # macro
GL_FLOAT16_MAT4x2_AMD = 0x91CC # macro
GL_FLOAT16_MAT4x3_AMD = 0x91CD # macro
GL_FLOAT16_NV = 0x8FF8 # macro
GL_FLOAT16_VEC2_NV = 0x8FF9 # macro
GL_FLOAT16_VEC3_NV = 0x8FFA # macro
GL_FLOAT16_VEC4_NV = 0x8FFB # macro
GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD # macro
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = 0x8DAD # macro
GL_FLOAT_CLEAR_COLOR_VALUE_NV = 0x888D # macro
GL_FLOAT_MAT2 = 0x8B5A # macro
GL_FLOAT_MAT2_ARB = 0x8B5A # macro
GL_FLOAT_MAT2x3 = 0x8B65 # macro
GL_FLOAT_MAT2x4 = 0x8B66 # macro
GL_FLOAT_MAT3 = 0x8B5B # macro
GL_FLOAT_MAT3_ARB = 0x8B5B # macro
GL_FLOAT_MAT3x2 = 0x8B67 # macro
GL_FLOAT_MAT3x4 = 0x8B68 # macro
GL_FLOAT_MAT4 = 0x8B5C # macro
GL_FLOAT_MAT4_ARB = 0x8B5C # macro
GL_FLOAT_MAT4x2 = 0x8B69 # macro
GL_FLOAT_MAT4x3 = 0x8B6A # macro
GL_FLOAT_R16_NV = 0x8884 # macro
GL_FLOAT_R32_NV = 0x8885 # macro
GL_FLOAT_RG16_NV = 0x8886 # macro
GL_FLOAT_RG32_NV = 0x8887 # macro
GL_FLOAT_RGB16_NV = 0x8888 # macro
GL_FLOAT_RGB32_NV = 0x8889 # macro
GL_FLOAT_RGBA16_NV = 0x888A # macro
GL_FLOAT_RGBA32_NV = 0x888B # macro
GL_FLOAT_RGBA_MODE_NV = 0x888E # macro
GL_FLOAT_RGBA_NV = 0x8883 # macro
GL_FLOAT_RGB_NV = 0x8882 # macro
GL_FLOAT_RG_NV = 0x8881 # macro
GL_FLOAT_R_NV = 0x8880 # macro
GL_FLOAT_VEC2 = 0x8B50 # macro
GL_FLOAT_VEC2_ARB = 0x8B50 # macro
GL_FLOAT_VEC3 = 0x8B51 # macro
GL_FLOAT_VEC3_ARB = 0x8B51 # macro
GL_FLOAT_VEC4 = 0x8B52 # macro
GL_FLOAT_VEC4_ARB = 0x8B52 # macro
GL_FOG = 0x0B60 # macro
GL_FOG_BIT = 0x00000080 # macro
GL_FOG_COLOR = 0x0B66 # macro
GL_FOG_COORD = 0x8451 # macro
GL_FOG_COORDINATE = 0x8451 # macro
GL_FOG_COORDINATE_ARRAY = 0x8457 # macro
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D # macro
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = 0x889D # macro
GL_FOG_COORDINATE_ARRAY_EXT = 0x8457 # macro
GL_FOG_COORDINATE_ARRAY_LIST_IBM = 103076 # macro
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = 103086 # macro
GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456 # macro
GL_FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456 # macro
GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455 # macro
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455 # macro
GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454 # macro
GL_FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454 # macro
GL_FOG_COORDINATE_EXT = 0x8451 # macro
GL_FOG_COORDINATE_SOURCE = 0x8450 # macro
GL_FOG_COORDINATE_SOURCE_EXT = 0x8450 # macro
GL_FOG_COORD_ARRAY = 0x8457 # macro
GL_FOG_COORD_ARRAY_ADDRESS_NV = 0x8F28 # macro
GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D # macro
GL_FOG_COORD_ARRAY_LENGTH_NV = 0x8F32 # macro
GL_FOG_COORD_ARRAY_POINTER = 0x8456 # macro
GL_FOG_COORD_ARRAY_STRIDE = 0x8455 # macro
GL_FOG_COORD_ARRAY_TYPE = 0x8454 # macro
GL_FOG_COORD_SRC = 0x8450 # macro
GL_FOG_DENSITY = 0x0B62 # macro
GL_FOG_DISTANCE_MODE_NV = 0x855A # macro
GL_FOG_END = 0x0B64 # macro
GL_FOG_FUNC_POINTS_SGIS = 0x812B # macro
GL_FOG_FUNC_SGIS = 0x812A # macro
GL_FOG_HINT = 0x0C54 # macro
GL_FOG_INDEX = 0x0B61 # macro
GL_FOG_MODE = 0x0B65 # macro
GL_FOG_OFFSET_SGIX = 0x8198 # macro
GL_FOG_OFFSET_VALUE_SGIX = 0x8199 # macro
GL_FOG_SPECULAR_TEXTURE_WIN = 0x80EC # macro
GL_FOG_START = 0x0B63 # macro
GL_FONT_ASCENDER_BIT_NV = 0x00200000 # macro
GL_FONT_DESCENDER_BIT_NV = 0x00400000 # macro
GL_FONT_GLYPHS_AVAILABLE_NV = 0x9368 # macro
GL_FONT_HAS_KERNING_BIT_NV = 0x10000000 # macro
GL_FONT_HEIGHT_BIT_NV = 0x00800000 # macro
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV = 0x02000000 # macro
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV = 0x01000000 # macro
GL_FONT_NUM_GLYPH_INDICES_BIT_NV = 0x20000000 # macro
GL_FONT_TARGET_UNAVAILABLE_NV = 0x9369 # macro
GL_FONT_UNAVAILABLE_NV = 0x936A # macro
GL_FONT_UNDERLINE_POSITION_BIT_NV = 0x04000000 # macro
GL_FONT_UNDERLINE_THICKNESS_BIT_NV = 0x08000000 # macro
GL_FONT_UNINTELLIGIBLE_NV = 0x936B # macro
GL_FONT_UNITS_PER_EM_BIT_NV = 0x00100000 # macro
GL_FONT_X_MAX_BOUNDS_BIT_NV = 0x00040000 # macro
GL_FONT_X_MIN_BOUNDS_BIT_NV = 0x00010000 # macro
GL_FONT_Y_MAX_BOUNDS_BIT_NV = 0x00080000 # macro
GL_FONT_Y_MIN_BOUNDS_BIT_NV = 0x00020000 # macro
GL_FORCE_BLUE_TO_ONE_NV = 0x8860 # macro
GL_FORMAT_SUBSAMPLE_244_244_OML = 0x8983 # macro
GL_FORMAT_SUBSAMPLE_24_24_OML = 0x8982 # macro
GL_FRACTIONAL_EVEN = 0x8E7C # macro
GL_FRACTIONAL_ODD = 0x8E7B # macro
GL_FRAGMENT_COLOR_EXT = 0x834C # macro
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = 0x8402 # macro
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = 0x8403 # macro
GL_FRAGMENT_COLOR_MATERIAL_SGIX = 0x8401 # macro
GL_FRAGMENT_COVERAGE_COLOR_NV = 0x92DE # macro
GL_FRAGMENT_COVERAGE_TO_COLOR_NV = 0x92DD # macro
GL_FRAGMENT_DEPTH = 0x8452 # macro
GL_FRAGMENT_DEPTH_EXT = 0x8452 # macro
GL_FRAGMENT_INPUT_NV = 0x936D # macro
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D # macro
GL_FRAGMENT_LIGHT0_SGIX = 0x840C # macro
GL_FRAGMENT_LIGHT1_SGIX = 0x840D # macro
GL_FRAGMENT_LIGHT2_SGIX = 0x840E # macro
GL_FRAGMENT_LIGHT3_SGIX = 0x840F # macro
GL_FRAGMENT_LIGHT4_SGIX = 0x8410 # macro
GL_FRAGMENT_LIGHT5_SGIX = 0x8411 # macro
GL_FRAGMENT_LIGHT6_SGIX = 0x8412 # macro
GL_FRAGMENT_LIGHT7_SGIX = 0x8413 # macro
GL_FRAGMENT_LIGHTING_SGIX = 0x8400 # macro
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = 0x840A # macro
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = 0x8408 # macro
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = 0x840B # macro
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = 0x8409 # macro
GL_FRAGMENT_MATERIAL_EXT = 0x8349 # macro
GL_FRAGMENT_NORMAL_EXT = 0x834A # macro
GL_FRAGMENT_PROGRAM_ARB = 0x8804 # macro
GL_FRAGMENT_PROGRAM_BINDING_NV = 0x8873 # macro
GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = 0x8E5D # macro
GL_FRAGMENT_PROGRAM_NV = 0x8870 # macro
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA4 # macro
GL_FRAGMENT_SHADER = 0x8B30 # macro
GL_FRAGMENT_SHADER_ARB = 0x8B30 # macro
GL_FRAGMENT_SHADER_ATI = 0x8920 # macro
GL_FRAGMENT_SHADER_BIT = 0x00000002 # macro
GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B # macro
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = 0x8B8B # macro
GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT = 0x8A52 # macro
GL_FRAGMENT_SHADER_INVOCATIONS = 0x82F4 # macro
GL_FRAGMENT_SHADER_INVOCATIONS_ARB = 0x82F4 # macro
GL_FRAGMENT_SUBROUTINE = 0x92EC # macro
GL_FRAGMENT_SUBROUTINE_UNIFORM = 0x92F2 # macro
GL_FRAGMENT_TEXTURE = 0x829F # macro
GL_FRAMEBUFFER = 0x8D40 # macro
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215 # macro
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214 # macro
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210 # macro
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211 # macro
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216 # macro
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213 # macro
GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7 # macro
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = 0x8DA7 # macro
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7 # macro
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1 # macro
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x8CD1 # macro
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0 # macro
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x8CD0 # macro
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212 # macro
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217 # macro
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x8CD4 # macro
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR = 0x9632 # macro
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3 # macro
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x8CD3 # macro
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4 # macro
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4 # macro
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2 # macro
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x8CD2 # macro
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR = 0x9630 # macro
GL_FRAMEBUFFER_BARRIER_BIT = 0x00000400 # macro
GL_FRAMEBUFFER_BARRIER_BIT_EXT = 0x00000400 # macro
GL_FRAMEBUFFER_BINDING = 0x8CA6 # macro
GL_FRAMEBUFFER_BINDING_EXT = 0x8CA6 # macro
GL_FRAMEBUFFER_BLEND = 0x828B # macro
GL_FRAMEBUFFER_COMPLETE = 0x8CD5 # macro
GL_FRAMEBUFFER_COMPLETE_EXT = 0x8CD5 # macro
GL_FRAMEBUFFER_DEFAULT = 0x8218 # macro
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 0x9314 # macro
GL_FRAMEBUFFER_DEFAULT_HEIGHT = 0x9311 # macro
GL_FRAMEBUFFER_DEFAULT_LAYERS = 0x9312 # macro
GL_FRAMEBUFFER_DEFAULT_SAMPLES = 0x9313 # macro
GL_FRAMEBUFFER_DEFAULT_WIDTH = 0x9310 # macro
GL_FRAMEBUFFER_EXT = 0x8D40 # macro
GL_FRAMEBUFFER_FLIP_X_MESA = 0x8BBC # macro
GL_FRAMEBUFFER_FLIP_Y_MESA = 0x8BBB # macro
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6 # macro
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x8CD6 # macro
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8CD9 # macro
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB # macro
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x8CDB # macro
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x8CDA # macro
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = 0x8DA9 # macro
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9 # macro
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8 # macro
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = 0x8DA8 # macro
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8 # macro
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7 # macro
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x8CD7 # macro
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56 # macro
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = 0x8D56 # macro
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC # macro
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x8CDC # macro
GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR = 0x9633 # macro
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB = 0x9342 # macro
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV = 0x9342 # macro
GL_FRAMEBUFFER_RENDERABLE = 0x8289 # macro
GL_FRAMEBUFFER_RENDERABLE_LAYERED = 0x828A # macro
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB = 0x9343 # macro
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV = 0x9343 # macro
GL_FRAMEBUFFER_SRGB = 0x8DB9 # macro
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x8DBA # macro
GL_FRAMEBUFFER_SRGB_EXT = 0x8DB9 # macro
GL_FRAMEBUFFER_SWAP_XY_MESA = 0x8BBD # macro
GL_FRAMEBUFFER_UNDEFINED = 0x8219 # macro
GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD # macro
GL_FRAMEBUFFER_UNSUPPORTED_EXT = 0x8CDD # macro
GL_FRAMEZOOM_FACTOR_SGIX = 0x818C # macro
GL_FRAMEZOOM_SGIX = 0x818B # macro
GL_FRAME_NV = 0x8E26 # macro
GL_FRONT = 0x0404 # macro
GL_FRONT_AND_BACK = 0x0408 # macro
GL_FRONT_FACE = 0x0B46 # macro
GL_FRONT_FACE_COMMAND_NV = 0x0012 # macro
GL_FRONT_LEFT = 0x0400 # macro
GL_FRONT_RIGHT = 0x0401 # macro
GL_FULL_RANGE_EXT = 0x87E1 # macro
GL_FULL_STIPPLE_HINT_PGI = 0x1A219 # macro
GL_FULL_SUPPORT = 0x82B7 # macro
GL_FUNC_ADD = 0x8006 # macro
GL_FUNC_ADD_EXT = 0x8006 # macro
GL_FUNC_REVERSE_SUBTRACT = 0x800B # macro
GL_FUNC_REVERSE_SUBTRACT_EXT = 0x800B # macro
GL_FUNC_SUBTRACT = 0x800A # macro
GL_FUNC_SUBTRACT_EXT = 0x800A # macro
GL_GENERATE_MIPMAP = 0x8191 # macro
GL_GENERATE_MIPMAP_HINT = 0x8192 # macro
GL_GENERATE_MIPMAP_HINT_SGIS = 0x8192 # macro
GL_GENERATE_MIPMAP_SGIS = 0x8191 # macro
GL_GENERIC_ATTRIB_NV = 0x8C7D # macro
GL_GEOMETRY_DEFORMATION_BIT_SGIX = 0x00000002 # macro
GL_GEOMETRY_DEFORMATION_SGIX = 0x8194 # macro
GL_GEOMETRY_INPUT_TYPE = 0x8917 # macro
GL_GEOMETRY_INPUT_TYPE_ARB = 0x8DDB # macro
GL_GEOMETRY_INPUT_TYPE_EXT = 0x8DDB # macro
GL_GEOMETRY_OUTPUT_TYPE = 0x8918 # macro
GL_GEOMETRY_OUTPUT_TYPE_ARB = 0x8DDC # macro
GL_GEOMETRY_OUTPUT_TYPE_EXT = 0x8DDC # macro
GL_GEOMETRY_PROGRAM_NV = 0x8C26 # macro
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA3 # macro
GL_GEOMETRY_SHADER = 0x8DD9 # macro
GL_GEOMETRY_SHADER_ARB = 0x8DD9 # macro
GL_GEOMETRY_SHADER_BIT = 0x00000004 # macro
GL_GEOMETRY_SHADER_EXT = 0x8DD9 # macro
GL_GEOMETRY_SHADER_INVOCATIONS = 0x887F # macro
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED = 0x82F3 # macro
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB = 0x82F3 # macro
GL_GEOMETRY_SUBROUTINE = 0x92EB # macro
GL_GEOMETRY_SUBROUTINE_UNIFORM = 0x92F1 # macro
GL_GEOMETRY_TEXTURE = 0x829E # macro
GL_GEOMETRY_VERTICES_OUT = 0x8916 # macro
GL_GEOMETRY_VERTICES_OUT_ARB = 0x8DDA # macro
GL_GEOMETRY_VERTICES_OUT_EXT = 0x8DDA # macro
GL_GEQUAL = 0x0206 # macro
GL_GET_TEXTURE_IMAGE_FORMAT = 0x8291 # macro
GL_GET_TEXTURE_IMAGE_TYPE = 0x8292 # macro
GL_GLOBAL_ALPHA_FACTOR_SUN = 0x81DA # macro
GL_GLOBAL_ALPHA_SUN = 0x81D9 # macro
GL_GLYPH_HAS_KERNING_BIT_NV = 0x100 # macro
GL_GLYPH_HEIGHT_BIT_NV = 0x02 # macro
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV = 0x10 # macro
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV = 0x04 # macro
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV = 0x08 # macro
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV = 0x80 # macro
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV = 0x20 # macro
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV = 0x40 # macro
GL_GLYPH_WIDTH_BIT_NV = 0x01 # macro
GL_GPU_ADDRESS_NV = 0x8F34 # macro
GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX = 0x9049 # macro
GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX = 0x9047 # macro
GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX = 0x904B # macro
GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX = 0x904A # macro
GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX = 0x9048 # macro
GL_GREATER = 0x0204 # macro
GL_GREEN = 0x1904 # macro
GL_GREEN_BIAS = 0x0D19 # macro
GL_GREEN_BITS = 0x0D53 # macro
GL_GREEN_BIT_ATI = 0x00000002 # macro
GL_GREEN_INTEGER = 0x8D95 # macro
GL_GREEN_INTEGER_EXT = 0x8D95 # macro
GL_GREEN_MAX_CLAMP_INGR = 0x8565 # macro
GL_GREEN_MIN_CLAMP_INGR = 0x8561 # macro
GL_GREEN_NV = 0x1904 # macro
GL_GREEN_SCALE = 0x0D18 # macro
GL_GUILTY_CONTEXT_RESET = 0x8253 # macro
GL_GUILTY_CONTEXT_RESET_ARB = 0x8253 # macro
GL_HALF_APPLE = 0x140B # macro
GL_HALF_BIAS_NEGATE_NV = 0x853B # macro
GL_HALF_BIAS_NORMAL_NV = 0x853A # macro
GL_HALF_BIT_ATI = 0x00000008 # macro
GL_HALF_FLOAT = 0x140B # macro
GL_HALF_FLOAT_ARB = 0x140B # macro
GL_HALF_FLOAT_NV = 0x140B # macro
GL_HANDLE_TYPE_D3D11_IMAGE_EXT = 0x958B # macro
GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT = 0x958C # macro
GL_HANDLE_TYPE_D3D12_FENCE_EXT = 0x9594 # macro
GL_HANDLE_TYPE_D3D12_RESOURCE_EXT = 0x958A # macro
GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT = 0x9589 # macro
GL_HANDLE_TYPE_OPAQUE_FD_EXT = 0x9586 # macro
GL_HANDLE_TYPE_OPAQUE_WIN32_EXT = 0x9587 # macro
GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT = 0x9588 # macro
GL_HARDLIGHT_KHR = 0x929B # macro
GL_HARDLIGHT_NV = 0x929B # macro
GL_HARDMIX_NV = 0x92A9 # macro
GL_HIGH_FLOAT = 0x8DF2 # macro
GL_HIGH_INT = 0x8DF5 # macro
GL_HILO16_NV = 0x86F8 # macro
GL_HILO8_NV = 0x885E # macro
GL_HILO_NV = 0x86F4 # macro
GL_HINT_BIT = 0x00008000 # macro
GL_HISTOGRAM = 0x8024 # macro
GL_HISTOGRAM_ALPHA_SIZE = 0x802B # macro
GL_HISTOGRAM_ALPHA_SIZE_EXT = 0x802B # macro
GL_HISTOGRAM_BLUE_SIZE = 0x802A # macro
GL_HISTOGRAM_BLUE_SIZE_EXT = 0x802A # macro
GL_HISTOGRAM_EXT = 0x8024 # macro
GL_HISTOGRAM_FORMAT = 0x8027 # macro
GL_HISTOGRAM_FORMAT_EXT = 0x8027 # macro
GL_HISTOGRAM_GREEN_SIZE = 0x8029 # macro
GL_HISTOGRAM_GREEN_SIZE_EXT = 0x8029 # macro
GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C # macro
GL_HISTOGRAM_LUMINANCE_SIZE_EXT = 0x802C # macro
GL_HISTOGRAM_RED_SIZE = 0x8028 # macro
GL_HISTOGRAM_RED_SIZE_EXT = 0x8028 # macro
GL_HISTOGRAM_SINK = 0x802D # macro
GL_HISTOGRAM_SINK_EXT = 0x802D # macro
GL_HISTOGRAM_WIDTH = 0x8026 # macro
GL_HISTOGRAM_WIDTH_EXT = 0x8026 # macro
GL_HI_BIAS_NV = 0x8714 # macro
GL_HI_SCALE_NV = 0x870E # macro
GL_HORIZONTAL_LINE_TO_NV = 0x06 # macro
GL_HSL_COLOR_KHR = 0x92AF # macro
GL_HSL_COLOR_NV = 0x92AF # macro
GL_HSL_HUE_KHR = 0x92AD # macro
GL_HSL_HUE_NV = 0x92AD # macro
GL_HSL_LUMINOSITY_KHR = 0x92B0 # macro
GL_HSL_LUMINOSITY_NV = 0x92B0 # macro
GL_HSL_SATURATION_KHR = 0x92AE # macro
GL_HSL_SATURATION_NV = 0x92AE # macro
GL_IDENTITY_NV = 0x862A # macro
GL_IGNORE_BORDER_HP = 0x8150 # macro
GL_IMAGE_1D = 0x904C # macro
GL_IMAGE_1D_ARRAY = 0x9052 # macro
GL_IMAGE_1D_ARRAY_EXT = 0x9052 # macro
GL_IMAGE_1D_EXT = 0x904C # macro
GL_IMAGE_2D = 0x904D # macro
GL_IMAGE_2D_ARRAY = 0x9053 # macro
GL_IMAGE_2D_ARRAY_EXT = 0x9053 # macro
GL_IMAGE_2D_EXT = 0x904D # macro
GL_IMAGE_2D_MULTISAMPLE = 0x9055 # macro
GL_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9056 # macro
GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9056 # macro
GL_IMAGE_2D_MULTISAMPLE_EXT = 0x9055 # macro
GL_IMAGE_2D_RECT = 0x904F # macro
GL_IMAGE_2D_RECT_EXT = 0x904F # macro
GL_IMAGE_3D = 0x904E # macro
GL_IMAGE_3D_EXT = 0x904E # macro
GL_IMAGE_BINDING_ACCESS = 0x8F3E # macro
GL_IMAGE_BINDING_ACCESS_EXT = 0x8F3E # macro
GL_IMAGE_BINDING_FORMAT = 0x906E # macro
GL_IMAGE_BINDING_FORMAT_EXT = 0x906E # macro
GL_IMAGE_BINDING_LAYER = 0x8F3D # macro
GL_IMAGE_BINDING_LAYERED = 0x8F3C # macro
GL_IMAGE_BINDING_LAYERED_EXT = 0x8F3C # macro
GL_IMAGE_BINDING_LAYER_EXT = 0x8F3D # macro
GL_IMAGE_BINDING_LEVEL = 0x8F3B # macro
GL_IMAGE_BINDING_LEVEL_EXT = 0x8F3B # macro
GL_IMAGE_BINDING_NAME = 0x8F3A # macro
GL_IMAGE_BINDING_NAME_EXT = 0x8F3A # macro
GL_IMAGE_BUFFER = 0x9051 # macro
GL_IMAGE_BUFFER_EXT = 0x9051 # macro
GL_IMAGE_CLASS_10_10_10_2 = 0x82C3 # macro
GL_IMAGE_CLASS_11_11_10 = 0x82C2 # macro
GL_IMAGE_CLASS_1_X_16 = 0x82BE # macro
GL_IMAGE_CLASS_1_X_32 = 0x82BB # macro
GL_IMAGE_CLASS_1_X_8 = 0x82C1 # macro
GL_IMAGE_CLASS_2_X_16 = 0x82BD # macro
GL_IMAGE_CLASS_2_X_32 = 0x82BA # macro
GL_IMAGE_CLASS_2_X_8 = 0x82C0 # macro
GL_IMAGE_CLASS_4_X_16 = 0x82BC # macro
GL_IMAGE_CLASS_4_X_32 = 0x82B9 # macro
GL_IMAGE_CLASS_4_X_8 = 0x82BF # macro
GL_IMAGE_COMPATIBILITY_CLASS = 0x82A8 # macro
GL_IMAGE_CUBE = 0x9050 # macro
GL_IMAGE_CUBE_EXT = 0x9050 # macro
GL_IMAGE_CUBE_MAP_ARRAY = 0x9054 # macro
GL_IMAGE_CUBE_MAP_ARRAY_EXT = 0x9054 # macro
GL_IMAGE_CUBIC_WEIGHT_HP = 0x815E # macro
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90C9 # macro
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 0x90C8 # macro
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = 0x90C7 # macro
GL_IMAGE_MAG_FILTER_HP = 0x815C # macro
GL_IMAGE_MIN_FILTER_HP = 0x815D # macro
GL_IMAGE_PIXEL_FORMAT = 0x82A9 # macro
GL_IMAGE_PIXEL_TYPE = 0x82AA # macro
GL_IMAGE_ROTATE_ANGLE_HP = 0x8159 # macro
GL_IMAGE_ROTATE_ORIGIN_X_HP = 0x815A # macro
GL_IMAGE_ROTATE_ORIGIN_Y_HP = 0x815B # macro
GL_IMAGE_SCALE_X_HP = 0x8155 # macro
GL_IMAGE_SCALE_Y_HP = 0x8156 # macro
GL_IMAGE_TEXEL_SIZE = 0x82A7 # macro
GL_IMAGE_TRANSFORM_2D_HP = 0x8161 # macro
GL_IMAGE_TRANSLATE_X_HP = 0x8157 # macro
GL_IMAGE_TRANSLATE_Y_HP = 0x8158 # macro
GL_IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B # macro
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES = 0x8B9B # macro
GL_IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A # macro
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = 0x8B9A # macro
GL_INCLUSIVE_EXT = 0x8F10 # macro
GL_INCR = 0x1E02 # macro
GL_INCR_WRAP = 0x8507 # macro
GL_INCR_WRAP_EXT = 0x8507 # macro
GL_INDEX = 0x8222 # macro
GL_INDEX_ARRAY = 0x8077 # macro
GL_INDEX_ARRAY_ADDRESS_NV = 0x8F24 # macro
GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899 # macro
GL_INDEX_ARRAY_BUFFER_BINDING_ARB = 0x8899 # macro
GL_INDEX_ARRAY_COUNT_EXT = 0x8087 # macro
GL_INDEX_ARRAY_EXT = 0x8077 # macro
GL_INDEX_ARRAY_LENGTH_NV = 0x8F2E # macro
GL_INDEX_ARRAY_LIST_IBM = 103073 # macro
GL_INDEX_ARRAY_LIST_STRIDE_IBM = 103083 # macro
GL_INDEX_ARRAY_POINTER = 0x8091 # macro
GL_INDEX_ARRAY_POINTER_EXT = 0x8091 # macro
GL_INDEX_ARRAY_STRIDE = 0x8086 # macro
GL_INDEX_ARRAY_STRIDE_EXT = 0x8086 # macro
GL_INDEX_ARRAY_TYPE = 0x8085 # macro
GL_INDEX_ARRAY_TYPE_EXT = 0x8085 # macro
GL_INDEX_BITS = 0x0D51 # macro
GL_INDEX_BIT_PGI = 0x00080000 # macro
GL_INDEX_CLEAR_VALUE = 0x0C20 # macro
GL_INDEX_LOGIC_OP = 0x0BF1 # macro
GL_INDEX_MATERIAL_EXT = 0x81B8 # macro
GL_INDEX_MATERIAL_FACE_EXT = 0x81BA # macro
GL_INDEX_MATERIAL_PARAMETER_EXT = 0x81B9 # macro
GL_INDEX_MODE = 0x0C30 # macro
GL_INDEX_OFFSET = 0x0D13 # macro
GL_INDEX_SHIFT = 0x0D12 # macro
GL_INDEX_TEST_EXT = 0x81B5 # macro
GL_INDEX_TEST_FUNC_EXT = 0x81B6 # macro
GL_INDEX_TEST_REF_EXT = 0x81B7 # macro
GL_INDEX_WRITEMASK = 0x0C21 # macro
GL_INFO_LOG_LENGTH = 0x8B84 # macro
GL_INNOCENT_CONTEXT_RESET = 0x8254 # macro
GL_INNOCENT_CONTEXT_RESET_ARB = 0x8254 # macro
GL_INSTRUMENT_BUFFER_POINTER_SGIX = 0x8180 # macro
GL_INSTRUMENT_MEASUREMENTS_SGIX = 0x8181 # macro
GL_INT = 0x1404 # macro
GL_INT16_NV = 0x8FE4 # macro
GL_INT16_VEC2_NV = 0x8FE5 # macro
GL_INT16_VEC3_NV = 0x8FE6 # macro
GL_INT16_VEC4_NV = 0x8FE7 # macro
GL_INT64_ARB = 0x140E # macro
GL_INT64_NV = 0x140E # macro
GL_INT64_VEC2_ARB = 0x8FE9 # macro
GL_INT64_VEC2_NV = 0x8FE9 # macro
GL_INT64_VEC3_ARB = 0x8FEA # macro
GL_INT64_VEC3_NV = 0x8FEA # macro
GL_INT64_VEC4_ARB = 0x8FEB # macro
GL_INT64_VEC4_NV = 0x8FEB # macro
GL_INT8_NV = 0x8FE0 # macro
GL_INT8_VEC2_NV = 0x8FE1 # macro
GL_INT8_VEC3_NV = 0x8FE2 # macro
GL_INT8_VEC4_NV = 0x8FE3 # macro
GL_INTENSITY = 0x8049 # macro
GL_INTENSITY12 = 0x804C # macro
GL_INTENSITY12_EXT = 0x804C # macro
GL_INTENSITY16 = 0x804D # macro
GL_INTENSITY16F_ARB = 0x881D # macro
GL_INTENSITY16I_EXT = 0x8D8B # macro
GL_INTENSITY16UI_EXT = 0x8D79 # macro
GL_INTENSITY16_EXT = 0x804D # macro
GL_INTENSITY16_SNORM = 0x901B # macro
GL_INTENSITY32F_ARB = 0x8817 # macro
GL_INTENSITY32I_EXT = 0x8D85 # macro
GL_INTENSITY32UI_EXT = 0x8D73 # macro
GL_INTENSITY4 = 0x804A # macro
GL_INTENSITY4_EXT = 0x804A # macro
GL_INTENSITY8 = 0x804B # macro
GL_INTENSITY8I_EXT = 0x8D91 # macro
GL_INTENSITY8UI_EXT = 0x8D7F # macro
GL_INTENSITY8_EXT = 0x804B # macro
GL_INTENSITY8_SNORM = 0x9017 # macro
GL_INTENSITY_EXT = 0x8049 # macro
GL_INTENSITY_FLOAT16_APPLE = 0x881D # macro
GL_INTENSITY_FLOAT16_ATI = 0x881D # macro
GL_INTENSITY_FLOAT32_APPLE = 0x8817 # macro
GL_INTENSITY_FLOAT32_ATI = 0x8817 # macro
GL_INTENSITY_SNORM = 0x9013 # macro
GL_INTERLACE_OML = 0x8980 # macro
GL_INTERLACE_READ_INGR = 0x8568 # macro
GL_INTERLACE_READ_OML = 0x8981 # macro
GL_INTERLACE_SGIX = 0x8094 # macro
GL_INTERLEAVED_ATTRIBS = 0x8C8C # macro
GL_INTERLEAVED_ATTRIBS_EXT = 0x8C8C # macro
GL_INTERLEAVED_ATTRIBS_NV = 0x8C8C # macro
GL_INTERNALFORMAT_ALPHA_SIZE = 0x8274 # macro
GL_INTERNALFORMAT_ALPHA_TYPE = 0x827B # macro
GL_INTERNALFORMAT_BLUE_SIZE = 0x8273 # macro
GL_INTERNALFORMAT_BLUE_TYPE = 0x827A # macro
GL_INTERNALFORMAT_DEPTH_SIZE = 0x8275 # macro
GL_INTERNALFORMAT_DEPTH_TYPE = 0x827C # macro
GL_INTERNALFORMAT_GREEN_SIZE = 0x8272 # macro
GL_INTERNALFORMAT_GREEN_TYPE = 0x8279 # macro
GL_INTERNALFORMAT_PREFERRED = 0x8270 # macro
GL_INTERNALFORMAT_RED_SIZE = 0x8271 # macro
GL_INTERNALFORMAT_RED_TYPE = 0x8278 # macro
GL_INTERNALFORMAT_SHARED_SIZE = 0x8277 # macro
GL_INTERNALFORMAT_STENCIL_SIZE = 0x8276 # macro
GL_INTERNALFORMAT_STENCIL_TYPE = 0x827D # macro
GL_INTERNALFORMAT_SUPPORTED = 0x826F # macro
GL_INTERPOLATE = 0x8575 # macro
GL_INTERPOLATE_ARB = 0x8575 # macro
GL_INTERPOLATE_EXT = 0x8575 # macro
GL_INT_2_10_10_10_REV = 0x8D9F # macro
GL_INT_IMAGE_1D = 0x9057 # macro
GL_INT_IMAGE_1D_ARRAY = 0x905D # macro
GL_INT_IMAGE_1D_ARRAY_EXT = 0x905D # macro
GL_INT_IMAGE_1D_EXT = 0x9057 # macro
GL_INT_IMAGE_2D = 0x9058 # macro
GL_INT_IMAGE_2D_ARRAY = 0x905E # macro
GL_INT_IMAGE_2D_ARRAY_EXT = 0x905E # macro
GL_INT_IMAGE_2D_EXT = 0x9058 # macro
GL_INT_IMAGE_2D_MULTISAMPLE = 0x9060 # macro
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9061 # macro
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9061 # macro
GL_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x9060 # macro
GL_INT_IMAGE_2D_RECT = 0x905A # macro
GL_INT_IMAGE_2D_RECT_EXT = 0x905A # macro
GL_INT_IMAGE_3D = 0x9059 # macro
GL_INT_IMAGE_3D_EXT = 0x9059 # macro
GL_INT_IMAGE_BUFFER = 0x905C # macro
GL_INT_IMAGE_BUFFER_EXT = 0x905C # macro
GL_INT_IMAGE_CUBE = 0x905B # macro
GL_INT_IMAGE_CUBE_EXT = 0x905B # macro
GL_INT_IMAGE_CUBE_MAP_ARRAY = 0x905F # macro
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x905F # macro
GL_INT_SAMPLER_1D = 0x8DC9 # macro
GL_INT_SAMPLER_1D_ARRAY = 0x8DCE # macro
GL_INT_SAMPLER_1D_ARRAY_EXT = 0x8DCE # macro
GL_INT_SAMPLER_1D_EXT = 0x8DC9 # macro
GL_INT_SAMPLER_2D = 0x8DCA # macro
GL_INT_SAMPLER_2D_ARRAY = 0x8DCF # macro
GL_INT_SAMPLER_2D_ARRAY_EXT = 0x8DCF # macro
GL_INT_SAMPLER_2D_EXT = 0x8DCA # macro
GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109 # macro
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C # macro
GL_INT_SAMPLER_2D_RECT = 0x8DCD # macro
GL_INT_SAMPLER_2D_RECT_EXT = 0x8DCD # macro
GL_INT_SAMPLER_3D = 0x8DCB # macro
GL_INT_SAMPLER_3D_EXT = 0x8DCB # macro
GL_INT_SAMPLER_BUFFER = 0x8DD0 # macro
GL_INT_SAMPLER_BUFFER_AMD = 0x9002 # macro
GL_INT_SAMPLER_BUFFER_EXT = 0x8DD0 # macro
GL_INT_SAMPLER_CUBE = 0x8DCC # macro
GL_INT_SAMPLER_CUBE_EXT = 0x8DCC # macro
GL_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E # macro
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900E # macro
GL_INT_SAMPLER_RENDERBUFFER_NV = 0x8E57 # macro
GL_INT_VEC2 = 0x8B53 # macro
GL_INT_VEC2_ARB = 0x8B53 # macro
GL_INT_VEC3 = 0x8B54 # macro
GL_INT_VEC3_ARB = 0x8B54 # macro
GL_INT_VEC4 = 0x8B55 # macro
GL_INT_VEC4_ARB = 0x8B55 # macro
GL_INVALID_ENUM = 0x0500 # macro
GL_INVALID_FRAMEBUFFER_OPERATION = 0x0506 # macro
GL_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x0506 # macro
GL_INVALID_INDEX = 0xFFFFFFFF # macro
GL_INVALID_OPERATION = 0x0502 # macro
GL_INVALID_VALUE = 0x0501 # macro
GL_INVARIANT_DATATYPE_EXT = 0x87EB # macro
GL_INVARIANT_EXT = 0x87C2 # macro
GL_INVARIANT_VALUE_EXT = 0x87EA # macro
GL_INVERSE_NV = 0x862B # macro
GL_INVERSE_TRANSPOSE_NV = 0x862D # macro
GL_INVERT = 0x150A # macro
GL_INVERTED_SCREEN_W_REND = 0x8491 # macro
GL_INVERT_OVG_NV = 0x92B4 # macro
GL_INVERT_RGB_NV = 0x92A3 # macro
GL_IR_INSTRUMENT1_SGIX = 0x817F # macro
GL_ISOLINES = 0x8E7A # macro
GL_IS_PER_PATCH = 0x92E7 # macro
GL_IS_ROW_MAJOR = 0x9300 # macro
GL_ITALIC_BIT_NV = 0x02 # macro
GL_IUI_N3F_V2F_EXT = 0x81AF # macro
GL_IUI_N3F_V3F_EXT = 0x81B0 # macro
GL_IUI_V2F_EXT = 0x81AD # macro
GL_IUI_V3F_EXT = 0x81AE # macro
GL_KEEP = 0x1E00 # macro
GL_LARGE_CCW_ARC_TO_NV = 0x16 # macro
GL_LARGE_CW_ARC_TO_NV = 0x18 # macro
GL_LAST_VERTEX_CONVENTION = 0x8E4E # macro
GL_LAST_VERTEX_CONVENTION_EXT = 0x8E4E # macro
GL_LAST_VIDEO_CAPTURE_STATUS_NV = 0x9027 # macro
GL_LAYER_NV = 0x8DAA # macro
GL_LAYER_PROVOKING_VERTEX = 0x825E # macro
GL_LAYOUT_COLOR_ATTACHMENT_EXT = 0x958E # macro
GL_LAYOUT_DEFAULT_INTEL = 0 # macro
GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT = 0x9531 # macro
GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT = 0x9530 # macro
GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT = 0x958F # macro
GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT = 0x9590 # macro
GL_LAYOUT_GENERAL_EXT = 0x958D # macro
GL_LAYOUT_LINEAR_CPU_CACHED_INTEL = 2 # macro
GL_LAYOUT_LINEAR_INTEL = 1 # macro
GL_LAYOUT_SHADER_READ_ONLY_EXT = 0x9591 # macro
GL_LAYOUT_TRANSFER_DST_EXT = 0x9593 # macro
GL_LAYOUT_TRANSFER_SRC_EXT = 0x9592 # macro
GL_LEFT = 0x0406 # macro
GL_LEQUAL = 0x0203 # macro
GL_LERP_ATI = 0x8969 # macro
GL_LESS = 0x0201 # macro
GL_LGPU_SEPARATE_STORAGE_BIT_NVX = 0x0800 # macro
GL_LIGHT0 = 0x4000 # macro
GL_LIGHT1 = 0x4001 # macro
GL_LIGHT2 = 0x4002 # macro
GL_LIGHT3 = 0x4003 # macro
GL_LIGHT4 = 0x4004 # macro
GL_LIGHT5 = 0x4005 # macro
GL_LIGHT6 = 0x4006 # macro
GL_LIGHT7 = 0x4007 # macro
GL_LIGHTEN_KHR = 0x9298 # macro
GL_LIGHTEN_NV = 0x9298 # macro
GL_LIGHTING = 0x0B50 # macro
GL_LIGHTING_BIT = 0x00000040 # macro
GL_LIGHT_ENV_MODE_SGIX = 0x8407 # macro
GL_LIGHT_MODEL_AMBIENT = 0x0B53 # macro
GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8 # macro
GL_LIGHT_MODEL_COLOR_CONTROL_EXT = 0x81F8 # macro
GL_LIGHT_MODEL_LOCAL_VIEWER = 0x0B51 # macro
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = 0x85B0 # macro
GL_LIGHT_MODEL_TWO_SIDE = 0x0B52 # macro
GL_LINE = 0x1B01 # macro
GL_LINEAR = 0x2601 # macro
GL_LINEARBURN_NV = 0x92A5 # macro
GL_LINEARDODGE_NV = 0x92A4 # macro
GL_LINEARLIGHT_NV = 0x92A7 # macro
GL_LINEAR_ATTENUATION = 0x1208 # macro
GL_LINEAR_CLIPMAP_LINEAR_SGIX = 0x8170 # macro
GL_LINEAR_CLIPMAP_NEAREST_SGIX = 0x844F # macro
GL_LINEAR_DETAIL_ALPHA_SGIS = 0x8098 # macro
GL_LINEAR_DETAIL_COLOR_SGIS = 0x8099 # macro
GL_LINEAR_DETAIL_SGIS = 0x8097 # macro
GL_LINEAR_MIPMAP_LINEAR = 0x2703 # macro
GL_LINEAR_MIPMAP_NEAREST = 0x2701 # macro
GL_LINEAR_SHARPEN_ALPHA_SGIS = 0x80AE # macro
GL_LINEAR_SHARPEN_COLOR_SGIS = 0x80AF # macro
GL_LINEAR_SHARPEN_SGIS = 0x80AD # macro
GL_LINEAR_TILING_EXT = 0x9585 # macro
GL_LINES = 0x0001 # macro
GL_LINES_ADJACENCY = 0x000A # macro
GL_LINES_ADJACENCY_ARB = 0x000A # macro
GL_LINES_ADJACENCY_EXT = 0x000A # macro
GL_LINE_BIT = 0x00000004 # macro
GL_LINE_LOOP = 0x0002 # macro
GL_LINE_RESET_TOKEN = 0x0707 # macro
GL_LINE_SMOOTH = 0x0B20 # macro
GL_LINE_SMOOTH_HINT = 0x0C52 # macro
GL_LINE_STIPPLE = 0x0B24 # macro
GL_LINE_STIPPLE_PATTERN = 0x0B25 # macro
GL_LINE_STIPPLE_REPEAT = 0x0B26 # macro
GL_LINE_STRIP = 0x0003 # macro
GL_LINE_STRIP_ADJACENCY = 0x000B # macro
GL_LINE_STRIP_ADJACENCY_ARB = 0x000B # macro
GL_LINE_STRIP_ADJACENCY_EXT = 0x000B # macro
GL_LINE_TOKEN = 0x0702 # macro
GL_LINE_TO_NV = 0x04 # macro
GL_LINE_WIDTH = 0x0B21 # macro
GL_LINE_WIDTH_COMMAND_NV = 0x000D # macro
GL_LINE_WIDTH_GRANULARITY = 0x0B23 # macro
GL_LINE_WIDTH_RANGE = 0x0B22 # macro
GL_LINK_STATUS = 0x8B82 # macro
GL_LIST_BASE = 0x0B32 # macro
GL_LIST_BIT = 0x00020000 # macro
GL_LIST_INDEX = 0x0B33 # macro
GL_LIST_MODE = 0x0B30 # macro
GL_LIST_PRIORITY_SGIX = 0x8182 # macro
GL_LOAD = 0x0101 # macro
GL_LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED # macro
GL_LOCAL_CONSTANT_EXT = 0x87C3 # macro
GL_LOCAL_CONSTANT_VALUE_EXT = 0x87EC # macro
GL_LOCAL_EXT = 0x87C4 # macro
GL_LOCATION = 0x930E # macro
GL_LOCATION_COMPONENT = 0x934A # macro
GL_LOCATION_INDEX = 0x930F # macro
GL_LOGIC_OP = 0x0BF1 # macro
GL_LOGIC_OP_MODE = 0x0BF0 # macro
GL_LOSE_CONTEXT_ON_RESET = 0x8252 # macro
GL_LOSE_CONTEXT_ON_RESET_ARB = 0x8252 # macro
GL_LOWER_LEFT = 0x8CA1 # macro
GL_LOW_FLOAT = 0x8DF0 # macro
GL_LOW_INT = 0x8DF3 # macro
GL_LO_BIAS_NV = 0x8715 # macro
GL_LO_SCALE_NV = 0x870F # macro
GL_LUID_SIZE_EXT = 8 # macro
GL_LUMINANCE = 0x1909 # macro
GL_LUMINANCE12 = 0x8041 # macro
GL_LUMINANCE12_ALPHA12 = 0x8047 # macro
GL_LUMINANCE12_ALPHA12_EXT = 0x8047 # macro
GL_LUMINANCE12_ALPHA4 = 0x8046 # macro
GL_LUMINANCE12_ALPHA4_EXT = 0x8046 # macro
GL_LUMINANCE12_EXT = 0x8041 # macro
GL_LUMINANCE16 = 0x8042 # macro
GL_LUMINANCE16F_ARB = 0x881E # macro
GL_LUMINANCE16F_EXT = 0x881E # macro
GL_LUMINANCE16I_EXT = 0x8D8C # macro
GL_LUMINANCE16UI_EXT = 0x8D7A # macro
GL_LUMINANCE16_ALPHA16 = 0x8048 # macro
GL_LUMINANCE16_ALPHA16_EXT = 0x8048 # macro
GL_LUMINANCE16_ALPHA16_SNORM = 0x901A # macro
GL_LUMINANCE16_EXT = 0x8042 # macro
GL_LUMINANCE16_SNORM = 0x9019 # macro
GL_LUMINANCE32F_ARB = 0x8818 # macro
GL_LUMINANCE32F_EXT = 0x8818 # macro
GL_LUMINANCE32I_EXT = 0x8D86 # macro
GL_LUMINANCE32UI_EXT = 0x8D74 # macro
GL_LUMINANCE4 = 0x803F # macro
GL_LUMINANCE4_ALPHA4 = 0x8043 # macro
GL_LUMINANCE4_ALPHA4_EXT = 0x8043 # macro
GL_LUMINANCE4_EXT = 0x803F # macro
GL_LUMINANCE6_ALPHA2 = 0x8044 # macro
GL_LUMINANCE6_ALPHA2_EXT = 0x8044 # macro
GL_LUMINANCE8 = 0x8040 # macro
GL_LUMINANCE8I_EXT = 0x8D92 # macro
GL_LUMINANCE8UI_EXT = 0x8D80 # macro
GL_LUMINANCE8_ALPHA8 = 0x8045 # macro
GL_LUMINANCE8_ALPHA8_EXT = 0x8045 # macro
GL_LUMINANCE8_ALPHA8_SNORM = 0x9016 # macro
GL_LUMINANCE8_EXT = 0x8040 # macro
GL_LUMINANCE8_SNORM = 0x9015 # macro
GL_LUMINANCE_ALPHA = 0x190A # macro
GL_LUMINANCE_ALPHA16F_ARB = 0x881F # macro
GL_LUMINANCE_ALPHA16F_EXT = 0x881F # macro
GL_LUMINANCE_ALPHA16I_EXT = 0x8D8D # macro
GL_LUMINANCE_ALPHA16UI_EXT = 0x8D7B # macro
GL_LUMINANCE_ALPHA32F_ARB = 0x8819 # macro
GL_LUMINANCE_ALPHA32F_EXT = 0x8819 # macro
GL_LUMINANCE_ALPHA32I_EXT = 0x8D87 # macro
GL_LUMINANCE_ALPHA32UI_EXT = 0x8D75 # macro
GL_LUMINANCE_ALPHA8I_EXT = 0x8D93 # macro
GL_LUMINANCE_ALPHA8UI_EXT = 0x8D81 # macro
GL_LUMINANCE_ALPHA_FLOAT16_APPLE = 0x881F # macro
GL_LUMINANCE_ALPHA_FLOAT16_ATI = 0x881F # macro
GL_LUMINANCE_ALPHA_FLOAT32_APPLE = 0x8819 # macro
GL_LUMINANCE_ALPHA_FLOAT32_ATI = 0x8819 # macro
GL_LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D # macro
GL_LUMINANCE_ALPHA_SNORM = 0x9012 # macro
GL_LUMINANCE_FLOAT16_APPLE = 0x881E # macro
GL_LUMINANCE_FLOAT16_ATI = 0x881E # macro
GL_LUMINANCE_FLOAT32_APPLE = 0x8818 # macro
GL_LUMINANCE_FLOAT32_ATI = 0x8818 # macro
GL_LUMINANCE_INTEGER_EXT = 0x8D9C # macro
GL_LUMINANCE_SNORM = 0x9011 # macro
GL_MAD_ATI = 0x8968 # macro
GL_MAGNITUDE_BIAS_NV = 0x8718 # macro
GL_MAGNITUDE_SCALE_NV = 0x8712 # macro
GL_MAJOR_VERSION = 0x821B # macro
GL_MANUAL_GENERATE_MIPMAP = 0x8294 # macro
GL_MAP1_BINORMAL_EXT = 0x8446 # macro
GL_MAP1_COLOR_4 = 0x0D90 # macro
GL_MAP1_GRID_DOMAIN = 0x0DD0 # macro
GL_MAP1_GRID_SEGMENTS = 0x0DD1 # macro
GL_MAP1_INDEX = 0x0D91 # macro
GL_MAP1_NORMAL = 0x0D92 # macro
GL_MAP1_TANGENT_EXT = 0x8444 # macro
GL_MAP1_TEXTURE_COORD_1 = 0x0D93 # macro
GL_MAP1_TEXTURE_COORD_2 = 0x0D94 # macro
GL_MAP1_TEXTURE_COORD_3 = 0x0D95 # macro
GL_MAP1_TEXTURE_COORD_4 = 0x0D96 # macro
GL_MAP1_VERTEX_3 = 0x0D97 # macro
GL_MAP1_VERTEX_4 = 0x0D98 # macro
GL_MAP1_VERTEX_ATTRIB0_4_NV = 0x8660 # macro
GL_MAP1_VERTEX_ATTRIB10_4_NV = 0x866A # macro
GL_MAP1_VERTEX_ATTRIB11_4_NV = 0x866B # macro
GL_MAP1_VERTEX_ATTRIB12_4_NV = 0x866C # macro
GL_MAP1_VERTEX_ATTRIB13_4_NV = 0x866D # macro
GL_MAP1_VERTEX_ATTRIB14_4_NV = 0x866E # macro
GL_MAP1_VERTEX_ATTRIB15_4_NV = 0x866F # macro
GL_MAP1_VERTEX_ATTRIB1_4_NV = 0x8661 # macro
GL_MAP1_VERTEX_ATTRIB2_4_NV = 0x8662 # macro
GL_MAP1_VERTEX_ATTRIB3_4_NV = 0x8663 # macro
GL_MAP1_VERTEX_ATTRIB4_4_NV = 0x8664 # macro
GL_MAP1_VERTEX_ATTRIB5_4_NV = 0x8665 # macro
GL_MAP1_VERTEX_ATTRIB6_4_NV = 0x8666 # macro
GL_MAP1_VERTEX_ATTRIB7_4_NV = 0x8667 # macro
GL_MAP1_VERTEX_ATTRIB8_4_NV = 0x8668 # macro
GL_MAP1_VERTEX_ATTRIB9_4_NV = 0x8669 # macro
GL_MAP2_BINORMAL_EXT = 0x8447 # macro
GL_MAP2_COLOR_4 = 0x0DB0 # macro
GL_MAP2_GRID_DOMAIN = 0x0DD2 # macro
GL_MAP2_GRID_SEGMENTS = 0x0DD3 # macro
GL_MAP2_INDEX = 0x0DB1 # macro
GL_MAP2_NORMAL = 0x0DB2 # macro
GL_MAP2_TANGENT_EXT = 0x8445 # macro
GL_MAP2_TEXTURE_COORD_1 = 0x0DB3 # macro
GL_MAP2_TEXTURE_COORD_2 = 0x0DB4 # macro
GL_MAP2_TEXTURE_COORD_3 = 0x0DB5 # macro
GL_MAP2_TEXTURE_COORD_4 = 0x0DB6 # macro
GL_MAP2_VERTEX_3 = 0x0DB7 # macro
GL_MAP2_VERTEX_4 = 0x0DB8 # macro
GL_MAP2_VERTEX_ATTRIB0_4_NV = 0x8670 # macro
GL_MAP2_VERTEX_ATTRIB10_4_NV = 0x867A # macro
GL_MAP2_VERTEX_ATTRIB11_4_NV = 0x867B # macro
GL_MAP2_VERTEX_ATTRIB12_4_NV = 0x867C # macro
GL_MAP2_VERTEX_ATTRIB13_4_NV = 0x867D # macro
GL_MAP2_VERTEX_ATTRIB14_4_NV = 0x867E # macro
GL_MAP2_VERTEX_ATTRIB15_4_NV = 0x867F # macro
GL_MAP2_VERTEX_ATTRIB1_4_NV = 0x8671 # macro
GL_MAP2_VERTEX_ATTRIB2_4_NV = 0x8672 # macro
GL_MAP2_VERTEX_ATTRIB3_4_NV = 0x8673 # macro
GL_MAP2_VERTEX_ATTRIB4_4_NV = 0x8674 # macro
GL_MAP2_VERTEX_ATTRIB5_4_NV = 0x8675 # macro
GL_MAP2_VERTEX_ATTRIB6_4_NV = 0x8676 # macro
GL_MAP2_VERTEX_ATTRIB7_4_NV = 0x8677 # macro
GL_MAP2_VERTEX_ATTRIB8_4_NV = 0x8678 # macro
GL_MAP2_VERTEX_ATTRIB9_4_NV = 0x8679 # macro
GL_MAP_ATTRIB_U_ORDER_NV = 0x86C3 # macro
GL_MAP_ATTRIB_V_ORDER_NV = 0x86C4 # macro
GL_MAP_COHERENT_BIT = 0x0080 # macro
GL_MAP_COLOR = 0x0D10 # macro
GL_MAP_FLUSH_EXPLICIT_BIT = 0x0010 # macro
GL_MAP_INVALIDATE_BUFFER_BIT = 0x0008 # macro
GL_MAP_INVALIDATE_RANGE_BIT = 0x0004 # macro
GL_MAP_PERSISTENT_BIT = 0x0040 # macro
GL_MAP_READ_BIT = 0x0001 # macro
GL_MAP_STENCIL = 0x0D11 # macro
GL_MAP_TESSELLATION_NV = 0x86C2 # macro
GL_MAP_UNSYNCHRONIZED_BIT = 0x0020 # macro
GL_MAP_WRITE_BIT = 0x0002 # macro
GL_MATERIAL_SIDE_HINT_PGI = 0x1A22C # macro
GL_MATRIX0_ARB = 0x88C0 # macro
GL_MATRIX0_NV = 0x8630 # macro
GL_MATRIX10_ARB = 0x88CA # macro
GL_MATRIX11_ARB = 0x88CB # macro
GL_MATRIX12_ARB = 0x88CC # macro
GL_MATRIX13_ARB = 0x88CD # macro
GL_MATRIX14_ARB = 0x88CE # macro
GL_MATRIX15_ARB = 0x88CF # macro
GL_MATRIX16_ARB = 0x88D0 # macro
GL_MATRIX17_ARB = 0x88D1 # macro
GL_MATRIX18_ARB = 0x88D2 # macro
GL_MATRIX19_ARB = 0x88D3 # macro
GL_MATRIX1_ARB = 0x88C1 # macro
GL_MATRIX1_NV = 0x8631 # macro
GL_MATRIX20_ARB = 0x88D4 # macro
GL_MATRIX21_ARB = 0x88D5 # macro
GL_MATRIX22_ARB = 0x88D6 # macro
GL_MATRIX23_ARB = 0x88D7 # macro
GL_MATRIX24_ARB = 0x88D8 # macro
GL_MATRIX25_ARB = 0x88D9 # macro
GL_MATRIX26_ARB = 0x88DA # macro
GL_MATRIX27_ARB = 0x88DB # macro
GL_MATRIX28_ARB = 0x88DC # macro
GL_MATRIX29_ARB = 0x88DD # macro
GL_MATRIX2_ARB = 0x88C2 # macro
GL_MATRIX2_NV = 0x8632 # macro
GL_MATRIX30_ARB = 0x88DE # macro
GL_MATRIX31_ARB = 0x88DF # macro
GL_MATRIX3_ARB = 0x88C3 # macro
GL_MATRIX3_NV = 0x8633 # macro
GL_MATRIX4_ARB = 0x88C4 # macro
GL_MATRIX4_NV = 0x8634 # macro
GL_MATRIX5_ARB = 0x88C5 # macro
GL_MATRIX5_NV = 0x8635 # macro
GL_MATRIX6_ARB = 0x88C6 # macro
GL_MATRIX6_NV = 0x8636 # macro
GL_MATRIX7_ARB = 0x88C7 # macro
GL_MATRIX7_NV = 0x8637 # macro
GL_MATRIX8_ARB = 0x88C8 # macro
GL_MATRIX9_ARB = 0x88C9 # macro
GL_MATRIX_EXT = 0x87C0 # macro
GL_MATRIX_INDEX_ARRAY_ARB = 0x8844 # macro
GL_MATRIX_INDEX_ARRAY_POINTER_ARB = 0x8849 # macro
GL_MATRIX_INDEX_ARRAY_SIZE_ARB = 0x8846 # macro
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = 0x8848 # macro
GL_MATRIX_INDEX_ARRAY_TYPE_ARB = 0x8847 # macro
GL_MATRIX_MODE = 0x0BA0 # macro
GL_MATRIX_PALETTE_ARB = 0x8840 # macro
GL_MATRIX_STRIDE = 0x92FF # macro
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = 0x00200000 # macro
GL_MAT_AMBIENT_BIT_PGI = 0x00100000 # macro
GL_MAT_COLOR_INDEXES_BIT_PGI = 0x01000000 # macro
GL_MAT_DIFFUSE_BIT_PGI = 0x00400000 # macro
GL_MAT_EMISSION_BIT_PGI = 0x00800000 # macro
GL_MAT_SHININESS_BIT_PGI = 0x02000000 # macro
GL_MAT_SPECULAR_BIT_PGI = 0x04000000 # macro
GL_MAX = 0x8008 # macro
GL_MAX_3D_TEXTURE_SIZE = 0x8073 # macro
GL_MAX_3D_TEXTURE_SIZE_EXT = 0x8073 # macro
GL_MAX_4D_TEXTURE_SIZE_SGIS = 0x8138 # macro
GL_MAX_ACTIVE_LIGHTS_SGIX = 0x8405 # macro
GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF # macro
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = 0x88FF # macro
GL_MAX_ASYNC_DRAW_PIXELS_SGIX = 0x8360 # macro
GL_MAX_ASYNC_HISTOGRAM_SGIX = 0x832D # macro
GL_MAX_ASYNC_READ_PIXELS_SGIX = 0x8361 # macro
GL_MAX_ASYNC_TEX_IMAGE_SGIX = 0x835F # macro
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92DC # macro
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92D8 # macro
GL_MAX_ATTRIB_STACK_DEPTH = 0x0D35 # macro
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = 0x8DED # macro
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B # macro
GL_MAX_CLIPMAP_DEPTH_SGIX = 0x8177 # macro
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8178 # macro
GL_MAX_CLIP_DISTANCES = 0x0D32 # macro
GL_MAX_CLIP_PLANES = 0x0D32 # macro
GL_MAX_COARSE_FRAGMENT_SAMPLES_NV = 0x955F # macro
GL_MAX_COLOR_ATTACHMENTS = 0x8CDF # macro
GL_MAX_COLOR_ATTACHMENTS_EXT = 0x8CDF # macro
GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD = 0x91B3 # macro
GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD = 0x91B4 # macro
GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3 # macro
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B3 # macro
GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910E # macro
GL_MAX_COMBINED_ATOMIC_COUNTERS = 0x92D7 # macro
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92D1 # macro
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = 0x82FA # macro
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = 0x8266 # macro
GL_MAX_COMBINED_DIMENSIONS = 0x8282 # macro
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33 # macro
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32 # macro
GL_MAX_COMBINED_IMAGE_UNIFORMS = 0x90CF # macro
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = 0x8F39 # macro
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = 0x8F39 # macro
GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV = 0x8E67 # macro
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = 0x8F39 # macro
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = 0x90DC # macro
GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV = 0x8E6F # macro
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E # macro
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F # macro
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D # macro
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = 0x8B4D # macro
GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E # macro
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31 # macro
GL_MAX_COMPUTE_ATOMIC_COUNTERS = 0x8265 # macro
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = 0x8264 # macro
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB = 0x90EB # macro
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = 0x91BF # macro
GL_MAX_COMPUTE_IMAGE_UNIFORMS = 0x91BD # macro
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = 0x90DB # macro
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = 0x8262 # macro
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = 0x91BC # macro
GL_MAX_COMPUTE_UNIFORM_BLOCKS = 0x91BB # macro
GL_MAX_COMPUTE_UNIFORM_COMPONENTS = 0x8263 # macro
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = 0x9344 # macro
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = 0x9345 # macro
GL_MAX_COMPUTE_WORK_GROUP_COUNT = 0x91BE # macro
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = 0x90EB # macro
GL_MAX_COMPUTE_WORK_GROUP_SIZE = 0x91BF # macro
GL_MAX_CONVOLUTION_HEIGHT = 0x801B # macro
GL_MAX_CONVOLUTION_HEIGHT_EXT = 0x801B # macro
GL_MAX_CONVOLUTION_WIDTH = 0x801A # macro
GL_MAX_CONVOLUTION_WIDTH_EXT = 0x801A # macro
GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C # macro
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = 0x851C # macro
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C # macro
GL_MAX_CULL_DISTANCES = 0x82F9 # macro
GL_MAX_DEBUG_GROUP_STACK_DEPTH = 0x826C # macro
GL_MAX_DEBUG_LOGGED_MESSAGES = 0x9144 # macro
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD = 0x9144 # macro
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB = 0x9144 # macro
GL_MAX_DEBUG_MESSAGE_LENGTH = 0x9143 # macro
GL_MAX_DEBUG_MESSAGE_LENGTH_AMD = 0x9143 # macro
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB = 0x9143 # macro
GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV = 0x90D1 # macro
GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV = 0x90D0 # macro
GL_MAX_DEFORMATION_ORDER_SGIX = 0x8197 # macro
GL_MAX_DEPTH = 0x8280 # macro
GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD = 0x91B5 # macro
GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F # macro
GL_MAX_DETACHED_BUFFERS_NV = 0x95AD # macro
GL_MAX_DETACHED_TEXTURES_NV = 0x95AC # macro
GL_MAX_DRAW_BUFFERS = 0x8824 # macro
GL_MAX_DRAW_BUFFERS_ARB = 0x8824 # macro
GL_MAX_DRAW_BUFFERS_ATI = 0x8824 # macro
GL_MAX_DRAW_MESH_TASKS_COUNT_NV = 0x953D # macro
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC # macro
GL_MAX_ELEMENTS_INDICES = 0x80E9 # macro
GL_MAX_ELEMENTS_INDICES_EXT = 0x80E9 # macro
GL_MAX_ELEMENTS_VERTICES = 0x80E8 # macro
GL_MAX_ELEMENTS_VERTICES_EXT = 0x80E8 # macro
GL_MAX_ELEMENT_INDEX = 0x8D6B # macro
GL_MAX_EVAL_ORDER = 0x0D30 # macro
GL_MAX_EXT = 0x8008 # macro
GL_MAX_FOG_FUNC_POINTS_SGIS = 0x812C # macro
GL_MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92D6 # macro
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92D0 # macro
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = 0x8DE3 # macro
GL_MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90CE # macro
GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125 # macro
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C # macro
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5C # macro
GL_MAX_FRAGMENT_LIGHTS_SGIX = 0x8404 # macro
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = 0x8868 # macro
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = 0x90DA # macro
GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D # macro
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49 # macro
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = 0x8B49 # macro
GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD # macro
GL_MAX_FRAMEBUFFER_HEIGHT = 0x9316 # macro
GL_MAX_FRAMEBUFFER_LAYERS = 0x9317 # macro
GL_MAX_FRAMEBUFFER_SAMPLES = 0x9318 # macro
GL_MAX_FRAMEBUFFER_WIDTH = 0x9315 # macro
GL_MAX_FRAMEZOOM_FACTOR_SGIX = 0x818D # macro
GL_MAX_GENERAL_COMBINERS_NV = 0x854D # macro
GL_MAX_GEOMETRY_ATOMIC_COUNTERS = 0x92D5 # macro
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 0x92CF # macro
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = 0x8DE4 # macro
GL_MAX_GEOMETRY_IMAGE_UNIFORMS = 0x90CD # macro
GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123 # macro
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124 # macro
GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0 # macro
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = 0x8DE0 # macro
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = 0x8DE0 # macro
GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV = 0x8E5A # macro
GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A # macro
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = 0x90D7 # macro
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29 # macro
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = 0x8C29 # macro
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29 # macro
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1 # macro
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = 0x8DE1 # macro
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1 # macro
GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C # macro
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF # macro
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = 0x8DDF # macro
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF # macro
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = 0x8DDD # macro
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD # macro
GL_MAX_HEIGHT = 0x827F # macro
GL_MAX_IMAGE_SAMPLES = 0x906D # macro
GL_MAX_IMAGE_SAMPLES_EXT = 0x906D # macro
GL_MAX_IMAGE_UNITS = 0x8F38 # macro
GL_MAX_IMAGE_UNITS_EXT = 0x8F38 # macro
GL_MAX_INTEGER_SAMPLES = 0x9110 # macro
GL_MAX_LABEL_LENGTH = 0x82E8 # macro
GL_MAX_LAYERS = 0x8281 # macro
GL_MAX_LGPU_GPUS_NVX = 0x92BA # macro
GL_MAX_LIGHTS = 0x0D31 # macro
GL_MAX_LIST_NESTING = 0x0B31 # macro
GL_MAX_MAP_TESSELLATION_NV = 0x86D6 # macro
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = 0x8841 # macro
GL_MAX_MESH_ATOMIC_COUNTERS_NV = 0x8E65 # macro
GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV = 0x8E64 # macro
GL_MAX_MESH_IMAGE_UNIFORMS_NV = 0x8E62 # macro
GL_MAX_MESH_OUTPUT_PRIMITIVES_NV = 0x9539 # macro
GL_MAX_MESH_OUTPUT_VERTICES_NV = 0x9538 # macro
GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV = 0x8E66 # macro
GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV = 0x8E61 # macro
GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV = 0x9536 # macro
GL_MAX_MESH_UNIFORM_BLOCKS_NV = 0x8E60 # macro
GL_MAX_MESH_UNIFORM_COMPONENTS_NV = 0x8E63 # macro
GL_MAX_MESH_VIEWS_NV = 0x9557 # macro
GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV = 0x95A2 # macro
GL_MAX_MESH_WORK_GROUP_SIZE_NV = 0x953B # macro
GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36 # macro
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E11 # macro
GL_MAX_NAME_LENGTH = 0x92F6 # macro
GL_MAX_NAME_STACK_DEPTH = 0x0D37 # macro
GL_MAX_NUM_ACTIVE_VARIABLES = 0x92F7 # macro
GL_MAX_NUM_COMPATIBLE_SUBROUTINES = 0x92F8 # macro
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA # macro
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CD # macro
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE # macro
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CC # macro
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB # macro
GL_MAX_PALETTE_MATRICES_ARB = 0x8842 # macro
GL_MAX_PATCH_VERTICES = 0x8E7D # macro
GL_MAX_PIXEL_MAP_TABLE = 0x0D34 # macro
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8337 # macro
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F1 # macro
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B1 # macro
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x880B # macro
GL_MAX_PROGRAM_ATTRIBS_ARB = 0x88AD # macro
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8908 # macro
GL_MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5 # macro
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB = 0x88B5 # macro
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = 0x88F4 # macro
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV = 0x8DA5 # macro
GL_MAX_PROGRAM_GENERIC_RESULTS_NV = 0x8DA6 # macro
GL_MAX_PROGRAM_IF_DEPTH_NV = 0x88F6 # macro
GL_MAX_PROGRAM_INSTRUCTIONS_ARB = 0x88A1 # macro
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = 0x88B4 # macro
GL_MAX_PROGRAM_LOOP_COUNT_NV = 0x88F8 # macro
GL_MAX_PROGRAM_LOOP_DEPTH_NV = 0x88F7 # macro
GL_MAX_PROGRAM_MATRICES_ARB = 0x862F # macro
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = 0x862E # macro
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B3 # macro
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x880E # macro
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AF # macro
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A3 # macro
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AB # macro
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A7 # macro
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x8810 # macro
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x880F # macro
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV = 0x8C27 # macro
GL_MAX_PROGRAM_PARAMETERS_ARB = 0x88A9 # macro
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = 0x8DA0 # macro
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = 0x8DA1 # macro
GL_MAX_PROGRAM_PATCH_ATTRIBS_NV = 0x86D8 # macro
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV = 0x8909 # macro
GL_MAX_PROGRAM_SUBROUTINE_NUM_NV = 0x8F45 # macro
GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV = 0x8F44 # macro
GL_MAX_PROGRAM_TEMPORARIES_ARB = 0x88A5 # macro
GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905 # macro
GL_MAX_PROGRAM_TEXEL_OFFSET_EXT = 0x8905 # macro
GL_MAX_PROGRAM_TEXEL_OFFSET_NV = 0x8905 # macro
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB = 0x8F9F # macro
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F # macro
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5F # macro
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5F # macro
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = 0x880D # macro
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x880C # macro
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = 0x8C28 # macro
GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38 # macro
GL_MAX_RASTER_SAMPLES_EXT = 0x9329 # macro
GL_MAX_RATIONAL_EVAL_ORDER_NV = 0x86D7 # macro
GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8 # macro
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB = 0x84F8 # macro
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV = 0x84F8 # macro
GL_MAX_RENDERBUFFER_SIZE = 0x84E8 # macro
GL_MAX_RENDERBUFFER_SIZE_EXT = 0x84E8 # macro
GL_MAX_SAMPLES = 0x8D57 # macro
GL_MAX_SAMPLES_EXT = 0x8D57 # macro
GL_MAX_SAMPLE_MASK_WORDS = 0x8E59 # macro
GL_MAX_SAMPLE_MASK_WORDS_NV = 0x8E59 # macro
GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111 # macro
GL_MAX_SHADER_BUFFER_ADDRESS_NV = 0x8F35 # macro
GL_MAX_SHADER_COMPILER_THREADS_ARB = 0x91B0 # macro
GL_MAX_SHADER_COMPILER_THREADS_KHR = 0x91B0 # macro
GL_MAX_SHADER_STORAGE_BLOCK_SIZE = 0x90DE # macro
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = 0x90DD # macro
GL_MAX_SHININESS_NV = 0x8504 # macro
GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD = 0x9199 # macro
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB = 0x9199 # macro
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS = 0x919A # macro
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB = 0x919A # macro
GL_MAX_SPARSE_TEXTURE_SIZE_AMD = 0x9198 # macro
GL_MAX_SPARSE_TEXTURE_SIZE_ARB = 0x9198 # macro
GL_MAX_SPOT_EXPONENT_NV = 0x8505 # macro
GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV = 0x9349 # macro
GL_MAX_SUBROUTINES = 0x8DE7 # macro
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8 # macro
GL_MAX_TASK_ATOMIC_COUNTERS_NV = 0x8E6D # macro
GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV = 0x8E6C # macro
GL_MAX_TASK_IMAGE_UNIFORMS_NV = 0x8E6A # macro
GL_MAX_TASK_OUTPUT_COUNT_NV = 0x953A # macro
GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV = 0x8E6E # macro
GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV = 0x8E69 # macro
GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV = 0x9537 # macro
GL_MAX_TASK_UNIFORM_BLOCKS_NV = 0x8E68 # macro
GL_MAX_TASK_UNIFORM_COMPONENTS_NV = 0x8E6B # macro
GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV = 0x95A3 # macro
GL_MAX_TASK_WORK_GROUP_SIZE_NV = 0x953C # macro
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = 0x92D3 # macro
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 0x92CD # macro
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = 0x90CB # macro
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C # macro
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83 # macro
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = 0x90D8 # macro
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81 # macro
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85 # macro
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89 # macro
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F # macro
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 0x92D4 # macro
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 0x92CE # macro
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 0x90CC # macro
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D # macro
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86 # macro
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = 0x90D9 # macro
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82 # macro
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A # macro
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80 # macro
GL_MAX_TESS_GEN_LEVEL = 0x8E7E # macro
GL_MAX_TESS_PATCH_COMPONENTS = 0x8E84 # macro
GL_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B # macro
GL_MAX_TEXTURE_BUFFER_SIZE_ARB = 0x8C2B # macro
GL_MAX_TEXTURE_BUFFER_SIZE_EXT = 0x8C2B # macro
GL_MAX_TEXTURE_COORDS = 0x8871 # macro
GL_MAX_TEXTURE_COORDS_ARB = 0x8871 # macro
GL_MAX_TEXTURE_COORDS_NV = 0x8871 # macro
GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872 # macro
GL_MAX_TEXTURE_IMAGE_UNITS_ARB = 0x8872 # macro
GL_MAX_TEXTURE_IMAGE_UNITS_NV = 0x8872 # macro
GL_MAX_TEXTURE_LOD_BIAS = 0x84FD # macro
GL_MAX_TEXTURE_LOD_BIAS_EXT = 0x84FD # macro
GL_MAX_TEXTURE_MAX_ANISOTROPY = 0x84FF # macro
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF # macro
GL_MAX_TEXTURE_SIZE = 0x0D33 # macro
GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39 # macro
GL_MAX_TEXTURE_UNITS = 0x84E2 # macro
GL_MAX_TEXTURE_UNITS_ARB = 0x84E2 # macro
GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV = 0x95B6 # macro
GL_MAX_TRACK_MATRICES_NV = 0x862F # macro
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV = 0x862E # macro
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70 # macro
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A # macro
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = 0x8C8A # macro
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV = 0x8C8A # macro
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B # macro
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = 0x8C8B # macro
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = 0x8C8B # macro
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80 # macro
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = 0x8C80 # macro
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = 0x8C80 # macro
GL_MAX_UNIFORM_BLOCK_SIZE = 0x8A30 # macro
GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F # macro
GL_MAX_UNIFORM_LOCATIONS = 0x826E # macro
GL_MAX_VARYING_COMPONENTS = 0x8B4B # macro
GL_MAX_VARYING_COMPONENTS_EXT = 0x8B4B # macro
GL_MAX_VARYING_FLOATS = 0x8B4B # macro
GL_MAX_VARYING_FLOATS_ARB = 0x8B4B # macro
GL_MAX_VARYING_VECTORS = 0x8DFC # macro
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = 0x8520 # macro
GL_MAX_VERTEX_ATOMIC_COUNTERS = 0x92D2 # macro
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92CC # macro
GL_MAX_VERTEX_ATTRIBS = 0x8869 # macro
GL_MAX_VERTEX_ATTRIBS_ARB = 0x8869 # macro
GL_MAX_VERTEX_ATTRIB_BINDINGS = 0x82DA # macro
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9 # macro
GL_MAX_VERTEX_ATTRIB_STRIDE = 0x82E5 # macro
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = 0x8DE2 # macro
GL_MAX_VERTEX_HINT_PGI = 0x1A22D # macro
GL_MAX_VERTEX_IMAGE_UNIFORMS = 0x90CA # macro
GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122 # macro
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5 # macro
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7 # macro
GL_MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9 # macro
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8 # macro
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = 0x90D6 # macro
GL_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6 # macro
GL_MAX_VERTEX_STREAMS = 0x8E71 # macro
GL_MAX_VERTEX_STREAMS_ATI = 0x876B # macro
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C # macro
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = 0x8B4C # macro
GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B # macro
GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A # macro
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = 0x8B4A # macro
GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB # macro
GL_MAX_VERTEX_UNITS_ARB = 0x86A4 # macro
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = 0x8DDE # macro
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE # macro
GL_MAX_VIEWPORTS = 0x825B # macro
GL_MAX_VIEWPORT_DIMS = 0x0D3A # macro
GL_MAX_VIEWS_OVR = 0x9631 # macro
GL_MAX_WIDTH = 0x827E # macro
GL_MAX_WINDOW_RECTANGLES_EXT = 0x8F14 # macro
GL_MEDIUM_FLOAT = 0x8DF1 # macro
GL_MEDIUM_INT = 0x8DF4 # macro
GL_MEMORY_ATTACHABLE_ALIGNMENT_NV = 0x95A6 # macro
GL_MEMORY_ATTACHABLE_NV = 0x95A8 # macro
GL_MEMORY_ATTACHABLE_SIZE_NV = 0x95A7 # macro
GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV = 0x9543 # macro
GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV = 0x92DF # macro
GL_MESH_OUTPUT_TYPE_NV = 0x957B # macro
GL_MESH_PRIMITIVES_OUT_NV = 0x957A # macro
GL_MESH_SHADER_BIT_NV = 0x00000040 # macro
GL_MESH_SHADER_NV = 0x9559 # macro
GL_MESH_SUBROUTINE_NV = 0x957C # macro
GL_MESH_SUBROUTINE_UNIFORM_NV = 0x957E # macro
GL_MESH_VERTICES_OUT_NV = 0x9579 # macro
GL_MESH_WORK_GROUP_SIZE_NV = 0x953E # macro
GL_MIN = 0x8007 # macro
GL_MINMAX = 0x802E # macro
GL_MINMAX_EXT = 0x802E # macro
GL_MINMAX_FORMAT = 0x802F # macro
GL_MINMAX_FORMAT_EXT = 0x802F # macro
GL_MINMAX_SINK = 0x8030 # macro
GL_MINMAX_SINK_EXT = 0x8030 # macro
GL_MINOR_VERSION = 0x821C # macro
GL_MINUS_CLAMPED_NV = 0x92B3 # macro
GL_MINUS_NV = 0x929F # macro
GL_MIN_EXT = 0x8007 # macro
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B # macro
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5B # macro
GL_MIN_LOD_WARNING_AMD = 0x919C # macro
GL_MIN_MAP_BUFFER_ALIGNMENT = 0x90BC # macro
GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904 # macro
GL_MIN_PROGRAM_TEXEL_OFFSET_EXT = 0x8904 # macro
GL_MIN_PROGRAM_TEXEL_OFFSET_NV = 0x8904 # macro
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E # macro
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5E # macro
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5E # macro
GL_MIN_SAMPLE_SHADING_VALUE = 0x8C37 # macro
GL_MIN_SAMPLE_SHADING_VALUE_ARB = 0x8C37 # macro
GL_MIN_SPARSE_LEVEL_AMD = 0x919B # macro
GL_MIPMAP = 0x8293 # macro
GL_MIRRORED_REPEAT = 0x8370 # macro
GL_MIRRORED_REPEAT_ARB = 0x8370 # macro
GL_MIRRORED_REPEAT_IBM = 0x8370 # macro
GL_MIRROR_CLAMP_ATI = 0x8742 # macro
GL_MIRROR_CLAMP_EXT = 0x8742 # macro
GL_MIRROR_CLAMP_TO_BORDER_EXT = 0x8912 # macro
GL_MIRROR_CLAMP_TO_EDGE = 0x8743 # macro
GL_MIRROR_CLAMP_TO_EDGE_ATI = 0x8743 # macro
GL_MIRROR_CLAMP_TO_EDGE_EXT = 0x8743 # macro
GL_MITER_REVERT_NV = 0x90A7 # macro
GL_MITER_TRUNCATE_NV = 0x90A8 # macro
GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV = 0x932F # macro
GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV = 0x9330 # macro
GL_MODELVIEW = 0x1700 # macro
GL_MODELVIEW0_ARB = 0x1700 # macro
GL_MODELVIEW0_EXT = 0x1700 # macro
GL_MODELVIEW0_MATRIX_EXT = 0x0BA6 # macro
GL_MODELVIEW0_STACK_DEPTH_EXT = 0x0BA3 # macro
GL_MODELVIEW10_ARB = 0x872A # macro
GL_MODELVIEW11_ARB = 0x872B # macro
GL_MODELVIEW12_ARB = 0x872C # macro
GL_MODELVIEW13_ARB = 0x872D # macro
GL_MODELVIEW14_ARB = 0x872E # macro
GL_MODELVIEW15_ARB = 0x872F # macro
GL_MODELVIEW16_ARB = 0x8730 # macro
GL_MODELVIEW17_ARB = 0x8731 # macro
GL_MODELVIEW18_ARB = 0x8732 # macro
GL_MODELVIEW19_ARB = 0x8733 # macro
GL_MODELVIEW1_ARB = 0x850A # macro
GL_MODELVIEW1_EXT = 0x850A # macro
GL_MODELVIEW1_MATRIX_EXT = 0x8506 # macro
GL_MODELVIEW1_STACK_DEPTH_EXT = 0x8502 # macro
GL_MODELVIEW20_ARB = 0x8734 # macro
GL_MODELVIEW21_ARB = 0x8735 # macro
GL_MODELVIEW22_ARB = 0x8736 # macro
GL_MODELVIEW23_ARB = 0x8737 # macro
GL_MODELVIEW24_ARB = 0x8738 # macro
GL_MODELVIEW25_ARB = 0x8739 # macro
GL_MODELVIEW26_ARB = 0x873A # macro
GL_MODELVIEW27_ARB = 0x873B # macro
GL_MODELVIEW28_ARB = 0x873C # macro
GL_MODELVIEW29_ARB = 0x873D # macro
GL_MODELVIEW2_ARB = 0x8722 # macro
GL_MODELVIEW30_ARB = 0x873E # macro
GL_MODELVIEW31_ARB = 0x873F # macro
GL_MODELVIEW3_ARB = 0x8723 # macro
GL_MODELVIEW4_ARB = 0x8724 # macro
GL_MODELVIEW5_ARB = 0x8725 # macro
GL_MODELVIEW6_ARB = 0x8726 # macro
GL_MODELVIEW7_ARB = 0x8727 # macro
GL_MODELVIEW8_ARB = 0x8728 # macro
GL_MODELVIEW9_ARB = 0x8729 # macro
GL_MODELVIEW_MATRIX = 0x0BA6 # macro
GL_MODELVIEW_PROJECTION_NV = 0x8629 # macro
GL_MODELVIEW_STACK_DEPTH = 0x0BA3 # macro
GL_MODULATE = 0x2100 # macro
GL_MODULATE_ADD_ATI = 0x8744 # macro
GL_MODULATE_SIGNED_ADD_ATI = 0x8745 # macro
GL_MODULATE_SUBTRACT_ATI = 0x8746 # macro
GL_MOVE_TO_CONTINUES_NV = 0x90B6 # macro
GL_MOVE_TO_NV = 0x02 # macro
GL_MOVE_TO_RESETS_NV = 0x90B5 # macro
GL_MOV_ATI = 0x8961 # macro
GL_MULT = 0x0103 # macro
GL_MULTICAST_GPUS_NV = 0x92BA # macro
GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV = 0x9549 # macro
GL_MULTIPLY_KHR = 0x9294 # macro
GL_MULTIPLY_NV = 0x9294 # macro
GL_MULTISAMPLE = 0x809D # macro
GL_MULTISAMPLES_NV = 0x9371 # macro
GL_MULTISAMPLE_3DFX = 0x86B2 # macro
GL_MULTISAMPLE_ARB = 0x809D # macro
GL_MULTISAMPLE_BIT = 0x20000000 # macro
GL_MULTISAMPLE_BIT_3DFX = 0x20000000 # macro
GL_MULTISAMPLE_BIT_ARB = 0x20000000 # macro
GL_MULTISAMPLE_BIT_EXT = 0x20000000 # macro
GL_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E12 # macro
GL_MULTISAMPLE_EXT = 0x809D # macro
GL_MULTISAMPLE_FILTER_HINT_NV = 0x8534 # macro
GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB = 0x9382 # macro
GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB = 0x9381 # macro
GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT = 0x932B # macro
GL_MULTISAMPLE_SGIS = 0x809D # macro
GL_MUL_ATI = 0x8964 # macro
GL_MVP_MATRIX_EXT = 0x87E3 # macro
GL_N3F_V3F = 0x2A25 # macro
GL_NAMED_STRING_LENGTH_ARB = 0x8DE9 # macro
GL_NAMED_STRING_TYPE_ARB = 0x8DEA # macro
GL_NAME_LENGTH = 0x92F9 # macro
GL_NAME_STACK_DEPTH = 0x0D70 # macro
GL_NAND = 0x150E # macro
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = 0x1A203 # macro
GL_NATIVE_GRAPHICS_END_HINT_PGI = 0x1A204 # macro
GL_NATIVE_GRAPHICS_HANDLE_PGI = 0x1A202 # macro
GL_NEAREST = 0x2600 # macro
GL_NEAREST_CLIPMAP_LINEAR_SGIX = 0x844E # macro
GL_NEAREST_CLIPMAP_NEAREST_SGIX = 0x844D # macro
GL_NEAREST_MIPMAP_LINEAR = 0x2702 # macro
GL_NEAREST_MIPMAP_NEAREST = 0x2700 # macro
GL_NEGATE_BIT_ATI = 0x00000004 # macro
GL_NEGATIVE_ONE_EXT = 0x87DF # macro
GL_NEGATIVE_ONE_TO_ONE = 0x935E # macro
GL_NEGATIVE_W_EXT = 0x87DC # macro
GL_NEGATIVE_X_EXT = 0x87D9 # macro
GL_NEGATIVE_Y_EXT = 0x87DA # macro
GL_NEGATIVE_Z_EXT = 0x87DB # macro
GL_NEVER = 0x0200 # macro
GL_NEXT_BUFFER_NV = -2 # macro
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV = 0x9025 # macro
GL_NICEST = 0x1102 # macro
GL_NONE = 0 # macro
GL_NOOP = 0x1505 # macro
GL_NOP_COMMAND_NV = 0x0001 # macro
GL_NOR = 0x1508 # macro
GL_NORMALIZE = 0x0BA1 # macro
GL_NORMALIZED_RANGE_EXT = 0x87E0 # macro
GL_NORMAL_ARRAY = 0x8075 # macro
GL_NORMAL_ARRAY_ADDRESS_NV = 0x8F22 # macro
GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897 # macro
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB = 0x8897 # macro
GL_NORMAL_ARRAY_COUNT_EXT = 0x8080 # macro
GL_NORMAL_ARRAY_EXT = 0x8075 # macro
GL_NORMAL_ARRAY_LENGTH_NV = 0x8F2C # macro
GL_NORMAL_ARRAY_LIST_IBM = 103071 # macro
GL_NORMAL_ARRAY_LIST_STRIDE_IBM = 103081 # macro
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F6 # macro
GL_NORMAL_ARRAY_POINTER = 0x808F # macro
GL_NORMAL_ARRAY_POINTER_EXT = 0x808F # macro
GL_NORMAL_ARRAY_STRIDE = 0x807F # macro
GL_NORMAL_ARRAY_STRIDE_EXT = 0x807F # macro
GL_NORMAL_ARRAY_TYPE = 0x807E # macro
GL_NORMAL_ARRAY_TYPE_EXT = 0x807E # macro
GL_NORMAL_BIT_PGI = 0x08000000 # macro
GL_NORMAL_MAP = 0x8511 # macro
GL_NORMAL_MAP_ARB = 0x8511 # macro
GL_NORMAL_MAP_EXT = 0x8511 # macro
GL_NORMAL_MAP_NV = 0x8511 # macro
GL_NOTEQUAL = 0x0205 # macro
GL_NO_ERROR = 0 # macro
GL_NO_RESET_NOTIFICATION = 0x8261 # macro
GL_NO_RESET_NOTIFICATION_ARB = 0x8261 # macro
GL_NUM_ACTIVE_VARIABLES = 0x9304 # macro
GL_NUM_COMPATIBLE_SUBROUTINES = 0x8E4A # macro
GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2 # macro
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A2 # macro
GL_NUM_DEVICE_UUIDS_EXT = 0x9596 # macro
GL_NUM_EXTENSIONS = 0x821D # macro
GL_NUM_FILL_STREAMS_NV = 0x8E29 # macro
GL_NUM_FRAGMENT_CONSTANTS_ATI = 0x896F # macro
GL_NUM_FRAGMENT_REGISTERS_ATI = 0x896E # macro
GL_NUM_GENERAL_COMBINERS_NV = 0x854E # macro
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = 0x8973 # macro
GL_NUM_INSTRUCTIONS_PER_PASS_ATI = 0x8971 # macro
GL_NUM_INSTRUCTIONS_TOTAL_ATI = 0x8972 # macro
GL_NUM_LOOPBACK_COMPONENTS_ATI = 0x8974 # macro
GL_NUM_PASSES_ATI = 0x8970 # macro
GL_NUM_PROGRAM_BINARY_FORMATS = 0x87FE # macro
GL_NUM_SAMPLE_COUNTS = 0x9380 # macro
GL_NUM_SHADER_BINARY_FORMATS = 0x8DF9 # macro
GL_NUM_SHADING_LANGUAGE_VERSIONS = 0x82E9 # macro
GL_NUM_SPARSE_LEVELS_ARB = 0x91AA # macro
GL_NUM_SPIR_V_EXTENSIONS = 0x9554 # macro
GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD = 0x91B6 # macro
GL_NUM_TILING_TYPES_EXT = 0x9582 # macro
GL_NUM_VIDEO_CAPTURE_STREAMS_NV = 0x9024 # macro
GL_NUM_VIRTUAL_PAGE_SIZES_ARB = 0x91A8 # macro
GL_NUM_WINDOW_RECTANGLES_EXT = 0x8F15 # macro
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB = 0x8B89 # macro
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = 0x8B8A # macro
GL_OBJECT_ACTIVE_UNIFORMS_ARB = 0x8B86 # macro
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = 0x8B87 # macro
GL_OBJECT_ATTACHED_OBJECTS_ARB = 0x8B85 # macro
GL_OBJECT_BUFFER_SIZE_ATI = 0x8764 # macro
GL_OBJECT_BUFFER_USAGE_ATI = 0x8765 # macro
GL_OBJECT_COMPILE_STATUS_ARB = 0x8B81 # macro
GL_OBJECT_DELETE_STATUS_ARB = 0x8B80 # macro
GL_OBJECT_DISTANCE_TO_LINE_SGIS = 0x81F3 # macro
GL_OBJECT_DISTANCE_TO_POINT_SGIS = 0x81F1 # macro
GL_OBJECT_INFO_LOG_LENGTH_ARB = 0x8B84 # macro
GL_OBJECT_LINEAR = 0x2401 # macro
GL_OBJECT_LINEAR_NV = 0x2401 # macro
GL_OBJECT_LINE_SGIS = 0x81F7 # macro
GL_OBJECT_LINK_STATUS_ARB = 0x8B82 # macro
GL_OBJECT_PLANE = 0x2501 # macro
GL_OBJECT_POINT_SGIS = 0x81F5 # macro
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB = 0x8B88 # macro
GL_OBJECT_SUBTYPE_ARB = 0x8B4F # macro
GL_OBJECT_TYPE = 0x9112 # macro
GL_OBJECT_TYPE_ARB = 0x8B4E # macro
GL_OBJECT_VALIDATE_STATUS_ARB = 0x8B83 # macro
GL_OCCLUSION_QUERY_EVENT_MASK_AMD = 0x874F # macro
GL_OCCLUSION_TEST_HP = 0x8165 # macro
GL_OCCLUSION_TEST_RESULT_HP = 0x8166 # macro
GL_OFFSET = 0x92FC # macro
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = 0x8856 # macro
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8857 # macro
GL_OFFSET_HILO_TEXTURE_2D_NV = 0x8854 # macro
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV = 0x8855 # macro
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV = 0x8850 # macro
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = 0x8851 # macro
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8852 # macro
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = 0x8853 # macro
GL_OFFSET_TEXTURE_2D_BIAS_NV = 0x86E3 # macro
GL_OFFSET_TEXTURE_2D_MATRIX_NV = 0x86E1 # macro
GL_OFFSET_TEXTURE_2D_NV = 0x86E8 # macro
GL_OFFSET_TEXTURE_2D_SCALE_NV = 0x86E2 # macro
GL_OFFSET_TEXTURE_BIAS_NV = 0x86E3 # macro
GL_OFFSET_TEXTURE_MATRIX_NV = 0x86E1 # macro
GL_OFFSET_TEXTURE_RECTANGLE_NV = 0x864C # macro
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV = 0x864D # macro
GL_OFFSET_TEXTURE_SCALE_NV = 0x86E2 # macro
GL_ONE = 1 # macro
GL_ONE_EXT = 0x87DE # macro
GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004 # macro
GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004 # macro
GL_ONE_MINUS_CONSTANT_COLOR = 0x8002 # macro
GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002 # macro
GL_ONE_MINUS_DST_ALPHA = 0x0305 # macro
GL_ONE_MINUS_DST_COLOR = 0x0307 # macro
GL_ONE_MINUS_SRC1_ALPHA = 0x88FB # macro
GL_ONE_MINUS_SRC1_COLOR = 0x88FA # macro
GL_ONE_MINUS_SRC_ALPHA = 0x0303 # macro
GL_ONE_MINUS_SRC_COLOR = 0x0301 # macro
GL_OPERAND0_ALPHA = 0x8598 # macro
GL_OPERAND0_ALPHA_ARB = 0x8598 # macro
GL_OPERAND0_ALPHA_EXT = 0x8598 # macro
GL_OPERAND0_RGB = 0x8590 # macro
GL_OPERAND0_RGB_ARB = 0x8590 # macro
GL_OPERAND0_RGB_EXT = 0x8590 # macro
GL_OPERAND1_ALPHA = 0x8599 # macro
GL_OPERAND1_ALPHA_ARB = 0x8599 # macro
GL_OPERAND1_ALPHA_EXT = 0x8599 # macro
GL_OPERAND1_RGB = 0x8591 # macro
GL_OPERAND1_RGB_ARB = 0x8591 # macro
GL_OPERAND1_RGB_EXT = 0x8591 # macro
GL_OPERAND2_ALPHA = 0x859A # macro
GL_OPERAND2_ALPHA_ARB = 0x859A # macro
GL_OPERAND2_ALPHA_EXT = 0x859A # macro
GL_OPERAND2_RGB = 0x8592 # macro
GL_OPERAND2_RGB_ARB = 0x8592 # macro
GL_OPERAND2_RGB_EXT = 0x8592 # macro
GL_OPERAND3_ALPHA_NV = 0x859B # macro
GL_OPERAND3_RGB_NV = 0x8593 # macro
GL_OPTIMAL_TILING_EXT = 0x9584 # macro
GL_OP_ADD_EXT = 0x8787 # macro
GL_OP_CLAMP_EXT = 0x878E # macro
GL_OP_CROSS_PRODUCT_EXT = 0x8797 # macro
GL_OP_DOT3_EXT = 0x8784 # macro
GL_OP_DOT4_EXT = 0x8785 # macro
GL_OP_EXP_BASE_2_EXT = 0x8791 # macro
GL_OP_FLOOR_EXT = 0x878F # macro
GL_OP_FRAC_EXT = 0x8789 # macro
GL_OP_INDEX_EXT = 0x8782 # macro
GL_OP_LOG_BASE_2_EXT = 0x8792 # macro
GL_OP_MADD_EXT = 0x8788 # macro
GL_OP_MAX_EXT = 0x878A # macro
GL_OP_MIN_EXT = 0x878B # macro
GL_OP_MOV_EXT = 0x8799 # macro
GL_OP_MULTIPLY_MATRIX_EXT = 0x8798 # macro
GL_OP_MUL_EXT = 0x8786 # macro
GL_OP_NEGATE_EXT = 0x8783 # macro
GL_OP_POWER_EXT = 0x8793 # macro
GL_OP_RECIP_EXT = 0x8794 # macro
GL_OP_RECIP_SQRT_EXT = 0x8795 # macro
GL_OP_ROUND_EXT = 0x8790 # macro
GL_OP_SET_GE_EXT = 0x878C # macro
GL_OP_SET_LT_EXT = 0x878D # macro
GL_OP_SUB_EXT = 0x8796 # macro
GL_OR = 0x1507 # macro
GL_ORDER = 0x0A01 # macro
GL_OR_INVERTED = 0x150D # macro
GL_OR_REVERSE = 0x150B # macro
GL_OUTPUT_COLOR0_EXT = 0x879B # macro
GL_OUTPUT_COLOR1_EXT = 0x879C # macro
GL_OUTPUT_FOG_EXT = 0x87BD # macro
GL_OUTPUT_TEXTURE_COORD0_EXT = 0x879D # macro
GL_OUTPUT_TEXTURE_COORD10_EXT = 0x87A7 # macro
GL_OUTPUT_TEXTURE_COORD11_EXT = 0x87A8 # macro
GL_OUTPUT_TEXTURE_COORD12_EXT = 0x87A9 # macro
GL_OUTPUT_TEXTURE_COORD13_EXT = 0x87AA # macro
GL_OUTPUT_TEXTURE_COORD14_EXT = 0x87AB # macro
GL_OUTPUT_TEXTURE_COORD15_EXT = 0x87AC # macro
GL_OUTPUT_TEXTURE_COORD16_EXT = 0x87AD # macro
GL_OUTPUT_TEXTURE_COORD17_EXT = 0x87AE # macro
GL_OUTPUT_TEXTURE_COORD18_EXT = 0x87AF # macro
GL_OUTPUT_TEXTURE_COORD19_EXT = 0x87B0 # macro
GL_OUTPUT_TEXTURE_COORD1_EXT = 0x879E # macro
GL_OUTPUT_TEXTURE_COORD20_EXT = 0x87B1 # macro
GL_OUTPUT_TEXTURE_COORD21_EXT = 0x87B2 # macro
GL_OUTPUT_TEXTURE_COORD22_EXT = 0x87B3 # macro
GL_OUTPUT_TEXTURE_COORD23_EXT = 0x87B4 # macro
GL_OUTPUT_TEXTURE_COORD24_EXT = 0x87B5 # macro
GL_OUTPUT_TEXTURE_COORD25_EXT = 0x87B6 # macro
GL_OUTPUT_TEXTURE_COORD26_EXT = 0x87B7 # macro
GL_OUTPUT_TEXTURE_COORD27_EXT = 0x87B8 # macro
GL_OUTPUT_TEXTURE_COORD28_EXT = 0x87B9 # macro
GL_OUTPUT_TEXTURE_COORD29_EXT = 0x87BA # macro
GL_OUTPUT_TEXTURE_COORD2_EXT = 0x879F # macro
GL_OUTPUT_TEXTURE_COORD30_EXT = 0x87BB # macro
GL_OUTPUT_TEXTURE_COORD31_EXT = 0x87BC # macro
GL_OUTPUT_TEXTURE_COORD3_EXT = 0x87A0 # macro
GL_OUTPUT_TEXTURE_COORD4_EXT = 0x87A1 # macro
GL_OUTPUT_TEXTURE_COORD5_EXT = 0x87A2 # macro
GL_OUTPUT_TEXTURE_COORD6_EXT = 0x87A3 # macro
GL_OUTPUT_TEXTURE_COORD7_EXT = 0x87A4 # macro
GL_OUTPUT_TEXTURE_COORD8_EXT = 0x87A5 # macro
GL_OUTPUT_TEXTURE_COORD9_EXT = 0x87A6 # macro
GL_OUTPUT_VERTEX_EXT = 0x879A # macro
GL_OUT_OF_MEMORY = 0x0505 # macro
GL_OVERLAY_KHR = 0x9296 # macro
GL_OVERLAY_NV = 0x9296 # macro
GL_PACK_ALIGNMENT = 0x0D05 # macro
GL_PACK_CMYK_HINT_EXT = 0x800E # macro
GL_PACK_COMPRESSED_BLOCK_DEPTH = 0x912D # macro
GL_PACK_COMPRESSED_BLOCK_HEIGHT = 0x912C # macro
GL_PACK_COMPRESSED_BLOCK_SIZE = 0x912E # macro
GL_PACK_COMPRESSED_BLOCK_WIDTH = 0x912B # macro
GL_PACK_IMAGE_DEPTH_SGIS = 0x8131 # macro
GL_PACK_IMAGE_HEIGHT = 0x806C # macro
GL_PACK_IMAGE_HEIGHT_EXT = 0x806C # macro
GL_PACK_INVERT_MESA = 0x8758 # macro
GL_PACK_LSB_FIRST = 0x0D01 # macro
GL_PACK_RESAMPLE_OML = 0x8984 # macro
GL_PACK_RESAMPLE_SGIX = 0x842E # macro
GL_PACK_ROW_BYTES_APPLE = 0x8A15 # macro
GL_PACK_ROW_LENGTH = 0x0D02 # macro
GL_PACK_SKIP_IMAGES = 0x806B # macro
GL_PACK_SKIP_IMAGES_EXT = 0x806B # macro
GL_PACK_SKIP_PIXELS = 0x0D04 # macro
GL_PACK_SKIP_ROWS = 0x0D03 # macro
GL_PACK_SKIP_VOLUMES_SGIS = 0x8130 # macro
GL_PACK_SUBSAMPLE_RATE_SGIX = 0x85A0 # macro
GL_PACK_SWAP_BYTES = 0x0D00 # macro
GL_PALETTE4_R5_G6_B5_OES = 0x8B92 # macro
GL_PALETTE4_RGB5_A1_OES = 0x8B94 # macro
GL_PALETTE4_RGB8_OES = 0x8B90 # macro
GL_PALETTE4_RGBA4_OES = 0x8B93 # macro
GL_PALETTE4_RGBA8_OES = 0x8B91 # macro
GL_PALETTE8_R5_G6_B5_OES = 0x8B97 # macro
GL_PALETTE8_RGB5_A1_OES = 0x8B99 # macro
GL_PALETTE8_RGB8_OES = 0x8B95 # macro
GL_PALETTE8_RGBA4_OES = 0x8B98 # macro
GL_PALETTE8_RGBA8_OES = 0x8B96 # macro
GL_PARALLEL_ARRAYS_INTEL = 0x83F4 # macro
GL_PARAMETER_BUFFER = 0x80EE # macro
GL_PARAMETER_BUFFER_ARB = 0x80EE # macro
GL_PARAMETER_BUFFER_BINDING = 0x80EF # macro
GL_PARAMETER_BUFFER_BINDING_ARB = 0x80EF # macro
GL_PARTIAL_SUCCESS_NV = 0x902E # macro
GL_PASS_THROUGH_NV = 0x86E6 # macro
GL_PASS_THROUGH_TOKEN = 0x0700 # macro
GL_PATCHES = 0x000E # macro
GL_PATCH_DEFAULT_INNER_LEVEL = 0x8E73 # macro
GL_PATCH_DEFAULT_OUTER_LEVEL = 0x8E74 # macro
GL_PATCH_VERTICES = 0x8E72 # macro
GL_PATH_CLIENT_LENGTH_NV = 0x907F # macro
GL_PATH_COMMAND_COUNT_NV = 0x909D # macro
GL_PATH_COMPUTED_LENGTH_NV = 0x90A0 # macro
GL_PATH_COORD_COUNT_NV = 0x909E # macro
GL_PATH_COVER_DEPTH_FUNC_NV = 0x90BF # macro
GL_PATH_DASH_ARRAY_COUNT_NV = 0x909F # macro
GL_PATH_DASH_CAPS_NV = 0x907B # macro
GL_PATH_DASH_OFFSET_NV = 0x907E # macro
GL_PATH_DASH_OFFSET_RESET_NV = 0x90B4 # macro
GL_PATH_END_CAPS_NV = 0x9076 # macro
GL_PATH_ERROR_POSITION_NV = 0x90AB # macro
GL_PATH_FILL_BOUNDING_BOX_NV = 0x90A1 # macro
GL_PATH_FILL_COVER_MODE_NV = 0x9082 # macro
GL_PATH_FILL_MASK_NV = 0x9081 # macro
GL_PATH_FILL_MODE_NV = 0x9080 # macro
GL_PATH_FOG_GEN_MODE_NV = 0x90AC # macro
GL_PATH_FORMAT_PS_NV = 0x9071 # macro
GL_PATH_FORMAT_SVG_NV = 0x9070 # macro
GL_PATH_GEN_COEFF_NV = 0x90B1 # macro
GL_PATH_GEN_COLOR_FORMAT_NV = 0x90B2 # macro
GL_PATH_GEN_COMPONENTS_NV = 0x90B3 # macro
GL_PATH_GEN_MODE_NV = 0x90B0 # macro
GL_PATH_INITIAL_DASH_CAP_NV = 0x907C # macro
GL_PATH_INITIAL_END_CAP_NV = 0x9077 # macro
GL_PATH_JOIN_STYLE_NV = 0x9079 # macro
GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV = 0x0D36 # macro
GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV = 0x0D38 # macro
GL_PATH_MITER_LIMIT_NV = 0x907A # macro
GL_PATH_MODELVIEW_MATRIX_NV = 0x0BA6 # macro
GL_PATH_MODELVIEW_NV = 0x1700 # macro
GL_PATH_MODELVIEW_STACK_DEPTH_NV = 0x0BA3 # macro
GL_PATH_OBJECT_BOUNDING_BOX_NV = 0x908A # macro
GL_PATH_PROJECTION_MATRIX_NV = 0x0BA7 # macro
GL_PATH_PROJECTION_NV = 0x1701 # macro
GL_PATH_PROJECTION_STACK_DEPTH_NV = 0x0BA4 # macro
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV = 0x90BD # macro
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV = 0x90BE # macro
GL_PATH_STENCIL_FUNC_NV = 0x90B7 # macro
GL_PATH_STENCIL_REF_NV = 0x90B8 # macro
GL_PATH_STENCIL_VALUE_MASK_NV = 0x90B9 # macro
GL_PATH_STROKE_BOUNDING_BOX_NV = 0x90A2 # macro
GL_PATH_STROKE_COVER_MODE_NV = 0x9083 # macro
GL_PATH_STROKE_MASK_NV = 0x9084 # macro
GL_PATH_STROKE_WIDTH_NV = 0x9075 # macro
GL_PATH_TERMINAL_DASH_CAP_NV = 0x907D # macro
GL_PATH_TERMINAL_END_CAP_NV = 0x9078 # macro
GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV = 0x84E3 # macro
GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV = 0x84E4 # macro
GL_PERCENTAGE_AMD = 0x8BC3 # macro
GL_PERFMON_RESULT_AMD = 0x8BC6 # macro
GL_PERFMON_RESULT_AVAILABLE_AMD = 0x8BC4 # macro
GL_PERFMON_RESULT_SIZE_AMD = 0x8BC5 # macro
GL_PERFORMANCE_MONITOR_AMD = 0x9152 # macro
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL = 0x94FC # macro
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL = 0x94FB # macro
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL = 0x94FA # macro
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL = 0x94F8 # macro
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL = 0x94F9 # macro
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL = 0x94FF # macro
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL = 0x94F1 # macro
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL = 0x94F2 # macro
GL_PERFQUERY_COUNTER_EVENT_INTEL = 0x94F0 # macro
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL = 0x94FE # macro
GL_PERFQUERY_COUNTER_RAW_INTEL = 0x94F4 # macro
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL = 0x94F3 # macro
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL = 0x94F5 # macro
GL_PERFQUERY_DONOT_FLUSH_INTEL = 0x83F9 # macro
GL_PERFQUERY_FLUSH_INTEL = 0x83FA # macro
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL = 0x00000001 # macro
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL = 0x9500 # macro
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL = 0x94FD # macro
GL_PERFQUERY_SINGLE_CONTEXT_INTEL = 0x00000000 # macro
GL_PERFQUERY_WAIT_INTEL = 0x83FB # macro
GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50 # macro
GL_PERTURB_EXT = 0x85AE # macro
GL_PER_GPU_STORAGE_BIT_NV = 0x0800 # macro
GL_PER_GPU_STORAGE_NV = 0x9548 # macro
GL_PER_STAGE_CONSTANTS_NV = 0x8535 # macro
GL_PHONG_HINT_WIN = 0x80EB # macro
GL_PHONG_WIN = 0x80EA # macro
GL_PINLIGHT_NV = 0x92A8 # macro
GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD = 0x91AE # macro
GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD = 0x91AF # macro
GL_PIXEL_BUFFER_BARRIER_BIT = 0x00000080 # macro
GL_PIXEL_BUFFER_BARRIER_BIT_EXT = 0x00000080 # macro
GL_PIXEL_COUNTER_BITS_NV = 0x8864 # macro
GL_PIXEL_COUNT_AVAILABLE_NV = 0x8867 # macro
GL_PIXEL_COUNT_NV = 0x8866 # macro
GL_PIXEL_CUBIC_WEIGHT_EXT = 0x8333 # macro
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = 0x8355 # macro
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = 0x8354 # macro
GL_PIXEL_GROUP_COLOR_SGIS = 0x8356 # macro
GL_PIXEL_MAG_FILTER_EXT = 0x8331 # macro
GL_PIXEL_MAP_A_TO_A = 0x0C79 # macro
GL_PIXEL_MAP_A_TO_A_SIZE = 0x0CB9 # macro
GL_PIXEL_MAP_B_TO_B = 0x0C78 # macro
GL_PIXEL_MAP_B_TO_B_SIZE = 0x0CB8 # macro
GL_PIXEL_MAP_G_TO_G = 0x0C77 # macro
GL_PIXEL_MAP_G_TO_G_SIZE = 0x0CB7 # macro
GL_PIXEL_MAP_I_TO_A = 0x0C75 # macro
GL_PIXEL_MAP_I_TO_A_SIZE = 0x0CB5 # macro
GL_PIXEL_MAP_I_TO_B = 0x0C74 # macro
GL_PIXEL_MAP_I_TO_B_SIZE = 0x0CB4 # macro
GL_PIXEL_MAP_I_TO_G = 0x0C73 # macro
GL_PIXEL_MAP_I_TO_G_SIZE = 0x0CB3 # macro
GL_PIXEL_MAP_I_TO_I = 0x0C70 # macro
GL_PIXEL_MAP_I_TO_I_SIZE = 0x0CB0 # macro
GL_PIXEL_MAP_I_TO_R = 0x0C72 # macro
GL_PIXEL_MAP_I_TO_R_SIZE = 0x0CB2 # macro
GL_PIXEL_MAP_R_TO_R = 0x0C76 # macro
GL_PIXEL_MAP_R_TO_R_SIZE = 0x0CB6 # macro
GL_PIXEL_MAP_S_TO_S = 0x0C71 # macro
GL_PIXEL_MAP_S_TO_S_SIZE = 0x0CB1 # macro
GL_PIXEL_MIN_FILTER_EXT = 0x8332 # macro
GL_PIXEL_MODE_BIT = 0x00000020 # macro
GL_PIXEL_PACK_BUFFER = 0x88EB # macro
GL_PIXEL_PACK_BUFFER_ARB = 0x88EB # macro
GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED # macro
GL_PIXEL_PACK_BUFFER_BINDING_ARB = 0x88ED # macro
GL_PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED # macro
GL_PIXEL_PACK_BUFFER_EXT = 0x88EB # macro
GL_PIXEL_SUBSAMPLE_2424_SGIX = 0x85A3 # macro
GL_PIXEL_SUBSAMPLE_4242_SGIX = 0x85A4 # macro
GL_PIXEL_SUBSAMPLE_4444_SGIX = 0x85A2 # macro
GL_PIXEL_TEXTURE_SGIS = 0x8353 # macro
GL_PIXEL_TEX_GEN_MODE_SGIX = 0x832B # macro
GL_PIXEL_TEX_GEN_SGIX = 0x8139 # macro
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = 0x813E # macro
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = 0x813F # macro
GL_PIXEL_TILE_CACHE_SIZE_SGIX = 0x8145 # macro
GL_PIXEL_TILE_GRID_DEPTH_SGIX = 0x8144 # macro
GL_PIXEL_TILE_GRID_HEIGHT_SGIX = 0x8143 # macro
GL_PIXEL_TILE_GRID_WIDTH_SGIX = 0x8142 # macro
GL_PIXEL_TILE_HEIGHT_SGIX = 0x8141 # macro
GL_PIXEL_TILE_WIDTH_SGIX = 0x8140 # macro
GL_PIXEL_TRANSFORM_2D_EXT = 0x8330 # macro
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT = 0x8338 # macro
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8336 # macro
GL_PIXEL_UNPACK_BUFFER = 0x88EC # macro
GL_PIXEL_UNPACK_BUFFER_ARB = 0x88EC # macro
GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF # macro
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = 0x88EF # macro
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF # macro
GL_PIXEL_UNPACK_BUFFER_EXT = 0x88EC # macro
GL_PLUS_CLAMPED_ALPHA_NV = 0x92B2 # macro
GL_PLUS_CLAMPED_NV = 0x92B1 # macro
GL_PLUS_DARKER_NV = 0x9292 # macro
GL_PLUS_NV = 0x9291 # macro
GL_PN_TRIANGLES_ATI = 0x87F0 # macro
GL_PN_TRIANGLES_NORMAL_MODE_ATI = 0x87F3 # macro
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = 0x87F7 # macro
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = 0x87F8 # macro
GL_PN_TRIANGLES_POINT_MODE_ATI = 0x87F2 # macro
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = 0x87F6 # macro
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = 0x87F5 # macro
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F4 # macro
GL_POINT = 0x1B00 # macro
GL_POINTS = 0x0000 # macro
GL_POINT_BIT = 0x00000002 # macro
GL_POINT_DISTANCE_ATTENUATION = 0x8129 # macro
GL_POINT_DISTANCE_ATTENUATION_ARB = 0x8129 # macro
GL_POINT_FADE_THRESHOLD_SIZE = 0x8128 # macro
GL_POINT_FADE_THRESHOLD_SIZE_ARB = 0x8128 # macro
GL_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128 # macro
GL_POINT_FADE_THRESHOLD_SIZE_SGIS = 0x8128 # macro
GL_POINT_SIZE = 0x0B11 # macro
GL_POINT_SIZE_GRANULARITY = 0x0B13 # macro
GL_POINT_SIZE_MAX = 0x8127 # macro
GL_POINT_SIZE_MAX_ARB = 0x8127 # macro
GL_POINT_SIZE_MAX_EXT = 0x8127 # macro
GL_POINT_SIZE_MAX_SGIS = 0x8127 # macro
GL_POINT_SIZE_MIN = 0x8126 # macro
GL_POINT_SIZE_MIN_ARB = 0x8126 # macro
GL_POINT_SIZE_MIN_EXT = 0x8126 # macro
GL_POINT_SIZE_MIN_SGIS = 0x8126 # macro
GL_POINT_SIZE_RANGE = 0x0B12 # macro
GL_POINT_SMOOTH = 0x0B10 # macro
GL_POINT_SMOOTH_HINT = 0x0C51 # macro
GL_POINT_SPRITE = 0x8861 # macro
GL_POINT_SPRITE_ARB = 0x8861 # macro
GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0 # macro
GL_POINT_SPRITE_NV = 0x8861 # macro
GL_POINT_SPRITE_R_MODE_NV = 0x8863 # macro
GL_POINT_TOKEN = 0x0701 # macro
GL_POLYGON = 0x0009 # macro
GL_POLYGON_BIT = 0x00000008 # macro
GL_POLYGON_MODE = 0x0B40 # macro
GL_POLYGON_OFFSET_BIAS_EXT = 0x8039 # macro
GL_POLYGON_OFFSET_CLAMP = 0x8E1B # macro
GL_POLYGON_OFFSET_CLAMP_EXT = 0x8E1B # macro
GL_POLYGON_OFFSET_COMMAND_NV = 0x000E # macro
GL_POLYGON_OFFSET_EXT = 0x8037 # macro
GL_POLYGON_OFFSET_FACTOR = 0x8038 # macro
GL_POLYGON_OFFSET_FACTOR_EXT = 0x8038 # macro
GL_POLYGON_OFFSET_FILL = 0x8037 # macro
GL_POLYGON_OFFSET_LINE = 0x2A02 # macro
GL_POLYGON_OFFSET_POINT = 0x2A01 # macro
GL_POLYGON_OFFSET_UNITS = 0x2A00 # macro
GL_POLYGON_SMOOTH = 0x0B41 # macro
GL_POLYGON_SMOOTH_HINT = 0x0C53 # macro
GL_POLYGON_STIPPLE = 0x0B42 # macro
GL_POLYGON_STIPPLE_BIT = 0x00000010 # macro
GL_POLYGON_TOKEN = 0x0703 # macro
GL_POSITION = 0x1203 # macro
GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB # macro
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = 0x80BB # macro
GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7 # macro
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = 0x80B7 # macro
GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA # macro
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = 0x80BA # macro
GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6 # macro
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = 0x80B6 # macro
GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2 # macro
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D2 # macro
GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9 # macro
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = 0x80B9 # macro
GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5 # macro
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = 0x80B5 # macro
GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8 # macro
GL_POST_COLOR_MATRIX_RED_BIAS_SGI = 0x80B8 # macro
GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4 # macro
GL_POST_COLOR_MATRIX_RED_SCALE_SGI = 0x80B4 # macro
GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023 # macro
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = 0x8023 # macro
GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F # macro
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = 0x801F # macro
GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022 # macro
GL_POST_CONVOLUTION_BLUE_BIAS_EXT = 0x8022 # macro
GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E # macro
GL_POST_CONVOLUTION_BLUE_SCALE_EXT = 0x801E # macro
GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1 # macro
GL_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D1 # macro
GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021 # macro
GL_POST_CONVOLUTION_GREEN_BIAS_EXT = 0x8021 # macro
GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D # macro
GL_POST_CONVOLUTION_GREEN_SCALE_EXT = 0x801D # macro
GL_POST_CONVOLUTION_RED_BIAS = 0x8020 # macro
GL_POST_CONVOLUTION_RED_BIAS_EXT = 0x8020 # macro
GL_POST_CONVOLUTION_RED_SCALE = 0x801C # macro
GL_POST_CONVOLUTION_RED_SCALE_EXT = 0x801C # macro
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8162 # macro
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = 0x817B # macro
GL_POST_TEXTURE_FILTER_BIAS_SGIX = 0x8179 # macro
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = 0x817C # macro
GL_POST_TEXTURE_FILTER_SCALE_SGIX = 0x817A # macro
GL_PREFER_DOUBLEBUFFER_HINT_PGI = 0x1A1F8 # macro
GL_PRESENT_DURATION_NV = 0x8E2B # macro
GL_PRESENT_TIME_NV = 0x8E2A # macro
GL_PRESERVE_ATI = 0x8762 # macro
GL_PREVIOUS = 0x8578 # macro
GL_PREVIOUS_ARB = 0x8578 # macro
GL_PREVIOUS_EXT = 0x8578 # macro
GL_PREVIOUS_TEXTURE_INPUT_NV = 0x86E4 # macro
GL_PRIMARY_COLOR = 0x8577 # macro
GL_PRIMARY_COLOR_ARB = 0x8577 # macro
GL_PRIMARY_COLOR_EXT = 0x8577 # macro
GL_PRIMARY_COLOR_NV = 0x852C # macro
GL_PRIMITIVES_GENERATED = 0x8C87 # macro
GL_PRIMITIVES_GENERATED_EXT = 0x8C87 # macro
GL_PRIMITIVES_GENERATED_NV = 0x8C87 # macro
GL_PRIMITIVES_SUBMITTED = 0x82EF # macro
GL_PRIMITIVES_SUBMITTED_ARB = 0x82EF # macro
GL_PRIMITIVE_BOUNDING_BOX_ARB = 0x92BE # macro
GL_PRIMITIVE_ID_NV = 0x8C7C # macro
GL_PRIMITIVE_RESTART = 0x8F9D # macro
GL_PRIMITIVE_RESTART_FIXED_INDEX = 0x8D69 # macro
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = 0x8221 # macro
GL_PRIMITIVE_RESTART_INDEX = 0x8F9E # macro
GL_PRIMITIVE_RESTART_INDEX_NV = 0x8559 # macro
GL_PRIMITIVE_RESTART_NV = 0x8558 # macro
GL_PROGRAM = 0x82E2 # macro
GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB = 0x9341 # macro
GL_PROGRAMMABLE_SAMPLE_LOCATION_NV = 0x9341 # macro
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB = 0x9340 # macro
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV = 0x9340 # macro
GL_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B0 # macro
GL_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x8805 # macro
GL_PROGRAM_ATTRIBS_ARB = 0x88AC # macro
GL_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8906 # macro
GL_PROGRAM_BINARY_FORMATS = 0x87FF # macro
GL_PROGRAM_BINARY_FORMAT_MESA = 0x875F # macro
GL_PROGRAM_BINARY_LENGTH = 0x8741 # macro
GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257 # macro
GL_PROGRAM_BINDING_ARB = 0x8677 # macro
GL_PROGRAM_ERROR_POSITION_ARB = 0x864B # macro
GL_PROGRAM_ERROR_POSITION_NV = 0x864B # macro
GL_PROGRAM_ERROR_STRING_ARB = 0x8874 # macro
GL_PROGRAM_ERROR_STRING_NV = 0x8874 # macro
GL_PROGRAM_FORMAT_ARB = 0x8876 # macro
GL_PROGRAM_FORMAT_ASCII_ARB = 0x8875 # macro
GL_PROGRAM_INPUT = 0x92E3 # macro
GL_PROGRAM_INSTRUCTIONS_ARB = 0x88A0 # macro
GL_PROGRAM_LENGTH_ARB = 0x8627 # macro
GL_PROGRAM_LENGTH_NV = 0x8627 # macro
GL_PROGRAM_MATRIX_EXT = 0x8E2D # macro
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = 0x8E2F # macro
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B2 # macro
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x8808 # macro
GL_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AE # macro
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A2 # macro
GL_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AA # macro
GL_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A6 # macro
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x880A # macro
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x8809 # macro
GL_PROGRAM_OBJECT_ARB = 0x8B40 # macro
GL_PROGRAM_OBJECT_EXT = 0x8B40 # macro
GL_PROGRAM_OUTPUT = 0x92E4 # macro
GL_PROGRAM_PARAMETERS_ARB = 0x88A8 # macro
GL_PROGRAM_PARAMETER_NV = 0x8644 # macro
GL_PROGRAM_PIPELINE = 0x82E4 # macro
GL_PROGRAM_PIPELINE_BINDING = 0x825A # macro
GL_PROGRAM_PIPELINE_OBJECT_EXT = 0x8A4F # macro
GL_PROGRAM_POINT_SIZE = 0x8642 # macro
GL_PROGRAM_POINT_SIZE_ARB = 0x8642 # macro
GL_PROGRAM_POINT_SIZE_EXT = 0x8642 # macro
GL_PROGRAM_RESIDENT_NV = 0x8647 # macro
GL_PROGRAM_RESULT_COMPONENTS_NV = 0x8907 # macro
GL_PROGRAM_SEPARABLE = 0x8258 # macro
GL_PROGRAM_STRING_ARB = 0x8628 # macro
GL_PROGRAM_STRING_NV = 0x8628 # macro
GL_PROGRAM_TARGET_NV = 0x8646 # macro
GL_PROGRAM_TEMPORARIES_ARB = 0x88A4 # macro
GL_PROGRAM_TEX_INDIRECTIONS_ARB = 0x8807 # macro
GL_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x8806 # macro
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB = 0x88B6 # macro
GL_PROJECTION = 0x1701 # macro
GL_PROJECTION_MATRIX = 0x0BA7 # macro
GL_PROJECTION_STACK_DEPTH = 0x0BA4 # macro
GL_PROTECTED_MEMORY_OBJECT_EXT = 0x959B # macro
GL_PROVOKING_VERTEX = 0x8E4F # macro
GL_PROVOKING_VERTEX_EXT = 0x8E4F # macro
GL_PROXY_COLOR_TABLE = 0x80D3 # macro
GL_PROXY_COLOR_TABLE_SGI = 0x80D3 # macro
GL_PROXY_HISTOGRAM = 0x8025 # macro
GL_PROXY_HISTOGRAM_EXT = 0x8025 # macro
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5 # macro
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D5 # macro
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4 # macro
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D4 # macro
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8163 # macro
GL_PROXY_TEXTURE_1D = 0x8063 # macro
GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19 # macro
GL_PROXY_TEXTURE_1D_ARRAY_EXT = 0x8C19 # macro
GL_PROXY_TEXTURE_1D_EXT = 0x8063 # macro
GL_PROXY_TEXTURE_1D_STACK_MESAX = 0x875B # macro
GL_PROXY_TEXTURE_2D = 0x8064 # macro
GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B # macro
GL_PROXY_TEXTURE_2D_ARRAY_EXT = 0x8C1B # macro
GL_PROXY_TEXTURE_2D_EXT = 0x8064 # macro
GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101 # macro
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103 # macro
GL_PROXY_TEXTURE_2D_STACK_MESAX = 0x875C # macro
GL_PROXY_TEXTURE_3D = 0x8070 # macro
GL_PROXY_TEXTURE_3D_EXT = 0x8070 # macro
GL_PROXY_TEXTURE_4D_SGIS = 0x8135 # macro
GL_PROXY_TEXTURE_COLOR_TABLE_SGI = 0x80BD # macro
GL_PROXY_TEXTURE_CUBE_MAP = 0x851B # macro
GL_PROXY_TEXTURE_CUBE_MAP_ARB = 0x851B # macro
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B # macro
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x900B # macro
GL_PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B # macro
GL_PROXY_TEXTURE_RECTANGLE = 0x84F7 # macro
GL_PROXY_TEXTURE_RECTANGLE_ARB = 0x84F7 # macro
GL_PROXY_TEXTURE_RECTANGLE_NV = 0x84F7 # macro
GL_PURGEABLE_APPLE = 0x8A1D # macro
GL_PURGED_CONTEXT_RESET_NV = 0x92BB # macro
GL_Q = 0x2003 # macro
GL_QUADRATIC_ATTENUATION = 0x1209 # macro
GL_QUADRATIC_CURVE_TO_NV = 0x0A # macro
GL_QUADS = 0x0007 # macro
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C # macro
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = 0x8E4C # macro
GL_QUAD_ALPHA4_SGIS = 0x811E # macro
GL_QUAD_ALPHA8_SGIS = 0x811F # macro
GL_QUAD_INTENSITY4_SGIS = 0x8122 # macro
GL_QUAD_INTENSITY8_SGIS = 0x8123 # macro
GL_QUAD_LUMINANCE4_SGIS = 0x8120 # macro
GL_QUAD_LUMINANCE8_SGIS = 0x8121 # macro
GL_QUAD_MESH_SUN = 0x8614 # macro
GL_QUAD_STRIP = 0x0008 # macro
GL_QUAD_TEXTURE_SELECT_SGIS = 0x8125 # macro
GL_QUARTER_BIT_ATI = 0x00000010 # macro
GL_QUERY = 0x82E3 # macro
GL_QUERY_ALL_EVENT_BITS_AMD = 0xFFFFFFFF # macro
GL_QUERY_BUFFER = 0x9192 # macro
GL_QUERY_BUFFER_AMD = 0x9192 # macro
GL_QUERY_BUFFER_BARRIER_BIT = 0x00008000 # macro
GL_QUERY_BUFFER_BINDING = 0x9193 # macro
GL_QUERY_BUFFER_BINDING_AMD = 0x9193 # macro
GL_QUERY_BY_REGION_NO_WAIT = 0x8E16 # macro
GL_QUERY_BY_REGION_NO_WAIT_INVERTED = 0x8E1A # macro
GL_QUERY_BY_REGION_NO_WAIT_NV = 0x8E16 # macro
GL_QUERY_BY_REGION_WAIT = 0x8E15 # macro
GL_QUERY_BY_REGION_WAIT_INVERTED = 0x8E19 # macro
GL_QUERY_BY_REGION_WAIT_NV = 0x8E15 # macro
GL_QUERY_COUNTER_BITS = 0x8864 # macro
GL_QUERY_COUNTER_BITS_ARB = 0x8864 # macro
GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD = 0x00000008 # macro
GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD = 0x00000002 # macro
GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD = 0x00000001 # macro
GL_QUERY_NO_WAIT = 0x8E14 # macro
GL_QUERY_NO_WAIT_INVERTED = 0x8E18 # macro
GL_QUERY_NO_WAIT_NV = 0x8E14 # macro
GL_QUERY_OBJECT_AMD = 0x9153 # macro
GL_QUERY_OBJECT_EXT = 0x9153 # macro
GL_QUERY_RESOURCE_BUFFEROBJECT_NV = 0x9547 # macro
GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV = 0x9542 # macro
GL_QUERY_RESOURCE_RENDERBUFFER_NV = 0x9546 # macro
GL_QUERY_RESOURCE_SYS_RESERVED_NV = 0x9544 # macro
GL_QUERY_RESOURCE_TEXTURE_NV = 0x9545 # macro
GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV = 0x9540 # macro
GL_QUERY_RESULT = 0x8866 # macro
GL_QUERY_RESULT_ARB = 0x8866 # macro
GL_QUERY_RESULT_AVAILABLE = 0x8867 # macro
GL_QUERY_RESULT_AVAILABLE_ARB = 0x8867 # macro
GL_QUERY_RESULT_NO_WAIT = 0x9194 # macro
GL_QUERY_RESULT_NO_WAIT_AMD = 0x9194 # macro
GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD = 0x00000004 # macro
GL_QUERY_TARGET = 0x82EA # macro
GL_QUERY_WAIT = 0x8E13 # macro
GL_QUERY_WAIT_INVERTED = 0x8E17 # macro
GL_QUERY_WAIT_NV = 0x8E13 # macro
GL_R = 0x2002 # macro
GL_R11F_G11F_B10F = 0x8C3A # macro
GL_R11F_G11F_B10F_EXT = 0x8C3A # macro
GL_R16 = 0x822A # macro
GL_R16F = 0x822D # macro
GL_R16F_EXT = 0x822D # macro
GL_R16I = 0x8233 # macro
GL_R16UI = 0x8234 # macro
GL_R16_SNORM = 0x8F98 # macro
GL_R1UI_C3F_V3F_SUN = 0x85C6 # macro
GL_R1UI_C4F_N3F_V3F_SUN = 0x85C8 # macro
GL_R1UI_C4UB_V3F_SUN = 0x85C5 # macro
GL_R1UI_N3F_V3F_SUN = 0x85C7 # macro
GL_R1UI_T2F_C4F_N3F_V3F_SUN = 0x85CB # macro
GL_R1UI_T2F_N3F_V3F_SUN = 0x85CA # macro
GL_R1UI_T2F_V3F_SUN = 0x85C9 # macro
GL_R1UI_V3F_SUN = 0x85C4 # macro
GL_R32F = 0x822E # macro
GL_R32F_EXT = 0x822E # macro
GL_R32I = 0x8235 # macro
GL_R32UI = 0x8236 # macro
GL_R3_G3_B2 = 0x2A10 # macro
GL_R8 = 0x8229 # macro
GL_R8I = 0x8231 # macro
GL_R8UI = 0x8232 # macro
GL_R8_EXT = 0x8229 # macro
GL_R8_SNORM = 0x8F94 # macro
GL_RASTERIZER_DISCARD = 0x8C89 # macro
GL_RASTERIZER_DISCARD_EXT = 0x8C89 # macro
GL_RASTERIZER_DISCARD_NV = 0x8C89 # macro
GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT = 0x932A # macro
GL_RASTER_MULTISAMPLE_EXT = 0x9327 # macro
GL_RASTER_POSITION_UNCLIPPED_IBM = 0x19262 # macro
GL_RASTER_SAMPLES_EXT = 0x9328 # macro
GL_READ_BUFFER = 0x0C02 # macro
GL_READ_FRAMEBUFFER = 0x8CA8 # macro
GL_READ_FRAMEBUFFER_BINDING = 0x8CAA # macro
GL_READ_FRAMEBUFFER_BINDING_EXT = 0x8CAA # macro
GL_READ_FRAMEBUFFER_EXT = 0x8CA8 # macro
GL_READ_ONLY = 0x88B8 # macro
GL_READ_ONLY_ARB = 0x88B8 # macro
GL_READ_PIXELS = 0x828C # macro
GL_READ_PIXELS_FORMAT = 0x828D # macro
GL_READ_PIXELS_TYPE = 0x828E # macro
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV = 0x887B # macro
GL_READ_PIXEL_DATA_RANGE_NV = 0x8879 # macro
GL_READ_PIXEL_DATA_RANGE_POINTER_NV = 0x887D # macro
GL_READ_WRITE = 0x88BA # macro
GL_READ_WRITE_ARB = 0x88BA # macro
GL_RECLAIM_MEMORY_HINT_PGI = 0x1A1FE # macro
GL_RECT_NV = 0xF6 # macro
GL_RED = 0x1903 # macro
GL_REDUCE = 0x8016 # macro
GL_REDUCE_EXT = 0x8016 # macro
GL_RED_BIAS = 0x0D15 # macro
GL_RED_BITS = 0x0D52 # macro
GL_RED_BIT_ATI = 0x00000001 # macro
GL_RED_INTEGER = 0x8D94 # macro
GL_RED_INTEGER_EXT = 0x8D94 # macro
GL_RED_MAX_CLAMP_INGR = 0x8564 # macro
GL_RED_MIN_CLAMP_INGR = 0x8560 # macro
GL_RED_NV = 0x1903 # macro
GL_RED_SCALE = 0x0D14 # macro
GL_RED_SNORM = 0x8F90 # macro
GL_REFERENCED_BY_COMPUTE_SHADER = 0x930B # macro
GL_REFERENCED_BY_FRAGMENT_SHADER = 0x930A # macro
GL_REFERENCED_BY_GEOMETRY_SHADER = 0x9309 # macro
GL_REFERENCED_BY_MESH_SHADER_NV = 0x95A0 # macro
GL_REFERENCED_BY_TASK_SHADER_NV = 0x95A1 # macro
GL_REFERENCED_BY_TESS_CONTROL_SHADER = 0x9307 # macro
GL_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x9308 # macro
GL_REFERENCED_BY_VERTEX_SHADER = 0x9306 # macro
GL_REFERENCE_PLANE_EQUATION_SGIX = 0x817E # macro
GL_REFERENCE_PLANE_SGIX = 0x817D # macro
GL_REFLECTION_MAP = 0x8512 # macro
GL_REFLECTION_MAP_ARB = 0x8512 # macro
GL_REFLECTION_MAP_EXT = 0x8512 # macro
GL_REFLECTION_MAP_NV = 0x8512 # macro
GL_REGISTER_COMBINERS_NV = 0x8522 # macro
GL_REG_0_ATI = 0x8921 # macro
GL_REG_10_ATI = 0x892B # macro
GL_REG_11_ATI = 0x892C # macro
GL_REG_12_ATI = 0x892D # macro
GL_REG_13_ATI = 0x892E # macro
GL_REG_14_ATI = 0x892F # macro
GL_REG_15_ATI = 0x8930 # macro
GL_REG_16_ATI = 0x8931 # macro
GL_REG_17_ATI = 0x8932 # macro
GL_REG_18_ATI = 0x8933 # macro
GL_REG_19_ATI = 0x8934 # macro
GL_REG_1_ATI = 0x8922 # macro
GL_REG_20_ATI = 0x8935 # macro
GL_REG_21_ATI = 0x8936 # macro
GL_REG_22_ATI = 0x8937 # macro
GL_REG_23_ATI = 0x8938 # macro
GL_REG_24_ATI = 0x8939 # macro
GL_REG_25_ATI = 0x893A # macro
GL_REG_26_ATI = 0x893B # macro
GL_REG_27_ATI = 0x893C # macro
GL_REG_28_ATI = 0x893D # macro
GL_REG_29_ATI = 0x893E # macro
GL_REG_2_ATI = 0x8923 # macro
GL_REG_30_ATI = 0x893F # macro
GL_REG_31_ATI = 0x8940 # macro
GL_REG_3_ATI = 0x8924 # macro
GL_REG_4_ATI = 0x8925 # macro
GL_REG_5_ATI = 0x8926 # macro
GL_REG_6_ATI = 0x8927 # macro
GL_REG_7_ATI = 0x8928 # macro
GL_REG_8_ATI = 0x8929 # macro
GL_REG_9_ATI = 0x892A # macro
GL_RELATIVE_ARC_TO_NV = 0xFF # macro
GL_RELATIVE_CONIC_CURVE_TO_NV = 0x1B # macro
GL_RELATIVE_CUBIC_CURVE_TO_NV = 0x0D # macro
GL_RELATIVE_HORIZONTAL_LINE_TO_NV = 0x07 # macro
GL_RELATIVE_LARGE_CCW_ARC_TO_NV = 0x17 # macro
GL_RELATIVE_LARGE_CW_ARC_TO_NV = 0x19 # macro
GL_RELATIVE_LINE_TO_NV = 0x05 # macro
GL_RELATIVE_MOVE_TO_NV = 0x03 # macro
GL_RELATIVE_QUADRATIC_CURVE_TO_NV = 0x0B # macro
GL_RELATIVE_RECT_NV = 0xF7 # macro
GL_RELATIVE_ROUNDED_RECT2_NV = 0xEB # macro
GL_RELATIVE_ROUNDED_RECT4_NV = 0xED # macro
GL_RELATIVE_ROUNDED_RECT8_NV = 0xEF # macro
GL_RELATIVE_ROUNDED_RECT_NV = 0xE9 # macro
GL_RELATIVE_SMALL_CCW_ARC_TO_NV = 0x13 # macro
GL_RELATIVE_SMALL_CW_ARC_TO_NV = 0x15 # macro
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV = 0x11 # macro
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0F # macro
GL_RELATIVE_VERTICAL_LINE_TO_NV = 0x09 # macro
GL_RELEASED_APPLE = 0x8A19 # macro
GL_RENDER = 0x1C00 # macro
GL_RENDERBUFFER = 0x8D41 # macro
GL_RENDERBUFFER_ALPHA_SIZE = 0x8D53 # macro
GL_RENDERBUFFER_ALPHA_SIZE_EXT = 0x8D53 # macro
GL_RENDERBUFFER_BINDING = 0x8CA7 # macro
GL_RENDERBUFFER_BINDING_EXT = 0x8CA7 # macro
GL_RENDERBUFFER_BLUE_SIZE = 0x8D52 # macro
GL_RENDERBUFFER_BLUE_SIZE_EXT = 0x8D52 # macro
GL_RENDERBUFFER_COLOR_SAMPLES_NV = 0x8E10 # macro
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV = 0x8CAB # macro
GL_RENDERBUFFER_DEPTH_SIZE = 0x8D54 # macro
GL_RENDERBUFFER_DEPTH_SIZE_EXT = 0x8D54 # macro
GL_RENDERBUFFER_EXT = 0x8D41 # macro
GL_RENDERBUFFER_FREE_MEMORY_ATI = 0x87FD # macro
GL_RENDERBUFFER_GREEN_SIZE = 0x8D51 # macro
GL_RENDERBUFFER_GREEN_SIZE_EXT = 0x8D51 # macro
GL_RENDERBUFFER_HEIGHT = 0x8D43 # macro
GL_RENDERBUFFER_HEIGHT_EXT = 0x8D43 # macro
GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44 # macro
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = 0x8D44 # macro
GL_RENDERBUFFER_RED_SIZE = 0x8D50 # macro
GL_RENDERBUFFER_RED_SIZE_EXT = 0x8D50 # macro
GL_RENDERBUFFER_SAMPLES = 0x8CAB # macro
GL_RENDERBUFFER_SAMPLES_EXT = 0x8CAB # macro
GL_RENDERBUFFER_STENCIL_SIZE = 0x8D55 # macro
GL_RENDERBUFFER_STENCIL_SIZE_EXT = 0x8D55 # macro
GL_RENDERBUFFER_STORAGE_SAMPLES_AMD = 0x91B2 # macro
GL_RENDERBUFFER_WIDTH = 0x8D42 # macro
GL_RENDERBUFFER_WIDTH_EXT = 0x8D42 # macro
GL_RENDERER = 0x1F01 # macro
GL_RENDER_GPU_MASK_NV = 0x9558 # macro
GL_RENDER_MODE = 0x0C40 # macro
GL_REPEAT = 0x2901 # macro
GL_REPLACE = 0x1E01 # macro
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN = 0x85C3 # macro
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = 0x85C2 # macro
GL_REPLACEMENT_CODE_ARRAY_SUN = 0x85C0 # macro
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN = 0x85C1 # macro
GL_REPLACEMENT_CODE_SUN = 0x81D8 # macro
GL_REPLACE_EXT = 0x8062 # macro
GL_REPLACE_MIDDLE_SUN = 0x0002 # macro
GL_REPLACE_OLDEST_SUN = 0x0003 # macro
GL_REPLACE_VALUE_AMD = 0x874B # macro
GL_REPLICATE_BORDER = 0x8153 # macro
GL_REPLICATE_BORDER_HP = 0x8153 # macro
GL_REPRESENTATIVE_FRAGMENT_TEST_NV = 0x937F # macro
GL_RESAMPLE_AVERAGE_OML = 0x8988 # macro
GL_RESAMPLE_DECIMATE_OML = 0x8989 # macro
GL_RESAMPLE_DECIMATE_SGIX = 0x8430 # macro
GL_RESAMPLE_REPLICATE_OML = 0x8986 # macro
GL_RESAMPLE_REPLICATE_SGIX = 0x8433 # macro
GL_RESAMPLE_ZERO_FILL_OML = 0x8987 # macro
GL_RESAMPLE_ZERO_FILL_SGIX = 0x8434 # macro
GL_RESCALE_NORMAL = 0x803A # macro
GL_RESCALE_NORMAL_EXT = 0x803A # macro
GL_RESET_NOTIFICATION_STRATEGY = 0x8256 # macro
GL_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256 # macro
GL_RESTART_PATH_NV = 0xF0 # macro
GL_RESTART_SUN = 0x0001 # macro
GL_RETAINED_APPLE = 0x8A1B # macro
GL_RETURN = 0x0102 # macro
GL_RG = 0x8227 # macro
GL_RG16 = 0x822C # macro
GL_RG16F = 0x822F # macro
GL_RG16F_EXT = 0x822F # macro
GL_RG16I = 0x8239 # macro
GL_RG16UI = 0x823A # macro
GL_RG16_SNORM = 0x8F99 # macro
GL_RG32F = 0x8230 # macro
GL_RG32F_EXT = 0x8230 # macro
GL_RG32I = 0x823B # macro
GL_RG32UI = 0x823C # macro
GL_RG8 = 0x822B # macro
GL_RG8I = 0x8237 # macro
GL_RG8UI = 0x8238 # macro
GL_RG8_EXT = 0x822B # macro
GL_RG8_SNORM = 0x8F95 # macro
GL_RGB = 0x1907 # macro
GL_RGB10 = 0x8052 # macro
GL_RGB10_A2 = 0x8059 # macro
GL_RGB10_A2UI = 0x906F # macro
GL_RGB10_A2_EXT = 0x8059 # macro
GL_RGB10_EXT = 0x8052 # macro
GL_RGB12 = 0x8053 # macro
GL_RGB12_EXT = 0x8053 # macro
GL_RGB16 = 0x8054 # macro
GL_RGB16F = 0x881B # macro
GL_RGB16F_ARB = 0x881B # macro
GL_RGB16F_EXT = 0x881B # macro
GL_RGB16I = 0x8D89 # macro
GL_RGB16I_EXT = 0x8D89 # macro
GL_RGB16UI = 0x8D77 # macro
GL_RGB16UI_EXT = 0x8D77 # macro
GL_RGB16_EXT = 0x8054 # macro
GL_RGB16_SNORM = 0x8F9A # macro
GL_RGB2_EXT = 0x804E # macro
GL_RGB32F = 0x8815 # macro
GL_RGB32F_ARB = 0x8815 # macro
GL_RGB32F_EXT = 0x8815 # macro
GL_RGB32I = 0x8D83 # macro
GL_RGB32I_EXT = 0x8D83 # macro
GL_RGB32UI = 0x8D71 # macro
GL_RGB32UI_EXT = 0x8D71 # macro
GL_RGB4 = 0x804F # macro
GL_RGB4_EXT = 0x804F # macro
GL_RGB4_S3TC = 0x83A1 # macro
GL_RGB5 = 0x8050 # macro
GL_RGB565 = 0x8D62 # macro
GL_RGB5_A1 = 0x8057 # macro
GL_RGB5_A1_EXT = 0x8057 # macro
GL_RGB5_EXT = 0x8050 # macro
GL_RGB8 = 0x8051 # macro
GL_RGB8I = 0x8D8F # macro
GL_RGB8I_EXT = 0x8D8F # macro
GL_RGB8UI = 0x8D7D # macro
GL_RGB8UI_EXT = 0x8D7D # macro
GL_RGB8_EXT = 0x8051 # macro
GL_RGB8_SNORM = 0x8F96 # macro
GL_RGB9_E5 = 0x8C3D # macro
GL_RGB9_E5_EXT = 0x8C3D # macro
GL_RGBA = 0x1908 # macro
GL_RGBA12 = 0x805A # macro
GL_RGBA12_EXT = 0x805A # macro
GL_RGBA16 = 0x805B # macro
GL_RGBA16F = 0x881A # macro
GL_RGBA16F_ARB = 0x881A # macro
GL_RGBA16F_EXT = 0x881A # macro
GL_RGBA16I = 0x8D88 # macro
GL_RGBA16I_EXT = 0x8D88 # macro
GL_RGBA16UI = 0x8D76 # macro
GL_RGBA16UI_EXT = 0x8D76 # macro
GL_RGBA16_EXT = 0x805B # macro
GL_RGBA16_SNORM = 0x8F9B # macro
GL_RGBA2 = 0x8055 # macro
GL_RGBA2_EXT = 0x8055 # macro
GL_RGBA32F = 0x8814 # macro
GL_RGBA32F_ARB = 0x8814 # macro
GL_RGBA32F_EXT = 0x8814 # macro
GL_RGBA32I = 0x8D82 # macro
GL_RGBA32I_EXT = 0x8D82 # macro
GL_RGBA32UI = 0x8D70 # macro
GL_RGBA32UI_EXT = 0x8D70 # macro
GL_RGBA4 = 0x8056 # macro
GL_RGBA4_DXT5_S3TC = 0x83A5 # macro
GL_RGBA4_EXT = 0x8056 # macro
GL_RGBA4_S3TC = 0x83A3 # macro
GL_RGBA8 = 0x8058 # macro
GL_RGBA8I = 0x8D8E # macro
GL_RGBA8I_EXT = 0x8D8E # macro
GL_RGBA8UI = 0x8D7C # macro
GL_RGBA8UI_EXT = 0x8D7C # macro
GL_RGBA8_EXT = 0x8058 # macro
GL_RGBA8_SNORM = 0x8F97 # macro
GL_RGBA_DXT5_S3TC = 0x83A4 # macro
GL_RGBA_FLOAT16_APPLE = 0x881A # macro
GL_RGBA_FLOAT16_ATI = 0x881A # macro
GL_RGBA_FLOAT32_APPLE = 0x8814 # macro
GL_RGBA_FLOAT32_ATI = 0x8814 # macro
GL_RGBA_FLOAT_MODE_ARB = 0x8820 # macro
GL_RGBA_FLOAT_MODE_ATI = 0x8820 # macro
GL_RGBA_INTEGER = 0x8D99 # macro
GL_RGBA_INTEGER_EXT = 0x8D99 # macro
GL_RGBA_INTEGER_MODE_EXT = 0x8D9E # macro
GL_RGBA_MODE = 0x0C31 # macro
GL_RGBA_S3TC = 0x83A2 # macro
GL_RGBA_SIGNED_COMPONENTS_EXT = 0x8C3C # macro
GL_RGBA_SNORM = 0x8F93 # macro
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = 0x86D9 # macro
GL_RGB_422_APPLE = 0x8A1F # macro
GL_RGB_FLOAT16_APPLE = 0x881B # macro
GL_RGB_FLOAT16_ATI = 0x881B # macro
GL_RGB_FLOAT32_APPLE = 0x8815 # macro
GL_RGB_FLOAT32_ATI = 0x8815 # macro
GL_RGB_INTEGER = 0x8D98 # macro
GL_RGB_INTEGER_EXT = 0x8D98 # macro
GL_RGB_RAW_422_APPLE = 0x8A51 # macro
GL_RGB_S3TC = 0x83A0 # macro
GL_RGB_SCALE = 0x8573 # macro
GL_RGB_SCALE_ARB = 0x8573 # macro
GL_RGB_SCALE_EXT = 0x8573 # macro
GL_RGB_SNORM = 0x8F92 # macro
GL_RG_INTEGER = 0x8228 # macro
GL_RG_SNORM = 0x8F91 # macro
GL_RIGHT = 0x0407 # macro
GL_ROUNDED_RECT2_NV = 0xEA # macro
GL_ROUNDED_RECT4_NV = 0xEC # macro
GL_ROUNDED_RECT8_NV = 0xEE # macro
GL_ROUNDED_RECT_NV = 0xE8 # macro
GL_ROUND_NV = 0x90A4 # macro
GL_S = 0x2000 # macro
GL_SAMPLER = 0x82E6 # macro
GL_SAMPLER_1D = 0x8B5D # macro
GL_SAMPLER_1D_ARB = 0x8B5D # macro
GL_SAMPLER_1D_ARRAY = 0x8DC0 # macro
GL_SAMPLER_1D_ARRAY_EXT = 0x8DC0 # macro
GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3 # macro
GL_SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3 # macro
GL_SAMPLER_1D_SHADOW = 0x8B61 # macro
GL_SAMPLER_1D_SHADOW_ARB = 0x8B61 # macro
GL_SAMPLER_2D = 0x8B5E # macro
GL_SAMPLER_2D_ARB = 0x8B5E # macro
GL_SAMPLER_2D_ARRAY = 0x8DC1 # macro
GL_SAMPLER_2D_ARRAY_EXT = 0x8DC1 # macro
GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4 # macro
GL_SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4 # macro
GL_SAMPLER_2D_MULTISAMPLE = 0x9108 # macro
GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B # macro
GL_SAMPLER_2D_RECT = 0x8B63 # macro
GL_SAMPLER_2D_RECT_ARB = 0x8B63 # macro
GL_SAMPLER_2D_RECT_SHADOW = 0x8B64 # macro
GL_SAMPLER_2D_RECT_SHADOW_ARB = 0x8B64 # macro
GL_SAMPLER_2D_SHADOW = 0x8B62 # macro
GL_SAMPLER_2D_SHADOW_ARB = 0x8B62 # macro
GL_SAMPLER_3D = 0x8B5F # macro
GL_SAMPLER_3D_ARB = 0x8B5F # macro
GL_SAMPLER_BINDING = 0x8919 # macro
GL_SAMPLER_BUFFER = 0x8DC2 # macro
GL_SAMPLER_BUFFER_AMD = 0x9001 # macro
GL_SAMPLER_BUFFER_EXT = 0x8DC2 # macro
GL_SAMPLER_CUBE = 0x8B60 # macro
GL_SAMPLER_CUBE_ARB = 0x8B60 # macro
GL_SAMPLER_CUBE_MAP_ARRAY = 0x900C # macro
GL_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900C # macro
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D # macro
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = 0x900D # macro
GL_SAMPLER_CUBE_SHADOW = 0x8DC5 # macro
GL_SAMPLER_CUBE_SHADOW_EXT = 0x8DC5 # macro
GL_SAMPLER_OBJECT_AMD = 0x9155 # macro
GL_SAMPLER_RENDERBUFFER_NV = 0x8E56 # macro
GL_SAMPLES = 0x80A9 # macro
GL_SAMPLES_3DFX = 0x86B4 # macro
GL_SAMPLES_ARB = 0x80A9 # macro
GL_SAMPLES_EXT = 0x80A9 # macro
GL_SAMPLES_PASSED = 0x8914 # macro
GL_SAMPLES_PASSED_ARB = 0x8914 # macro
GL_SAMPLES_SGIS = 0x80A9 # macro
GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E # macro
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB = 0x809E # macro
GL_SAMPLE_ALPHA_TO_MASK_EXT = 0x809E # macro
GL_SAMPLE_ALPHA_TO_MASK_SGIS = 0x809E # macro
GL_SAMPLE_ALPHA_TO_ONE = 0x809F # macro
GL_SAMPLE_ALPHA_TO_ONE_ARB = 0x809F # macro
GL_SAMPLE_ALPHA_TO_ONE_EXT = 0x809F # macro
GL_SAMPLE_ALPHA_TO_ONE_SGIS = 0x809F # macro
GL_SAMPLE_BUFFERS = 0x80A8 # macro
GL_SAMPLE_BUFFERS_3DFX = 0x86B3 # macro
GL_SAMPLE_BUFFERS_ARB = 0x80A8 # macro
GL_SAMPLE_BUFFERS_EXT = 0x80A8 # macro
GL_SAMPLE_BUFFERS_SGIS = 0x80A8 # macro
GL_SAMPLE_COVERAGE = 0x80A0 # macro
GL_SAMPLE_COVERAGE_ARB = 0x80A0 # macro
GL_SAMPLE_COVERAGE_INVERT = 0x80AB # macro
GL_SAMPLE_COVERAGE_INVERT_ARB = 0x80AB # macro
GL_SAMPLE_COVERAGE_VALUE = 0x80AA # macro
GL_SAMPLE_COVERAGE_VALUE_ARB = 0x80AA # macro
GL_SAMPLE_LOCATION_ARB = 0x8E50 # macro
GL_SAMPLE_LOCATION_NV = 0x8E50 # macro
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB = 0x933F # macro
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV = 0x933F # macro
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB = 0x933E # macro
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV = 0x933E # macro
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB = 0x933D # macro
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV = 0x933D # macro
GL_SAMPLE_MASK = 0x8E51 # macro
GL_SAMPLE_MASK_EXT = 0x80A0 # macro
GL_SAMPLE_MASK_INVERT_EXT = 0x80AB # macro
GL_SAMPLE_MASK_INVERT_SGIS = 0x80AB # macro
GL_SAMPLE_MASK_NV = 0x8E51 # macro
GL_SAMPLE_MASK_SGIS = 0x80A0 # macro
GL_SAMPLE_MASK_VALUE = 0x8E52 # macro
GL_SAMPLE_MASK_VALUE_EXT = 0x80AA # macro
GL_SAMPLE_MASK_VALUE_NV = 0x8E52 # macro
GL_SAMPLE_MASK_VALUE_SGIS = 0x80AA # macro
GL_SAMPLE_PATTERN_EXT = 0x80AC # macro
GL_SAMPLE_PATTERN_SGIS = 0x80AC # macro
GL_SAMPLE_POSITION = 0x8E50 # macro
GL_SAMPLE_POSITION_NV = 0x8E50 # macro
GL_SAMPLE_SHADING = 0x8C36 # macro
GL_SAMPLE_SHADING_ARB = 0x8C36 # macro
GL_SATURATE_BIT_ATI = 0x00000040 # macro
GL_SCALAR_EXT = 0x87BE # macro
GL_SCALEBIAS_HINT_SGIX = 0x8322 # macro
GL_SCALED_RESOLVE_FASTEST_EXT = 0x90BA # macro
GL_SCALED_RESOLVE_NICEST_EXT = 0x90BB # macro
GL_SCALE_BY_FOUR_NV = 0x853F # macro
GL_SCALE_BY_ONE_HALF_NV = 0x8540 # macro
GL_SCALE_BY_TWO_NV = 0x853E # macro
GL_SCISSOR_BIT = 0x00080000 # macro
GL_SCISSOR_BOX = 0x0C10 # macro
GL_SCISSOR_BOX_EXCLUSIVE_NV = 0x9556 # macro
GL_SCISSOR_COMMAND_NV = 0x0011 # macro
GL_SCISSOR_TEST = 0x0C11 # macro
GL_SCISSOR_TEST_EXCLUSIVE_NV = 0x9555 # macro
GL_SCREEN_COORDINATES_REND = 0x8490 # macro
GL_SCREEN_KHR = 0x9295 # macro
GL_SCREEN_NV = 0x9295 # macro
GL_SECONDARY_COLOR_ARRAY = 0x845E # macro
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV = 0x8F27 # macro
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C # macro
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x889C # macro
GL_SECONDARY_COLOR_ARRAY_EXT = 0x845E # macro
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV = 0x8F31 # macro
GL_SECONDARY_COLOR_ARRAY_LIST_IBM = 103077 # macro
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = 103087 # macro
GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D # macro
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D # macro
GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A # macro
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A # macro
GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C # macro
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C # macro
GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B # macro
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B # macro
GL_SECONDARY_COLOR_NV = 0x852D # macro
GL_SECONDARY_INTERPOLATOR_ATI = 0x896D # macro
GL_SELECT = 0x1C02 # macro
GL_SELECTION_BUFFER_POINTER = 0x0DF3 # macro
GL_SELECTION_BUFFER_SIZE = 0x0DF4 # macro
GL_SEMAPHORE_TYPE_BINARY_NV = 0x95B4 # macro
GL_SEMAPHORE_TYPE_NV = 0x95B3 # macro
GL_SEMAPHORE_TYPE_TIMELINE_NV = 0x95B5 # macro
GL_SEPARABLE_2D = 0x8012 # macro
GL_SEPARABLE_2D_EXT = 0x8012 # macro
GL_SEPARATE_ATTRIBS = 0x8C8D # macro
GL_SEPARATE_ATTRIBS_EXT = 0x8C8D # macro
GL_SEPARATE_ATTRIBS_NV = 0x8C8D # macro
GL_SEPARATE_SPECULAR_COLOR = 0x81FA # macro
GL_SEPARATE_SPECULAR_COLOR_EXT = 0x81FA # macro
GL_SET = 0x150F # macro
GL_SET_AMD = 0x874A # macro
GL_SHADER = 0x82E1 # macro
GL_SHADER_BINARY_FORMATS = 0x8DF8 # macro
GL_SHADER_BINARY_FORMAT_SPIR_V = 0x9551 # macro
GL_SHADER_BINARY_FORMAT_SPIR_V_ARB = 0x9551 # macro
GL_SHADER_COMPILER = 0x8DFA # macro
GL_SHADER_CONSISTENT_NV = 0x86DD # macro
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV = 0x00000010 # macro
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x00000020 # macro
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = 0x00000020 # macro
GL_SHADER_IMAGE_ATOMIC = 0x82A6 # macro
GL_SHADER_IMAGE_LOAD = 0x82A4 # macro
GL_SHADER_IMAGE_STORE = 0x82A5 # macro
GL_SHADER_INCLUDE_ARB = 0x8DAE # macro
GL_SHADER_OBJECT_ARB = 0x8B48 # macro
GL_SHADER_OBJECT_EXT = 0x8B48 # macro
GL_SHADER_OPERATION_NV = 0x86DF # macro
GL_SHADER_SOURCE_LENGTH = 0x8B88 # macro
GL_SHADER_STORAGE_BARRIER_BIT = 0x00002000 # macro
GL_SHADER_STORAGE_BLOCK = 0x92E6 # macro
GL_SHADER_STORAGE_BUFFER = 0x90D2 # macro
GL_SHADER_STORAGE_BUFFER_BINDING = 0x90D3 # macro
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = 0x90DF # macro
GL_SHADER_STORAGE_BUFFER_SIZE = 0x90D5 # macro
GL_SHADER_STORAGE_BUFFER_START = 0x90D4 # macro
GL_SHADER_TYPE = 0x8B4F # macro
GL_SHADE_MODEL = 0x0B54 # macro
GL_SHADING_LANGUAGE_VERSION = 0x8B8C # macro
GL_SHADING_LANGUAGE_VERSION_ARB = 0x8B8C # macro
GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV = 0x956F # macro
GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV = 0x9566 # macro
GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV = 0x9567 # macro
GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV = 0x9568 # macro
GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV = 0x9569 # macro
GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV = 0x956A # macro
GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV = 0x956B # macro
GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV = 0x9565 # macro
GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV = 0x956C # macro
GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV = 0x956D # macro
GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV = 0x956E # macro
GL_SHADING_RATE_IMAGE_BINDING_NV = 0x955B # macro
GL_SHADING_RATE_IMAGE_NV = 0x9563 # macro
GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV = 0x95B2 # macro
GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV = 0x955E # macro
GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV = 0x95B1 # macro
GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV = 0x955D # macro
GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV = 0x955C # macro
GL_SHADING_RATE_NO_INVOCATIONS_NV = 0x9564 # macro
GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV = 0x95AE # macro
GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV = 0x95AF # macro
GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV = 0x95B0 # macro
GL_SHADOW_AMBIENT_SGIX = 0x80BF # macro
GL_SHADOW_ATTENUATION_EXT = 0x834E # macro
GL_SHARED_EDGE_NV = 0xC0 # macro
GL_SHARED_TEXTURE_PALETTE_EXT = 0x81FB # macro
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = 0x80B0 # macro
GL_SHININESS = 0x1601 # macro
GL_SHORT = 0x1402 # macro
GL_SIGNALED = 0x9119 # macro
GL_SIGNED_ALPHA8_NV = 0x8706 # macro
GL_SIGNED_ALPHA_NV = 0x8705 # macro
GL_SIGNED_HILO16_NV = 0x86FA # macro
GL_SIGNED_HILO8_NV = 0x885F # macro
GL_SIGNED_HILO_NV = 0x86F9 # macro
GL_SIGNED_IDENTITY_NV = 0x853C # macro
GL_SIGNED_INTENSITY8_NV = 0x8708 # macro
GL_SIGNED_INTENSITY_NV = 0x8707 # macro
GL_SIGNED_LUMINANCE8_ALPHA8_NV = 0x8704 # macro
GL_SIGNED_LUMINANCE8_NV = 0x8702 # macro
GL_SIGNED_LUMINANCE_ALPHA_NV = 0x8703 # macro
GL_SIGNED_LUMINANCE_NV = 0x8701 # macro
GL_SIGNED_NEGATE_NV = 0x853D # macro
GL_SIGNED_NORMALIZED = 0x8F9C # macro
GL_SIGNED_RGB8_NV = 0x86FF # macro
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV = 0x870D # macro
GL_SIGNED_RGBA8_NV = 0x86FC # macro
GL_SIGNED_RGBA_NV = 0x86FB # macro
GL_SIGNED_RGB_NV = 0x86FE # macro
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV = 0x870C # macro
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = 0x82AC # macro
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = 0x82AE # macro
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = 0x82AD # macro
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = 0x82AF # macro
GL_SINGLE_COLOR = 0x81F9 # macro
GL_SINGLE_COLOR_EXT = 0x81F9 # macro
GL_SKIP_COMPONENTS1_NV = -6 # macro
GL_SKIP_COMPONENTS2_NV = -5 # macro
GL_SKIP_COMPONENTS3_NV = -4 # macro
GL_SKIP_COMPONENTS4_NV = -3 # macro
GL_SKIP_DECODE_EXT = 0x8A4A # macro
GL_SKIP_MISSING_GLYPH_NV = 0x90A9 # macro
GL_SLICE_ACCUM_SUN = 0x85CC # macro
GL_SLUMINANCE = 0x8C46 # macro
GL_SLUMINANCE8 = 0x8C47 # macro
GL_SLUMINANCE8_ALPHA8 = 0x8C45 # macro
GL_SLUMINANCE8_ALPHA8_EXT = 0x8C45 # macro
GL_SLUMINANCE8_EXT = 0x8C47 # macro
GL_SLUMINANCE_ALPHA = 0x8C44 # macro
GL_SLUMINANCE_ALPHA_EXT = 0x8C44 # macro
GL_SLUMINANCE_EXT = 0x8C46 # macro
GL_SMALL_CCW_ARC_TO_NV = 0x12 # macro
GL_SMALL_CW_ARC_TO_NV = 0x14 # macro
GL_SMOOTH = 0x1D01 # macro
GL_SMOOTH_CUBIC_CURVE_TO_NV = 0x10 # macro
GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23 # macro
GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22 # macro
GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13 # macro
GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12 # macro
GL_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0E # macro
GL_SM_COUNT_NV = 0x933B # macro
GL_SOFTLIGHT_KHR = 0x929C # macro
GL_SOFTLIGHT_NV = 0x929C # macro
GL_SOURCE0_ALPHA = 0x8588 # macro
GL_SOURCE0_ALPHA_ARB = 0x8588 # macro
GL_SOURCE0_ALPHA_EXT = 0x8588 # macro
GL_SOURCE0_RGB = 0x8580 # macro
GL_SOURCE0_RGB_ARB = 0x8580 # macro
GL_SOURCE0_RGB_EXT = 0x8580 # macro
GL_SOURCE1_ALPHA = 0x8589 # macro
GL_SOURCE1_ALPHA_ARB = 0x8589 # macro
GL_SOURCE1_ALPHA_EXT = 0x8589 # macro
GL_SOURCE1_RGB = 0x8581 # macro
GL_SOURCE1_RGB_ARB = 0x8581 # macro
GL_SOURCE1_RGB_EXT = 0x8581 # macro
GL_SOURCE2_ALPHA = 0x858A # macro
GL_SOURCE2_ALPHA_ARB = 0x858A # macro
GL_SOURCE2_ALPHA_EXT = 0x858A # macro
GL_SOURCE2_RGB = 0x8582 # macro
GL_SOURCE2_RGB_ARB = 0x8582 # macro
GL_SOURCE2_RGB_EXT = 0x8582 # macro
GL_SOURCE3_ALPHA_NV = 0x858B # macro
GL_SOURCE3_RGB_NV = 0x8583 # macro
GL_SPARE0_NV = 0x852E # macro
GL_SPARE0_PLUS_SECONDARY_COLOR_NV = 0x8532 # macro
GL_SPARE1_NV = 0x852F # macro
GL_SPARSE_BUFFER_PAGE_SIZE_ARB = 0x82F8 # macro
GL_SPARSE_STORAGE_BIT_ARB = 0x0400 # macro
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = 0x91A9 # macro
GL_SPECULAR = 0x1202 # macro
GL_SPHERE_MAP = 0x2402 # macro
GL_SPIR_V_BINARY = 0x9552 # macro
GL_SPIR_V_BINARY_ARB = 0x9552 # macro
GL_SPIR_V_EXTENSIONS = 0x9553 # macro
GL_SPOT_CUTOFF = 0x1206 # macro
GL_SPOT_DIRECTION = 0x1204 # macro
GL_SPOT_EXPONENT = 0x1205 # macro
GL_SPRITE_AXIAL_SGIX = 0x814C # macro
GL_SPRITE_AXIS_SGIX = 0x814A # macro
GL_SPRITE_EYE_ALIGNED_SGIX = 0x814E # macro
GL_SPRITE_MODE_SGIX = 0x8149 # macro
GL_SPRITE_OBJECT_ALIGNED_SGIX = 0x814D # macro
GL_SPRITE_SGIX = 0x8148 # macro
GL_SPRITE_TRANSLATION_SGIX = 0x814B # macro
GL_SQUARE_NV = 0x90A3 # macro
GL_SR8_EXT = 0x8FBD # macro
GL_SRC0_ALPHA = 0x8588 # macro
GL_SRC0_RGB = 0x8580 # macro
GL_SRC1_ALPHA = 0x8589 # macro
GL_SRC1_COLOR = 0x88F9 # macro
GL_SRC1_RGB = 0x8581 # macro
GL_SRC2_ALPHA = 0x858A # macro
GL_SRC2_RGB = 0x8582 # macro
GL_SRC_ALPHA = 0x0302 # macro
GL_SRC_ALPHA_SATURATE = 0x0308 # macro
GL_SRC_ATOP_NV = 0x928E # macro
GL_SRC_COLOR = 0x0300 # macro
GL_SRC_IN_NV = 0x928A # macro
GL_SRC_NV = 0x9286 # macro
GL_SRC_OUT_NV = 0x928C # macro
GL_SRC_OVER_NV = 0x9288 # macro
GL_SRG8_EXT = 0x8FBE # macro
GL_SRGB = 0x8C40 # macro
GL_SRGB8 = 0x8C41 # macro
GL_SRGB8_ALPHA8 = 0x8C43 # macro
GL_SRGB8_ALPHA8_EXT = 0x8C43 # macro
GL_SRGB8_EXT = 0x8C41 # macro
GL_SRGB_ALPHA = 0x8C42 # macro
GL_SRGB_ALPHA_EXT = 0x8C42 # macro
GL_SRGB_DECODE_ARB = 0x8299 # macro
GL_SRGB_EXT = 0x8C40 # macro
GL_SRGB_READ = 0x8297 # macro
GL_SRGB_WRITE = 0x8298 # macro
GL_STACK_OVERFLOW = 0x0503 # macro
GL_STACK_UNDERFLOW = 0x0504 # macro
GL_STANDARD_FONT_FORMAT_NV = 0x936C # macro
GL_STANDARD_FONT_NAME_NV = 0x9072 # macro
GL_STATIC_ATI = 0x8760 # macro
GL_STATIC_COPY = 0x88E6 # macro
GL_STATIC_COPY_ARB = 0x88E6 # macro
GL_STATIC_DRAW = 0x88E4 # macro
GL_STATIC_DRAW_ARB = 0x88E4 # macro
GL_STATIC_READ = 0x88E5 # macro
GL_STATIC_READ_ARB = 0x88E5 # macro
GL_STATIC_VERTEX_ARRAY_IBM = 103061 # macro
GL_STENCIL = 0x1802 # macro
GL_STENCIL_ATTACHMENT = 0x8D20 # macro
GL_STENCIL_ATTACHMENT_EXT = 0x8D20 # macro
GL_STENCIL_BACK_FAIL = 0x8801 # macro
GL_STENCIL_BACK_FAIL_ATI = 0x8801 # macro
GL_STENCIL_BACK_FUNC = 0x8800 # macro
GL_STENCIL_BACK_FUNC_ATI = 0x8800 # macro
GL_STENCIL_BACK_OP_VALUE_AMD = 0x874D # macro
GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802 # macro
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = 0x8802 # macro
GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803 # macro
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = 0x8803 # macro
GL_STENCIL_BACK_REF = 0x8CA3 # macro
GL_STENCIL_BACK_VALUE_MASK = 0x8CA4 # macro
GL_STENCIL_BACK_WRITEMASK = 0x8CA5 # macro
GL_STENCIL_BITS = 0x0D57 # macro
GL_STENCIL_BUFFER_BIT = 0x00000400 # macro
GL_STENCIL_CLEAR_TAG_VALUE_EXT = 0x88F3 # macro
GL_STENCIL_CLEAR_VALUE = 0x0B91 # macro
GL_STENCIL_COMPONENTS = 0x8285 # macro
GL_STENCIL_FAIL = 0x0B94 # macro
GL_STENCIL_FUNC = 0x0B92 # macro
GL_STENCIL_INDEX = 0x1901 # macro
GL_STENCIL_INDEX1 = 0x8D46 # macro
GL_STENCIL_INDEX16 = 0x8D49 # macro
GL_STENCIL_INDEX16_EXT = 0x8D49 # macro
GL_STENCIL_INDEX1_EXT = 0x8D46 # macro
GL_STENCIL_INDEX4 = 0x8D47 # macro
GL_STENCIL_INDEX4_EXT = 0x8D47 # macro
GL_STENCIL_INDEX8 = 0x8D48 # macro
GL_STENCIL_INDEX8_EXT = 0x8D48 # macro
GL_STENCIL_OP_VALUE_AMD = 0x874C # macro
GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95 # macro
GL_STENCIL_PASS_DEPTH_PASS = 0x0B96 # macro
GL_STENCIL_REF = 0x0B97 # macro
GL_STENCIL_REF_COMMAND_NV = 0x000C # macro
GL_STENCIL_RENDERABLE = 0x8288 # macro
GL_STENCIL_SAMPLES_NV = 0x932E # macro
GL_STENCIL_TAG_BITS_EXT = 0x88F2 # macro
GL_STENCIL_TEST = 0x0B90 # macro
GL_STENCIL_TEST_TWO_SIDE_EXT = 0x8910 # macro
GL_STENCIL_VALUE_MASK = 0x0B93 # macro
GL_STENCIL_WRITEMASK = 0x0B98 # macro
GL_STEREO = 0x0C33 # macro
GL_STORAGE_CACHED_APPLE = 0x85BE # macro
GL_STORAGE_CLIENT_APPLE = 0x85B4 # macro
GL_STORAGE_PRIVATE_APPLE = 0x85BD # macro
GL_STORAGE_SHARED_APPLE = 0x85BF # macro
GL_STREAM_COPY = 0x88E2 # macro
GL_STREAM_COPY_ARB = 0x88E2 # macro
GL_STREAM_DRAW = 0x88E0 # macro
GL_STREAM_DRAW_ARB = 0x88E0 # macro
GL_STREAM_RASTERIZATION_AMD = 0x91A0 # macro
GL_STREAM_READ = 0x88E1 # macro
GL_STREAM_READ_ARB = 0x88E1 # macro
GL_STRICT_DEPTHFUNC_HINT_PGI = 0x1A216 # macro
GL_STRICT_LIGHTING_HINT_PGI = 0x1A217 # macro
GL_STRICT_SCISSOR_HINT_PGI = 0x1A218 # macro
GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR = 0x00000004 # macro
GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR = 0x00000008 # macro
GL_SUBGROUP_FEATURE_BASIC_BIT_KHR = 0x00000001 # macro
GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR = 0x00000040 # macro
GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV = 0x00000100 # macro
GL_SUBGROUP_FEATURE_QUAD_BIT_KHR = 0x00000080 # macro
GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR = 0x00000010 # macro
GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR = 0x00000020 # macro
GL_SUBGROUP_FEATURE_VOTE_BIT_KHR = 0x00000002 # macro
GL_SUBGROUP_QUAD_ALL_STAGES_KHR = 0x9535 # macro
GL_SUBGROUP_SIZE_KHR = 0x9532 # macro
GL_SUBGROUP_SUPPORTED_FEATURES_KHR = 0x9534 # macro
GL_SUBGROUP_SUPPORTED_STAGES_KHR = 0x9533 # macro
GL_SUBPIXEL_BITS = 0x0D50 # macro
GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV = 0x9347 # macro
GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV = 0x9348 # macro
GL_SUBSAMPLE_DISTANCE_AMD = 0x883F # macro
GL_SUBTRACT = 0x84E7 # macro
GL_SUBTRACT_ARB = 0x84E7 # macro
GL_SUB_ATI = 0x8965 # macro
GL_SUCCESS_NV = 0x902F # macro
GL_SUPERSAMPLE_SCALE_X_NV = 0x9372 # macro
GL_SUPERSAMPLE_SCALE_Y_NV = 0x9373 # macro
GL_SUPPORTED_MULTISAMPLE_MODES_AMD = 0x91B7 # macro
GL_SURFACE_MAPPED_NV = 0x8700 # macro
GL_SURFACE_REGISTERED_NV = 0x86FD # macro
GL_SURFACE_STATE_NV = 0x86EB # macro
GL_SWIZZLE_STQ_ATI = 0x8977 # macro
GL_SWIZZLE_STQ_DQ_ATI = 0x8979 # macro
GL_SWIZZLE_STRQ_ATI = 0x897A # macro
GL_SWIZZLE_STRQ_DQ_ATI = 0x897B # macro
GL_SWIZZLE_STR_ATI = 0x8976 # macro
GL_SWIZZLE_STR_DR_ATI = 0x8978 # macro
GL_SYNC_CL_EVENT_ARB = 0x8240 # macro
GL_SYNC_CL_EVENT_COMPLETE_ARB = 0x8241 # macro
GL_SYNC_CONDITION = 0x9113 # macro
GL_SYNC_FENCE = 0x9116 # macro
GL_SYNC_FLAGS = 0x9115 # macro
GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001 # macro
GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117 # macro
GL_SYNC_STATUS = 0x9114 # macro
GL_SYNC_X11_FENCE_EXT = 0x90E1 # macro
GL_SYSTEM_FONT_NAME_NV = 0x9073 # macro
GL_T = 0x2001 # macro
GL_T2F_C3F_V3F = 0x2A2A # macro
GL_T2F_C4F_N3F_V3F = 0x2A2C # macro
GL_T2F_C4UB_V3F = 0x2A29 # macro
GL_T2F_IUI_N3F_V2F_EXT = 0x81B3 # macro
GL_T2F_IUI_N3F_V3F_EXT = 0x81B4 # macro
GL_T2F_IUI_V2F_EXT = 0x81B1 # macro
GL_T2F_IUI_V3F_EXT = 0x81B2 # macro
GL_T2F_N3F_V3F = 0x2A2B # macro
GL_T2F_V3F = 0x2A27 # macro
GL_T4F_C4F_N3F_V4F = 0x2A2D # macro
GL_T4F_V4F = 0x2A28 # macro
GL_TABLE_TOO_LARGE = 0x8031 # macro
GL_TABLE_TOO_LARGE_EXT = 0x8031 # macro
GL_TANGENT_ARRAY_EXT = 0x8439 # macro
GL_TANGENT_ARRAY_POINTER_EXT = 0x8442 # macro
GL_TANGENT_ARRAY_STRIDE_EXT = 0x843F # macro
GL_TANGENT_ARRAY_TYPE_EXT = 0x843E # macro
GL_TASK_SHADER_BIT_NV = 0x00000080 # macro
GL_TASK_SHADER_NV = 0x955A # macro
GL_TASK_SUBROUTINE_NV = 0x957D # macro
GL_TASK_SUBROUTINE_UNIFORM_NV = 0x957F # macro
GL_TASK_WORK_GROUP_SIZE_NV = 0x953F # macro
GL_TERMINATE_SEQUENCE_COMMAND_NV = 0x0000 # macro
GL_TESSELLATION_FACTOR_AMD = 0x9005 # macro
GL_TESSELLATION_MODE_AMD = 0x9004 # macro
GL_TESS_CONTROL_OUTPUT_VERTICES = 0x8E75 # macro
GL_TESS_CONTROL_PROGRAM_NV = 0x891E # macro
GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = 0x8C74 # macro
GL_TESS_CONTROL_SHADER = 0x8E88 # macro
GL_TESS_CONTROL_SHADER_BIT = 0x00000008 # macro
GL_TESS_CONTROL_SHADER_PATCHES = 0x82F1 # macro
GL_TESS_CONTROL_SHADER_PATCHES_ARB = 0x82F1 # macro
GL_TESS_CONTROL_SUBROUTINE = 0x92E9 # macro
GL_TESS_CONTROL_SUBROUTINE_UNIFORM = 0x92EF # macro
GL_TESS_CONTROL_TEXTURE = 0x829C # macro
GL_TESS_EVALUATION_PROGRAM_NV = 0x891F # macro
GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = 0x8C75 # macro
GL_TESS_EVALUATION_SHADER = 0x8E87 # macro
GL_TESS_EVALUATION_SHADER_BIT = 0x00000010 # macro
GL_TESS_EVALUATION_SHADER_INVOCATIONS = 0x82F2 # macro
GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB = 0x82F2 # macro
GL_TESS_EVALUATION_SUBROUTINE = 0x92EA # macro
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = 0x92F0 # macro
GL_TESS_EVALUATION_TEXTURE = 0x829D # macro
GL_TESS_GEN_MODE = 0x8E76 # macro
GL_TESS_GEN_POINT_MODE = 0x8E79 # macro
GL_TESS_GEN_SPACING = 0x8E77 # macro
GL_TESS_GEN_VERTEX_ORDER = 0x8E78 # macro
GL_TEXCOORD1_BIT_PGI = 0x10000000 # macro
GL_TEXCOORD2_BIT_PGI = 0x20000000 # macro
GL_TEXCOORD3_BIT_PGI = 0x40000000 # macro
GL_TEXCOORD4_BIT_PGI = 0x80000000 # macro
GL_TEXTURE = 0x1702 # macro
GL_TEXTURE0 = 0x84C0 # macro
GL_TEXTURE0_ARB = 0x84C0 # macro
GL_TEXTURE1 = 0x84C1 # macro
GL_TEXTURE10 = 0x84CA # macro
GL_TEXTURE10_ARB = 0x84CA # macro
GL_TEXTURE11 = 0x84CB # macro
GL_TEXTURE11_ARB = 0x84CB # macro
GL_TEXTURE12 = 0x84CC # macro
GL_TEXTURE12_ARB = 0x84CC # macro
GL_TEXTURE13 = 0x84CD # macro
GL_TEXTURE13_ARB = 0x84CD # macro
GL_TEXTURE14 = 0x84CE # macro
GL_TEXTURE14_ARB = 0x84CE # macro
GL_TEXTURE15 = 0x84CF # macro
GL_TEXTURE15_ARB = 0x84CF # macro
GL_TEXTURE16 = 0x84D0 # macro
GL_TEXTURE16_ARB = 0x84D0 # macro
GL_TEXTURE17 = 0x84D1 # macro
GL_TEXTURE17_ARB = 0x84D1 # macro
GL_TEXTURE18 = 0x84D2 # macro
GL_TEXTURE18_ARB = 0x84D2 # macro
GL_TEXTURE19 = 0x84D3 # macro
GL_TEXTURE19_ARB = 0x84D3 # macro
GL_TEXTURE1_ARB = 0x84C1 # macro
GL_TEXTURE2 = 0x84C2 # macro
GL_TEXTURE20 = 0x84D4 # macro
GL_TEXTURE20_ARB = 0x84D4 # macro
GL_TEXTURE21 = 0x84D5 # macro
GL_TEXTURE21_ARB = 0x84D5 # macro
GL_TEXTURE22 = 0x84D6 # macro
GL_TEXTURE22_ARB = 0x84D6 # macro
GL_TEXTURE23 = 0x84D7 # macro
GL_TEXTURE23_ARB = 0x84D7 # macro
GL_TEXTURE24 = 0x84D8 # macro
GL_TEXTURE24_ARB = 0x84D8 # macro
GL_TEXTURE25 = 0x84D9 # macro
GL_TEXTURE25_ARB = 0x84D9 # macro
GL_TEXTURE26 = 0x84DA # macro
GL_TEXTURE26_ARB = 0x84DA # macro
GL_TEXTURE27 = 0x84DB # macro
GL_TEXTURE27_ARB = 0x84DB # macro
GL_TEXTURE28 = 0x84DC # macro
GL_TEXTURE28_ARB = 0x84DC # macro
GL_TEXTURE29 = 0x84DD # macro
GL_TEXTURE29_ARB = 0x84DD # macro
GL_TEXTURE2_ARB = 0x84C2 # macro
GL_TEXTURE3 = 0x84C3 # macro
GL_TEXTURE30 = 0x84DE # macro
GL_TEXTURE30_ARB = 0x84DE # macro
GL_TEXTURE31 = 0x84DF # macro
GL_TEXTURE31_ARB = 0x84DF # macro
GL_TEXTURE3_ARB = 0x84C3 # macro
GL_TEXTURE4 = 0x84C4 # macro
GL_TEXTURE4_ARB = 0x84C4 # macro
GL_TEXTURE5 = 0x84C5 # macro
GL_TEXTURE5_ARB = 0x84C5 # macro
GL_TEXTURE6 = 0x84C6 # macro
GL_TEXTURE6_ARB = 0x84C6 # macro
GL_TEXTURE7 = 0x84C7 # macro
GL_TEXTURE7_ARB = 0x84C7 # macro
GL_TEXTURE8 = 0x84C8 # macro
GL_TEXTURE8_ARB = 0x84C8 # macro
GL_TEXTURE9 = 0x84C9 # macro
GL_TEXTURE9_ARB = 0x84C9 # macro
GL_TEXTURE_1D = 0x0DE0 # macro
GL_TEXTURE_1D_ARRAY = 0x8C18 # macro
GL_TEXTURE_1D_ARRAY_EXT = 0x8C18 # macro
GL_TEXTURE_1D_BINDING_EXT = 0x8068 # macro
GL_TEXTURE_1D_STACK_BINDING_MESAX = 0x875D # macro
GL_TEXTURE_1D_STACK_MESAX = 0x8759 # macro
GL_TEXTURE_2D = 0x0DE1 # macro
GL_TEXTURE_2D_ARRAY = 0x8C1A # macro
GL_TEXTURE_2D_ARRAY_EXT = 0x8C1A # macro
GL_TEXTURE_2D_BINDING_EXT = 0x8069 # macro
GL_TEXTURE_2D_MULTISAMPLE = 0x9100 # macro
GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102 # macro
GL_TEXTURE_2D_STACK_BINDING_MESAX = 0x875E # macro
GL_TEXTURE_2D_STACK_MESAX = 0x875A # macro
GL_TEXTURE_3D = 0x806F # macro
GL_TEXTURE_3D_BINDING_EXT = 0x806A # macro
GL_TEXTURE_3D_EXT = 0x806F # macro
GL_TEXTURE_4DSIZE_SGIS = 0x8136 # macro
GL_TEXTURE_4D_BINDING_SGIS = 0x814F # macro
GL_TEXTURE_4D_SGIS = 0x8134 # macro
GL_TEXTURE_ALPHA_SIZE = 0x805F # macro
GL_TEXTURE_ALPHA_SIZE_EXT = 0x805F # macro
GL_TEXTURE_ALPHA_TYPE = 0x8C13 # macro
GL_TEXTURE_ALPHA_TYPE_ARB = 0x8C13 # macro
GL_TEXTURE_APPLICATION_MODE_EXT = 0x834F # macro
GL_TEXTURE_BASE_LEVEL = 0x813C # macro
GL_TEXTURE_BASE_LEVEL_SGIS = 0x813C # macro
GL_TEXTURE_BINDING_1D = 0x8068 # macro
GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C # macro
GL_TEXTURE_BINDING_1D_ARRAY_EXT = 0x8C1C # macro
GL_TEXTURE_BINDING_2D = 0x8069 # macro
GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D # macro
GL_TEXTURE_BINDING_2D_ARRAY_EXT = 0x8C1D # macro
GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104 # macro
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105 # macro
GL_TEXTURE_BINDING_3D = 0x806A # macro
GL_TEXTURE_BINDING_BUFFER = 0x8C2C # macro
GL_TEXTURE_BINDING_BUFFER_ARB = 0x8C2C # macro
GL_TEXTURE_BINDING_BUFFER_EXT = 0x8C2C # macro
GL_TEXTURE_BINDING_CUBE_MAP = 0x8514 # macro
GL_TEXTURE_BINDING_CUBE_MAP_ARB = 0x8514 # macro
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A # macro
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = 0x900A # macro
GL_TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514 # macro
GL_TEXTURE_BINDING_RECTANGLE = 0x84F6 # macro
GL_TEXTURE_BINDING_RECTANGLE_ARB = 0x84F6 # macro
GL_TEXTURE_BINDING_RECTANGLE_NV = 0x84F6 # macro
GL_TEXTURE_BINDING_RENDERBUFFER_NV = 0x8E53 # macro
GL_TEXTURE_BIT = 0x00040000 # macro
GL_TEXTURE_BLUE_SIZE = 0x805E # macro
GL_TEXTURE_BLUE_SIZE_EXT = 0x805E # macro
GL_TEXTURE_BLUE_TYPE = 0x8C12 # macro
GL_TEXTURE_BLUE_TYPE_ARB = 0x8C12 # macro
GL_TEXTURE_BORDER = 0x1005 # macro
GL_TEXTURE_BORDER_COLOR = 0x1004 # macro
GL_TEXTURE_BORDER_VALUES_NV = 0x871A # macro
GL_TEXTURE_BUFFER = 0x8C2A # macro
GL_TEXTURE_BUFFER_ARB = 0x8C2A # macro
GL_TEXTURE_BUFFER_BINDING = 0x8C2A # macro
GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D # macro
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = 0x8C2D # macro
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D # macro
GL_TEXTURE_BUFFER_EXT = 0x8C2A # macro
GL_TEXTURE_BUFFER_FORMAT_ARB = 0x8C2E # macro
GL_TEXTURE_BUFFER_FORMAT_EXT = 0x8C2E # macro
GL_TEXTURE_BUFFER_OFFSET = 0x919D # macro
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = 0x919F # macro
GL_TEXTURE_BUFFER_SIZE = 0x919E # macro
GL_TEXTURE_CLIPMAP_CENTER_SGIX = 0x8171 # macro
GL_TEXTURE_CLIPMAP_DEPTH_SGIX = 0x8176 # macro
GL_TEXTURE_CLIPMAP_FRAME_SGIX = 0x8172 # macro
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = 0x8175 # macro
GL_TEXTURE_CLIPMAP_OFFSET_SGIX = 0x8173 # macro
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8174 # macro
GL_TEXTURE_COLOR_SAMPLES_NV = 0x9046 # macro
GL_TEXTURE_COLOR_TABLE_SGI = 0x80BC # macro
GL_TEXTURE_COLOR_WRITEMASK_SGIS = 0x81EF # macro
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB = 0x80BF # macro
GL_TEXTURE_COMPARE_FUNC = 0x884D # macro
GL_TEXTURE_COMPARE_FUNC_ARB = 0x884D # macro
GL_TEXTURE_COMPARE_MODE = 0x884C # macro
GL_TEXTURE_COMPARE_MODE_ARB = 0x884C # macro
GL_TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B # macro
GL_TEXTURE_COMPARE_SGIX = 0x819A # macro
GL_TEXTURE_COMPONENTS = 0x1003 # macro
GL_TEXTURE_COMPRESSED = 0x86A1 # macro
GL_TEXTURE_COMPRESSED_ARB = 0x86A1 # macro
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT = 0x82B2 # macro
GL_TEXTURE_COMPRESSED_BLOCK_SIZE = 0x82B3 # macro
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH = 0x82B1 # macro
GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0 # macro
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = 0x86A0 # macro
GL_TEXTURE_COMPRESSION_HINT = 0x84EF # macro
GL_TEXTURE_COMPRESSION_HINT_ARB = 0x84EF # macro
GL_TEXTURE_CONSTANT_DATA_SUNX = 0x81D6 # macro
GL_TEXTURE_COORD_ARRAY = 0x8078 # macro
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV = 0x8F25 # macro
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A # macro
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = 0x889A # macro
GL_TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808B # macro
GL_TEXTURE_COORD_ARRAY_EXT = 0x8078 # macro
GL_TEXTURE_COORD_ARRAY_LENGTH_NV = 0x8F2F # macro
GL_TEXTURE_COORD_ARRAY_LIST_IBM = 103074 # macro
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = 103084 # macro
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F8 # macro
GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092 # macro
GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092 # macro
GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088 # macro
GL_TEXTURE_COORD_ARRAY_SIZE_EXT = 0x8088 # macro
GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A # macro
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808A # macro
GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089 # macro
GL_TEXTURE_COORD_ARRAY_TYPE_EXT = 0x8089 # macro
GL_TEXTURE_COORD_NV = 0x8C79 # macro
GL_TEXTURE_COVERAGE_SAMPLES_NV = 0x9045 # macro
GL_TEXTURE_CUBE_MAP = 0x8513 # macro
GL_TEXTURE_CUBE_MAP_ARB = 0x8513 # macro
GL_TEXTURE_CUBE_MAP_ARRAY = 0x9009 # macro
GL_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x9009 # macro
GL_TEXTURE_CUBE_MAP_EXT = 0x8513 # macro
GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516 # macro
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x8516 # macro
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516 # macro
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518 # macro
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x8518 # macro
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518 # macro
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A # macro
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x851A # macro
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A # macro
GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515 # macro
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x8515 # macro
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515 # macro
GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517 # macro
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x8517 # macro
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517 # macro
GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519 # macro
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x8519 # macro
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519 # macro
GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F # macro
GL_TEXTURE_DEFORMATION_BIT_SGIX = 0x00000001 # macro
GL_TEXTURE_DEFORMATION_SGIX = 0x8195 # macro
GL_TEXTURE_DEPTH = 0x8071 # macro
GL_TEXTURE_DEPTH_EXT = 0x8071 # macro
GL_TEXTURE_DEPTH_SIZE = 0x884A # macro
GL_TEXTURE_DEPTH_SIZE_ARB = 0x884A # macro
GL_TEXTURE_DEPTH_TYPE = 0x8C16 # macro
GL_TEXTURE_DEPTH_TYPE_ARB = 0x8C16 # macro
GL_TEXTURE_DS_SIZE_NV = 0x871D # macro
GL_TEXTURE_DT_SIZE_NV = 0x871E # macro
GL_TEXTURE_ENV = 0x2300 # macro
GL_TEXTURE_ENV_BIAS_SGIX = 0x80BE # macro
GL_TEXTURE_ENV_COLOR = 0x2201 # macro
GL_TEXTURE_ENV_MODE = 0x2200 # macro
GL_TEXTURE_FETCH_BARRIER_BIT = 0x00000008 # macro
GL_TEXTURE_FETCH_BARRIER_BIT_EXT = 0x00000008 # macro
GL_TEXTURE_FILTER4_SIZE_SGIS = 0x8147 # macro
GL_TEXTURE_FILTER_CONTROL = 0x8500 # macro
GL_TEXTURE_FILTER_CONTROL_EXT = 0x8500 # macro
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107 # macro
GL_TEXTURE_FLOAT_COMPONENTS_NV = 0x888C # macro
GL_TEXTURE_FREE_MEMORY_ATI = 0x87FC # macro
GL_TEXTURE_GATHER = 0x82A2 # macro
GL_TEXTURE_GATHER_SHADOW = 0x82A3 # macro
GL_TEXTURE_GEN_MODE = 0x2500 # macro
GL_TEXTURE_GEN_Q = 0x0C63 # macro
GL_TEXTURE_GEN_R = 0x0C62 # macro
GL_TEXTURE_GEN_S = 0x0C60 # macro
GL_TEXTURE_GEN_T = 0x0C61 # macro
GL_TEXTURE_GEQUAL_R_SGIX = 0x819D # macro
GL_TEXTURE_GREEN_SIZE = 0x805D # macro
GL_TEXTURE_GREEN_SIZE_EXT = 0x805D # macro
GL_TEXTURE_GREEN_TYPE = 0x8C11 # macro
GL_TEXTURE_GREEN_TYPE_ARB = 0x8C11 # macro
GL_TEXTURE_HEIGHT = 0x1001 # macro
GL_TEXTURE_HI_SIZE_NV = 0x871B # macro
GL_TEXTURE_IMAGE_FORMAT = 0x828F # macro
GL_TEXTURE_IMAGE_TYPE = 0x8290 # macro
GL_TEXTURE_IMMUTABLE_FORMAT = 0x912F # macro
GL_TEXTURE_IMMUTABLE_FORMAT_EXT = 0x912F # macro
GL_TEXTURE_IMMUTABLE_LEVELS = 0x82DF # macro
GL_TEXTURE_INDEX_SIZE_EXT = 0x80ED # macro
GL_TEXTURE_INTENSITY_SIZE = 0x8061 # macro
GL_TEXTURE_INTENSITY_SIZE_EXT = 0x8061 # macro
GL_TEXTURE_INTENSITY_TYPE = 0x8C15 # macro
GL_TEXTURE_INTENSITY_TYPE_ARB = 0x8C15 # macro
GL_TEXTURE_INTERNAL_FORMAT = 0x1003 # macro
GL_TEXTURE_LEQUAL_R_SGIX = 0x819C # macro
GL_TEXTURE_LIGHTING_MODE_HP = 0x8167 # macro
GL_TEXTURE_LIGHT_EXT = 0x8350 # macro
GL_TEXTURE_LOD_BIAS = 0x8501 # macro
GL_TEXTURE_LOD_BIAS_EXT = 0x8501 # macro
GL_TEXTURE_LOD_BIAS_R_SGIX = 0x8190 # macro
GL_TEXTURE_LOD_BIAS_S_SGIX = 0x818E # macro
GL_TEXTURE_LOD_BIAS_T_SGIX = 0x818F # macro
GL_TEXTURE_LO_SIZE_NV = 0x871C # macro
GL_TEXTURE_LUMINANCE_SIZE = 0x8060 # macro
GL_TEXTURE_LUMINANCE_SIZE_EXT = 0x8060 # macro
GL_TEXTURE_LUMINANCE_TYPE = 0x8C14 # macro
GL_TEXTURE_LUMINANCE_TYPE_ARB = 0x8C14 # macro
GL_TEXTURE_MAG_FILTER = 0x2800 # macro
GL_TEXTURE_MAG_SIZE_NV = 0x871F # macro
GL_TEXTURE_MATERIAL_FACE_EXT = 0x8351 # macro
GL_TEXTURE_MATERIAL_PARAMETER_EXT = 0x8352 # macro
GL_TEXTURE_MATRIX = 0x0BA8 # macro
GL_TEXTURE_MAX_ANISOTROPY = 0x84FE # macro
GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE # macro
GL_TEXTURE_MAX_CLAMP_R_SGIX = 0x836B # macro
GL_TEXTURE_MAX_CLAMP_S_SGIX = 0x8369 # macro
GL_TEXTURE_MAX_CLAMP_T_SGIX = 0x836A # macro
GL_TEXTURE_MAX_LEVEL = 0x813D # macro
GL_TEXTURE_MAX_LEVEL_SGIS = 0x813D # macro
GL_TEXTURE_MAX_LOD = 0x813B # macro
GL_TEXTURE_MAX_LOD_SGIS = 0x813B # macro
GL_TEXTURE_MEMORY_LAYOUT_INTEL = 0x83FF # macro
GL_TEXTURE_MIN_FILTER = 0x2801 # macro
GL_TEXTURE_MIN_LOD = 0x813A # macro
GL_TEXTURE_MIN_LOD_SGIS = 0x813A # macro
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = 0x812E # macro
GL_TEXTURE_NORMAL_EXT = 0x85AF # macro
GL_TEXTURE_POST_SPECULAR_HP = 0x8168 # macro
GL_TEXTURE_PRE_SPECULAR_HP = 0x8169 # macro
GL_TEXTURE_PRIORITY = 0x8066 # macro
GL_TEXTURE_PRIORITY_EXT = 0x8066 # macro
GL_TEXTURE_RANGE_LENGTH_APPLE = 0x85B7 # macro
GL_TEXTURE_RANGE_POINTER_APPLE = 0x85B8 # macro
GL_TEXTURE_RECTANGLE = 0x84F5 # macro
GL_TEXTURE_RECTANGLE_ARB = 0x84F5 # macro
GL_TEXTURE_RECTANGLE_NV = 0x84F5 # macro
GL_TEXTURE_REDUCTION_MODE_ARB = 0x9366 # macro
GL_TEXTURE_REDUCTION_MODE_EXT = 0x9366 # macro
GL_TEXTURE_RED_SIZE = 0x805C # macro
GL_TEXTURE_RED_SIZE_EXT = 0x805C # macro
GL_TEXTURE_RED_TYPE = 0x8C10 # macro
GL_TEXTURE_RED_TYPE_ARB = 0x8C10 # macro
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = 0x8E54 # macro
GL_TEXTURE_RENDERBUFFER_NV = 0x8E55 # macro
GL_TEXTURE_RESIDENT = 0x8067 # macro
GL_TEXTURE_RESIDENT_EXT = 0x8067 # macro
GL_TEXTURE_SAMPLES = 0x9106 # macro
GL_TEXTURE_SHADER_NV = 0x86DE # macro
GL_TEXTURE_SHADOW = 0x82A1 # macro
GL_TEXTURE_SHARED_SIZE = 0x8C3F # macro
GL_TEXTURE_SHARED_SIZE_EXT = 0x8C3F # macro
GL_TEXTURE_SPARSE_ARB = 0x91A6 # macro
GL_TEXTURE_SRGB_DECODE_EXT = 0x8A48 # macro
GL_TEXTURE_STACK_DEPTH = 0x0BA5 # macro
GL_TEXTURE_STENCIL_SIZE = 0x88F1 # macro
GL_TEXTURE_STENCIL_SIZE_EXT = 0x88F1 # macro
GL_TEXTURE_STORAGE_HINT_APPLE = 0x85BC # macro
GL_TEXTURE_STORAGE_SPARSE_BIT_AMD = 0x00000001 # macro
GL_TEXTURE_SWIZZLE_A = 0x8E45 # macro
GL_TEXTURE_SWIZZLE_A_EXT = 0x8E45 # macro
GL_TEXTURE_SWIZZLE_B = 0x8E44 # macro
GL_TEXTURE_SWIZZLE_B_EXT = 0x8E44 # macro
GL_TEXTURE_SWIZZLE_G = 0x8E43 # macro
GL_TEXTURE_SWIZZLE_G_EXT = 0x8E43 # macro
GL_TEXTURE_SWIZZLE_R = 0x8E42 # macro
GL_TEXTURE_SWIZZLE_RGBA = 0x8E46 # macro
GL_TEXTURE_SWIZZLE_RGBA_EXT = 0x8E46 # macro
GL_TEXTURE_SWIZZLE_R_EXT = 0x8E42 # macro
GL_TEXTURE_TARGET = 0x1006 # macro
GL_TEXTURE_TILING_EXT = 0x9580 # macro
GL_TEXTURE_TOO_LARGE_EXT = 0x8065 # macro
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV = 0x888F # macro
GL_TEXTURE_UPDATE_BARRIER_BIT = 0x00000100 # macro
GL_TEXTURE_UPDATE_BARRIER_BIT_EXT = 0x00000100 # macro
GL_TEXTURE_VIEW = 0x82B5 # macro
GL_TEXTURE_VIEW_MIN_LAYER = 0x82DD # macro
GL_TEXTURE_VIEW_MIN_LEVEL = 0x82DB # macro
GL_TEXTURE_VIEW_NUM_LAYERS = 0x82DE # macro
GL_TEXTURE_VIEW_NUM_LEVELS = 0x82DC # macro
GL_TEXTURE_WIDTH = 0x1000 # macro
GL_TEXTURE_WRAP_Q_SGIS = 0x8137 # macro
GL_TEXTURE_WRAP_R = 0x8072 # macro
GL_TEXTURE_WRAP_R_EXT = 0x8072 # macro
GL_TEXTURE_WRAP_S = 0x2802 # macro
GL_TEXTURE_WRAP_T = 0x2803 # macro
GL_TEXT_FRAGMENT_SHADER_ATI = 0x8200 # macro
GL_TILE_RASTER_ORDER_FIXED_MESA = 0x8BB8 # macro
GL_TILE_RASTER_ORDER_INCREASING_X_MESA = 0x8BB9 # macro
GL_TILE_RASTER_ORDER_INCREASING_Y_MESA = 0x8BBA # macro
GL_TILING_TYPES_EXT = 0x9583 # macro
GL_TIMELINE_SEMAPHORE_VALUE_NV = 0x9595 # macro
GL_TIMEOUT_EXPIRED = 0x911B # macro
GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFF # macro
GL_TIMESTAMP = 0x8E28 # macro
GL_TIME_ELAPSED = 0x88BF # macro
GL_TIME_ELAPSED_EXT = 0x88BF # macro
GL_TOP_LEVEL_ARRAY_SIZE = 0x930C # macro
GL_TOP_LEVEL_ARRAY_STRIDE = 0x930D # macro
GL_TRACK_MATRIX_NV = 0x8648 # macro
GL_TRACK_MATRIX_TRANSFORM_NV = 0x8649 # macro
GL_TRANSFORM_BIT = 0x00001000 # macro
GL_TRANSFORM_FEEDBACK = 0x8E22 # macro
GL_TRANSFORM_FEEDBACK_ACTIVE = 0x8E24 # macro
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV = 0x8C7E # macro
GL_TRANSFORM_FEEDBACK_BARRIER_BIT = 0x00000800 # macro
GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = 0x00000800 # macro
GL_TRANSFORM_FEEDBACK_BINDING = 0x8E25 # macro
GL_TRANSFORM_FEEDBACK_BINDING_NV = 0x8E25 # macro
GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E # macro
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24 # macro
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = 0x8E24 # macro
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F # macro
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = 0x8C8F # macro
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = 0x8C8F # macro
GL_TRANSFORM_FEEDBACK_BUFFER_EXT = 0x8C8E # macro
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX = 0x934B # macro
GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F # macro
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = 0x8C7F # macro
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = 0x8C7F # macro
GL_TRANSFORM_FEEDBACK_BUFFER_NV = 0x8C8E # macro
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8E23 # macro
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = 0x8E23 # macro
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85 # macro
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = 0x8C85 # macro
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = 0x8C85 # macro
GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84 # macro
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = 0x8C84 # macro
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV = 0x8C84 # macro
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE = 0x934C # macro
GL_TRANSFORM_FEEDBACK_NV = 0x8E22 # macro
GL_TRANSFORM_FEEDBACK_OVERFLOW = 0x82EC # macro
GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB = 0x82EC # macro
GL_TRANSFORM_FEEDBACK_PAUSED = 0x8E23 # macro
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88 # macro
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = 0x8C88 # macro
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = 0x8C88 # macro
GL_TRANSFORM_FEEDBACK_RECORD_NV = 0x8C86 # macro
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW = 0x82ED # macro
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB = 0x82ED # macro
GL_TRANSFORM_FEEDBACK_VARYING = 0x92F4 # macro
GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83 # macro
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = 0x8C83 # macro
GL_TRANSFORM_FEEDBACK_VARYINGS_NV = 0x8C83 # macro
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76 # macro
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = 0x8C76 # macro
GL_TRANSFORM_HINT_APPLE = 0x85B1 # macro
GL_TRANSLATE_2D_NV = 0x9090 # macro
GL_TRANSLATE_3D_NV = 0x9091 # macro
GL_TRANSLATE_X_NV = 0x908E # macro
GL_TRANSLATE_Y_NV = 0x908F # macro
GL_TRANSPOSE_AFFINE_2D_NV = 0x9096 # macro
GL_TRANSPOSE_AFFINE_3D_NV = 0x9098 # macro
GL_TRANSPOSE_COLOR_MATRIX = 0x84E6 # macro
GL_TRANSPOSE_COLOR_MATRIX_ARB = 0x84E6 # macro
GL_TRANSPOSE_CURRENT_MATRIX_ARB = 0x88B7 # macro
GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3 # macro
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB = 0x84E3 # macro
GL_TRANSPOSE_NV = 0x862C # macro
GL_TRANSPOSE_PROGRAM_MATRIX_EXT = 0x8E2E # macro
GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4 # macro
GL_TRANSPOSE_PROJECTION_MATRIX_ARB = 0x84E4 # macro
GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5 # macro
GL_TRANSPOSE_TEXTURE_MATRIX_ARB = 0x84E5 # macro
GL_TRIANGLES = 0x0004 # macro
GL_TRIANGLES_ADJACENCY = 0x000C # macro
GL_TRIANGLES_ADJACENCY_ARB = 0x000C # macro
GL_TRIANGLES_ADJACENCY_EXT = 0x000C # macro
GL_TRIANGLE_FAN = 0x0006 # macro
GL_TRIANGLE_LIST_SUN = 0x81D7 # macro
GL_TRIANGLE_MESH_SUN = 0x8615 # macro
GL_TRIANGLE_STRIP = 0x0005 # macro
GL_TRIANGLE_STRIP_ADJACENCY = 0x000D # macro
GL_TRIANGLE_STRIP_ADJACENCY_ARB = 0x000D # macro
GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0x000D # macro
GL_TRIANGULAR_NV = 0x90A5 # macro
GL_TRUE = 1 # macro
GL_TYPE = 0x92FA # macro
GL_UNCORRELATED_NV = 0x9282 # macro
GL_UNDEFINED_APPLE = 0x8A1C # macro
GL_UNDEFINED_VERTEX = 0x8260 # macro
GL_UNIFORM = 0x92E1 # macro
GL_UNIFORM_ADDRESS_COMMAND_NV = 0x000A # macro
GL_UNIFORM_ARRAY_STRIDE = 0x8A3C # macro
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = 0x92DA # macro
GL_UNIFORM_BARRIER_BIT = 0x00000004 # macro
GL_UNIFORM_BARRIER_BIT_EXT = 0x00000004 # macro
GL_UNIFORM_BLOCK = 0x92E2 # macro
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42 # macro
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43 # macro
GL_UNIFORM_BLOCK_BINDING = 0x8A3F # macro
GL_UNIFORM_BLOCK_DATA_SIZE = 0x8A40 # macro
GL_UNIFORM_BLOCK_INDEX = 0x8A3A # macro
GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8A41 # macro
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = 0x90EC # macro
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46 # macro
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45 # macro
GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV = 0x959C # macro
GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV = 0x959D # macro
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0 # macro
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1 # macro
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44 # macro
GL_UNIFORM_BUFFER = 0x8A11 # macro
GL_UNIFORM_BUFFER_ADDRESS_NV = 0x936F # macro
GL_UNIFORM_BUFFER_BINDING = 0x8A28 # macro
GL_UNIFORM_BUFFER_BINDING_EXT = 0x8DEF # macro
GL_UNIFORM_BUFFER_EXT = 0x8DEE # macro
GL_UNIFORM_BUFFER_LENGTH_NV = 0x9370 # macro
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34 # macro
GL_UNIFORM_BUFFER_SIZE = 0x8A2A # macro
GL_UNIFORM_BUFFER_START = 0x8A29 # macro
GL_UNIFORM_BUFFER_UNIFIED_NV = 0x936E # macro
GL_UNIFORM_IS_ROW_MAJOR = 0x8A3E # macro
GL_UNIFORM_MATRIX_STRIDE = 0x8A3D # macro
GL_UNIFORM_NAME_LENGTH = 0x8A39 # macro
GL_UNIFORM_OFFSET = 0x8A3B # macro
GL_UNIFORM_SIZE = 0x8A38 # macro
GL_UNIFORM_TYPE = 0x8A37 # macro
GL_UNKNOWN_CONTEXT_RESET = 0x8255 # macro
GL_UNKNOWN_CONTEXT_RESET_ARB = 0x8255 # macro
GL_UNPACK_ALIGNMENT = 0x0CF5 # macro
GL_UNPACK_CLIENT_STORAGE_APPLE = 0x85B2 # macro
GL_UNPACK_CMYK_HINT_EXT = 0x800F # macro
GL_UNPACK_COMPRESSED_BLOCK_DEPTH = 0x9129 # macro
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = 0x9128 # macro
GL_UNPACK_COMPRESSED_BLOCK_SIZE = 0x912A # macro
GL_UNPACK_COMPRESSED_BLOCK_WIDTH = 0x9127 # macro
GL_UNPACK_CONSTANT_DATA_SUNX = 0x81D5 # macro
GL_UNPACK_IMAGE_DEPTH_SGIS = 0x8133 # macro
GL_UNPACK_IMAGE_HEIGHT = 0x806E # macro
GL_UNPACK_IMAGE_HEIGHT_EXT = 0x806E # macro
GL_UNPACK_LSB_FIRST = 0x0CF1 # macro
GL_UNPACK_RESAMPLE_OML = 0x8985 # macro
GL_UNPACK_RESAMPLE_SGIX = 0x842F # macro
GL_UNPACK_ROW_BYTES_APPLE = 0x8A16 # macro
GL_UNPACK_ROW_LENGTH = 0x0CF2 # macro
GL_UNPACK_SKIP_IMAGES = 0x806D # macro
GL_UNPACK_SKIP_IMAGES_EXT = 0x806D # macro
GL_UNPACK_SKIP_PIXELS = 0x0CF4 # macro
GL_UNPACK_SKIP_ROWS = 0x0CF3 # macro
GL_UNPACK_SKIP_VOLUMES_SGIS = 0x8132 # macro
GL_UNPACK_SUBSAMPLE_RATE_SGIX = 0x85A1 # macro
GL_UNPACK_SWAP_BYTES = 0x0CF0 # macro
GL_UNSIGNALED = 0x9118 # macro
GL_UNSIGNED_BYTE = 0x1401 # macro
GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362 # macro
GL_UNSIGNED_BYTE_3_3_2 = 0x8032 # macro
GL_UNSIGNED_BYTE_3_3_2_EXT = 0x8032 # macro
GL_UNSIGNED_IDENTITY_NV = 0x8536 # macro
GL_UNSIGNED_INT = 0x1405 # macro
GL_UNSIGNED_INT16_NV = 0x8FF0 # macro
GL_UNSIGNED_INT16_VEC2_NV = 0x8FF1 # macro
GL_UNSIGNED_INT16_VEC3_NV = 0x8FF2 # macro
GL_UNSIGNED_INT16_VEC4_NV = 0x8FF3 # macro
GL_UNSIGNED_INT64_AMD = 0x8BC2 # macro
GL_UNSIGNED_INT64_ARB = 0x140F # macro
GL_UNSIGNED_INT64_NV = 0x140F # macro
GL_UNSIGNED_INT64_VEC2_ARB = 0x8FF5 # macro
GL_UNSIGNED_INT64_VEC2_NV = 0x8FF5 # macro
GL_UNSIGNED_INT64_VEC3_ARB = 0x8FF6 # macro
GL_UNSIGNED_INT64_VEC3_NV = 0x8FF6 # macro
GL_UNSIGNED_INT64_VEC4_ARB = 0x8FF7 # macro
GL_UNSIGNED_INT64_VEC4_NV = 0x8FF7 # macro
GL_UNSIGNED_INT8_NV = 0x8FEC # macro
GL_UNSIGNED_INT8_VEC2_NV = 0x8FED # macro
GL_UNSIGNED_INT8_VEC3_NV = 0x8FEE # macro
GL_UNSIGNED_INT8_VEC4_NV = 0x8FEF # macro
GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B # macro
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = 0x8C3B # macro
GL_UNSIGNED_INT_10_10_10_2 = 0x8036 # macro
GL_UNSIGNED_INT_10_10_10_2_EXT = 0x8036 # macro
GL_UNSIGNED_INT_24_8 = 0x84FA # macro
GL_UNSIGNED_INT_24_8_EXT = 0x84FA # macro
GL_UNSIGNED_INT_24_8_NV = 0x84FA # macro
GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368 # macro
GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E # macro
GL_UNSIGNED_INT_5_9_9_9_REV_EXT = 0x8C3E # macro
GL_UNSIGNED_INT_8_8_8_8 = 0x8035 # macro
GL_UNSIGNED_INT_8_8_8_8_EXT = 0x8035 # macro
GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367 # macro
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV = 0x86DB # macro
GL_UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB # macro
GL_UNSIGNED_INT_IMAGE_1D = 0x9062 # macro
GL_UNSIGNED_INT_IMAGE_1D_ARRAY = 0x9068 # macro
GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = 0x9068 # macro
GL_UNSIGNED_INT_IMAGE_1D_EXT = 0x9062 # macro
GL_UNSIGNED_INT_IMAGE_2D = 0x9063 # macro
GL_UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069 # macro
GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = 0x9069 # macro
GL_UNSIGNED_INT_IMAGE_2D_EXT = 0x9063 # macro
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = 0x906B # macro
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x906C # macro
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x906C # macro
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x906B # macro
GL_UNSIGNED_INT_IMAGE_2D_RECT = 0x9065 # macro
GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT = 0x9065 # macro
GL_UNSIGNED_INT_IMAGE_3D = 0x9064 # macro
GL_UNSIGNED_INT_IMAGE_3D_EXT = 0x9064 # macro
GL_UNSIGNED_INT_IMAGE_BUFFER = 0x9067 # macro
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT = 0x9067 # macro
GL_UNSIGNED_INT_IMAGE_CUBE = 0x9066 # macro
GL_UNSIGNED_INT_IMAGE_CUBE_EXT = 0x9066 # macro
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 0x906A # macro
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x906A # macro
GL_UNSIGNED_INT_S8_S8_8_8_NV = 0x86DA # macro
GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1 # macro
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6 # macro
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6 # macro
GL_UNSIGNED_INT_SAMPLER_1D_EXT = 0x8DD1 # macro
GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2 # macro
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7 # macro
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7 # macro
GL_UNSIGNED_INT_SAMPLER_2D_EXT = 0x8DD2 # macro
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A # macro
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D # macro
GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5 # macro
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = 0x8DD5 # macro
GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3 # macro
GL_UNSIGNED_INT_SAMPLER_3D_EXT = 0x8DD3 # macro
GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8 # macro
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD = 0x9003 # macro
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x8DD8 # macro
GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4 # macro
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = 0x8DD4 # macro
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F # macro
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900F # macro
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = 0x8E58 # macro
GL_UNSIGNED_INT_VEC2 = 0x8DC6 # macro
GL_UNSIGNED_INT_VEC2_EXT = 0x8DC6 # macro
GL_UNSIGNED_INT_VEC3 = 0x8DC7 # macro
GL_UNSIGNED_INT_VEC3_EXT = 0x8DC7 # macro
GL_UNSIGNED_INT_VEC4 = 0x8DC8 # macro
GL_UNSIGNED_INT_VEC4_EXT = 0x8DC8 # macro
GL_UNSIGNED_INVERT_NV = 0x8537 # macro
GL_UNSIGNED_NORMALIZED = 0x8C17 # macro
GL_UNSIGNED_NORMALIZED_ARB = 0x8C17 # macro
GL_UNSIGNED_SHORT = 0x1403 # macro
GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366 # macro
GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033 # macro
GL_UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033 # macro
GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365 # macro
GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034 # macro
GL_UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034 # macro
GL_UNSIGNED_SHORT_5_6_5 = 0x8363 # macro
GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364 # macro
GL_UNSIGNED_SHORT_8_8_APPLE = 0x85BA # macro
GL_UNSIGNED_SHORT_8_8_MESA = 0x85BA # macro
GL_UNSIGNED_SHORT_8_8_REV_APPLE = 0x85BB # macro
GL_UNSIGNED_SHORT_8_8_REV_MESA = 0x85BB # macro
GL_UPLOAD_GPU_MASK_NVX = 0x954A # macro
GL_UPPER_LEFT = 0x8CA2 # macro
GL_USE_MISSING_GLYPH_NV = 0x90AA # macro
GL_UTF16_NV = 0x909B # macro
GL_UTF8_NV = 0x909A # macro
GL_UUID_SIZE_EXT = 16 # macro
GL_V2F = 0x2A20 # macro
GL_V3F = 0x2A21 # macro
GL_VALIDATE_STATUS = 0x8B83 # macro
GL_VARIABLE_A_NV = 0x8523 # macro
GL_VARIABLE_B_NV = 0x8524 # macro
GL_VARIABLE_C_NV = 0x8525 # macro
GL_VARIABLE_D_NV = 0x8526 # macro
GL_VARIABLE_E_NV = 0x8527 # macro
GL_VARIABLE_F_NV = 0x8528 # macro
GL_VARIABLE_G_NV = 0x8529 # macro
GL_VARIANT_ARRAY_EXT = 0x87E8 # macro
GL_VARIANT_ARRAY_POINTER_EXT = 0x87E9 # macro
GL_VARIANT_ARRAY_STRIDE_EXT = 0x87E6 # macro
GL_VARIANT_ARRAY_TYPE_EXT = 0x87E7 # macro
GL_VARIANT_DATATYPE_EXT = 0x87E5 # macro
GL_VARIANT_EXT = 0x87C1 # macro
GL_VARIANT_VALUE_EXT = 0x87E4 # macro
GL_VBO_FREE_MEMORY_ATI = 0x87FB # macro
GL_VECTOR_EXT = 0x87BF # macro
GL_VENDOR = 0x1F00 # macro
GL_VERSION = 0x1F02 # macro
GL_VERTEX23_BIT_PGI = 0x00000004 # macro
GL_VERTEX4_BIT_PGI = 0x00000008 # macro
GL_VERTEX_ARRAY = 0x8074 # macro
GL_VERTEX_ARRAY_ADDRESS_NV = 0x8F21 # macro
GL_VERTEX_ARRAY_BINDING = 0x85B5 # macro
GL_VERTEX_ARRAY_BINDING_APPLE = 0x85B5 # macro
GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896 # macro
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB = 0x8896 # macro
GL_VERTEX_ARRAY_COUNT_EXT = 0x807D # macro
GL_VERTEX_ARRAY_EXT = 0x8074 # macro
GL_VERTEX_ARRAY_LENGTH_NV = 0x8F2B # macro
GL_VERTEX_ARRAY_LIST_IBM = 103070 # macro
GL_VERTEX_ARRAY_LIST_STRIDE_IBM = 103080 # macro
GL_VERTEX_ARRAY_OBJECT_AMD = 0x9154 # macro
GL_VERTEX_ARRAY_OBJECT_EXT = 0x9154 # macro
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F5 # macro
GL_VERTEX_ARRAY_POINTER = 0x808E # macro
GL_VERTEX_ARRAY_POINTER_EXT = 0x808E # macro
GL_VERTEX_ARRAY_RANGE_APPLE = 0x851D # macro
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE = 0x851E # macro
GL_VERTEX_ARRAY_RANGE_LENGTH_NV = 0x851E # macro
GL_VERTEX_ARRAY_RANGE_NV = 0x851D # macro
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE = 0x8521 # macro
GL_VERTEX_ARRAY_RANGE_POINTER_NV = 0x8521 # macro
GL_VERTEX_ARRAY_RANGE_VALID_NV = 0x851F # macro
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = 0x8533 # macro
GL_VERTEX_ARRAY_SIZE = 0x807A # macro
GL_VERTEX_ARRAY_SIZE_EXT = 0x807A # macro
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = 0x851F # macro
GL_VERTEX_ARRAY_STRIDE = 0x807C # macro
GL_VERTEX_ARRAY_STRIDE_EXT = 0x807C # macro
GL_VERTEX_ARRAY_TYPE = 0x807B # macro
GL_VERTEX_ARRAY_TYPE_EXT = 0x807B # macro
GL_VERTEX_ATTRIB_ARRAY0_NV = 0x8650 # macro
GL_VERTEX_ATTRIB_ARRAY10_NV = 0x865A # macro
GL_VERTEX_ATTRIB_ARRAY11_NV = 0x865B # macro
GL_VERTEX_ATTRIB_ARRAY12_NV = 0x865C # macro
GL_VERTEX_ATTRIB_ARRAY13_NV = 0x865D # macro
GL_VERTEX_ATTRIB_ARRAY14_NV = 0x865E # macro
GL_VERTEX_ATTRIB_ARRAY15_NV = 0x865F # macro
GL_VERTEX_ATTRIB_ARRAY1_NV = 0x8651 # macro
GL_VERTEX_ATTRIB_ARRAY2_NV = 0x8652 # macro
GL_VERTEX_ATTRIB_ARRAY3_NV = 0x8653 # macro
GL_VERTEX_ATTRIB_ARRAY4_NV = 0x8654 # macro
GL_VERTEX_ATTRIB_ARRAY5_NV = 0x8655 # macro
GL_VERTEX_ATTRIB_ARRAY6_NV = 0x8656 # macro
GL_VERTEX_ATTRIB_ARRAY7_NV = 0x8657 # macro
GL_VERTEX_ATTRIB_ARRAY8_NV = 0x8658 # macro
GL_VERTEX_ATTRIB_ARRAY9_NV = 0x8659 # macro
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV = 0x8F20 # macro
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x00000001 # macro
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = 0x00000001 # macro
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F # macro
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = 0x889F # macro
GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE # macro
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = 0x88FE # macro
GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622 # macro
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = 0x8622 # macro
GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD # macro
GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = 0x88FD # macro
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV = 0x88FD # macro
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV = 0x8F2A # macro
GL_VERTEX_ATTRIB_ARRAY_LONG = 0x874E # macro
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A # macro
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = 0x886A # macro
GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645 # macro
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB = 0x8645 # macro
GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623 # macro
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB = 0x8623 # macro
GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624 # macro
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = 0x8624 # macro
GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625 # macro
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB = 0x8625 # macro
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV = 0x8F1E # macro
GL_VERTEX_ATTRIB_BINDING = 0x82D4 # macro
GL_VERTEX_ATTRIB_MAP1_APPLE = 0x8A00 # macro
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE = 0x8A03 # macro
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = 0x8A05 # macro
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE = 0x8A04 # macro
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE = 0x8A02 # macro
GL_VERTEX_ATTRIB_MAP2_APPLE = 0x8A01 # macro
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE = 0x8A07 # macro
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = 0x8A09 # macro
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE = 0x8A08 # macro
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE = 0x8A06 # macro
GL_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D5 # macro
GL_VERTEX_BINDING_BUFFER = 0x8F4F # macro
GL_VERTEX_BINDING_DIVISOR = 0x82D6 # macro
GL_VERTEX_BINDING_OFFSET = 0x82D7 # macro
GL_VERTEX_BINDING_STRIDE = 0x82D8 # macro
GL_VERTEX_BLEND_ARB = 0x86A7 # macro
GL_VERTEX_CONSISTENT_HINT_PGI = 0x1A22B # macro
GL_VERTEX_DATA_HINT_PGI = 0x1A22A # macro
GL_VERTEX_ELEMENT_SWIZZLE_AMD = 0x91A4 # macro
GL_VERTEX_ID_NV = 0x8C7B # macro
GL_VERTEX_ID_SWIZZLE_AMD = 0x91A5 # macro
GL_VERTEX_PRECLIP_HINT_SGIX = 0x83EF # macro
GL_VERTEX_PRECLIP_SGIX = 0x83EE # macro
GL_VERTEX_PROGRAM_ARB = 0x8620 # macro
GL_VERTEX_PROGRAM_BINDING_NV = 0x864A # macro
GL_VERTEX_PROGRAM_NV = 0x8620 # macro
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA2 # macro
GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642 # macro
GL_VERTEX_PROGRAM_POINT_SIZE_ARB = 0x8642 # macro
GL_VERTEX_PROGRAM_POINT_SIZE_NV = 0x8642 # macro
GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643 # macro
GL_VERTEX_PROGRAM_TWO_SIDE_ARB = 0x8643 # macro
GL_VERTEX_PROGRAM_TWO_SIDE_NV = 0x8643 # macro
GL_VERTEX_SHADER = 0x8B31 # macro
GL_VERTEX_SHADER_ARB = 0x8B31 # macro
GL_VERTEX_SHADER_BINDING_EXT = 0x8781 # macro
GL_VERTEX_SHADER_BIT = 0x00000001 # macro
GL_VERTEX_SHADER_EXT = 0x8780 # macro
GL_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF # macro
GL_VERTEX_SHADER_INVARIANTS_EXT = 0x87D1 # macro
GL_VERTEX_SHADER_INVOCATIONS = 0x82F0 # macro
GL_VERTEX_SHADER_INVOCATIONS_ARB = 0x82F0 # macro
GL_VERTEX_SHADER_LOCALS_EXT = 0x87D3 # macro
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2 # macro
GL_VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4 # macro
GL_VERTEX_SHADER_VARIANTS_EXT = 0x87D0 # macro
GL_VERTEX_SOURCE_ATI = 0x8774 # macro
GL_VERTEX_STATE_PROGRAM_NV = 0x8621 # macro
GL_VERTEX_STREAM0_ATI = 0x876C # macro
GL_VERTEX_STREAM1_ATI = 0x876D # macro
GL_VERTEX_STREAM2_ATI = 0x876E # macro
GL_VERTEX_STREAM3_ATI = 0x876F # macro
GL_VERTEX_STREAM4_ATI = 0x8770 # macro
GL_VERTEX_STREAM5_ATI = 0x8771 # macro
GL_VERTEX_STREAM6_ATI = 0x8772 # macro
GL_VERTEX_STREAM7_ATI = 0x8773 # macro
GL_VERTEX_SUBROUTINE = 0x92E8 # macro
GL_VERTEX_SUBROUTINE_UNIFORM = 0x92EE # macro
GL_VERTEX_TEXTURE = 0x829B # macro
GL_VERTEX_WEIGHTING_EXT = 0x8509 # macro
GL_VERTEX_WEIGHT_ARRAY_EXT = 0x850C # macro
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = 0x8510 # macro
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = 0x850D # macro
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = 0x850F # macro
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = 0x850E # macro
GL_VERTICAL_LINE_TO_NV = 0x08 # macro
GL_VERTICES_SUBMITTED = 0x82EE # macro
GL_VERTICES_SUBMITTED_ARB = 0x82EE # macro
GL_VIBRANCE_BIAS_NV = 0x8719 # macro
GL_VIBRANCE_SCALE_NV = 0x8713 # macro
GL_VIDEO_BUFFER_BINDING_NV = 0x9021 # macro
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV = 0x902D # macro
GL_VIDEO_BUFFER_NV = 0x9020 # macro
GL_VIDEO_BUFFER_PITCH_NV = 0x9028 # macro
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV = 0x903B # macro
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV = 0x903A # macro
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV = 0x9039 # macro
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV = 0x9038 # macro
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV = 0x903C # macro
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV = 0x9026 # macro
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV = 0x9029 # macro
GL_VIDEO_COLOR_CONVERSION_MAX_NV = 0x902A # macro
GL_VIDEO_COLOR_CONVERSION_MIN_NV = 0x902B # macro
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV = 0x902C # macro
GL_VIEWPORT = 0x0BA2 # macro
GL_VIEWPORT_BIT = 0x00000800 # macro
GL_VIEWPORT_BOUNDS_RANGE = 0x825D # macro
GL_VIEWPORT_COMMAND_NV = 0x0010 # macro
GL_VIEWPORT_INDEX_PROVOKING_VERTEX = 0x825F # macro
GL_VIEWPORT_POSITION_W_SCALE_NV = 0x937C # macro
GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV = 0x937D # macro
GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV = 0x937E # macro
GL_VIEWPORT_SUBPIXEL_BITS = 0x825C # macro
GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV = 0x9357 # macro
GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV = 0x9351 # macro
GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV = 0x9353 # macro
GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV = 0x9355 # macro
GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV = 0x9356 # macro
GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV = 0x9350 # macro
GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV = 0x9352 # macro
GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV = 0x9354 # macro
GL_VIEWPORT_SWIZZLE_W_NV = 0x935B # macro
GL_VIEWPORT_SWIZZLE_X_NV = 0x9358 # macro
GL_VIEWPORT_SWIZZLE_Y_NV = 0x9359 # macro
GL_VIEWPORT_SWIZZLE_Z_NV = 0x935A # macro
GL_VIEW_CLASS_128_BITS = 0x82C4 # macro
GL_VIEW_CLASS_16_BITS = 0x82CA # macro
GL_VIEW_CLASS_24_BITS = 0x82C9 # macro
GL_VIEW_CLASS_32_BITS = 0x82C8 # macro
GL_VIEW_CLASS_48_BITS = 0x82C7 # macro
GL_VIEW_CLASS_64_BITS = 0x82C6 # macro
GL_VIEW_CLASS_8_BITS = 0x82CB # macro
GL_VIEW_CLASS_96_BITS = 0x82C5 # macro
GL_VIEW_CLASS_ASTC_10x10_RGBA = 0x9393 # macro
GL_VIEW_CLASS_ASTC_10x5_RGBA = 0x9390 # macro
GL_VIEW_CLASS_ASTC_10x6_RGBA = 0x9391 # macro
GL_VIEW_CLASS_ASTC_10x8_RGBA = 0x9392 # macro
GL_VIEW_CLASS_ASTC_12x10_RGBA = 0x9394 # macro
GL_VIEW_CLASS_ASTC_12x12_RGBA = 0x9395 # macro
GL_VIEW_CLASS_ASTC_4x4_RGBA = 0x9388 # macro
GL_VIEW_CLASS_ASTC_5x4_RGBA = 0x9389 # macro
GL_VIEW_CLASS_ASTC_5x5_RGBA = 0x938A # macro
GL_VIEW_CLASS_ASTC_6x5_RGBA = 0x938B # macro
GL_VIEW_CLASS_ASTC_6x6_RGBA = 0x938C # macro
GL_VIEW_CLASS_ASTC_8x5_RGBA = 0x938D # macro
GL_VIEW_CLASS_ASTC_8x6_RGBA = 0x938E # macro
GL_VIEW_CLASS_ASTC_8x8_RGBA = 0x938F # macro
GL_VIEW_CLASS_BPTC_FLOAT = 0x82D3 # macro
GL_VIEW_CLASS_BPTC_UNORM = 0x82D2 # macro
GL_VIEW_CLASS_EAC_R11 = 0x9383 # macro
GL_VIEW_CLASS_EAC_RG11 = 0x9384 # macro
GL_VIEW_CLASS_ETC2_EAC_RGBA = 0x9387 # macro
GL_VIEW_CLASS_ETC2_RGB = 0x9385 # macro
GL_VIEW_CLASS_ETC2_RGBA = 0x9386 # macro
GL_VIEW_CLASS_RGTC1_RED = 0x82D0 # macro
GL_VIEW_CLASS_RGTC2_RG = 0x82D1 # macro
GL_VIEW_CLASS_S3TC_DXT1_RGB = 0x82CC # macro
GL_VIEW_CLASS_S3TC_DXT1_RGBA = 0x82CD # macro
GL_VIEW_CLASS_S3TC_DXT3_RGBA = 0x82CE # macro
GL_VIEW_CLASS_S3TC_DXT5_RGBA = 0x82CF # macro
GL_VIEW_COMPATIBILITY_CLASS = 0x82B6 # macro
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB = 0x91A7 # macro
GL_VIRTUAL_PAGE_SIZE_X_AMD = 0x9195 # macro
GL_VIRTUAL_PAGE_SIZE_X_ARB = 0x9195 # macro
GL_VIRTUAL_PAGE_SIZE_Y_AMD = 0x9196 # macro
GL_VIRTUAL_PAGE_SIZE_Y_ARB = 0x9196 # macro
GL_VIRTUAL_PAGE_SIZE_Z_AMD = 0x9197 # macro
GL_VIRTUAL_PAGE_SIZE_Z_ARB = 0x9197 # macro
GL_VIVIDLIGHT_NV = 0x92A6 # macro
GL_VOLATILE_APPLE = 0x8A1A # macro
GL_WAIT_FAILED = 0x911D # macro
GL_WARPS_PER_SM_NV = 0x933A # macro
GL_WARP_SIZE_NV = 0x9339 # macro
GL_WEIGHTED_AVERAGE_ARB = 0x9367 # macro
GL_WEIGHTED_AVERAGE_EXT = 0x9367 # macro
GL_WEIGHT_ARRAY_ARB = 0x86AD # macro
GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E # macro
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB = 0x889E # macro
GL_WEIGHT_ARRAY_POINTER_ARB = 0x86AC # macro
GL_WEIGHT_ARRAY_SIZE_ARB = 0x86AB # macro
GL_WEIGHT_ARRAY_STRIDE_ARB = 0x86AA # macro
GL_WEIGHT_ARRAY_TYPE_ARB = 0x86A9 # macro
GL_WEIGHT_SUM_UNITY_ARB = 0x86A6 # macro
GL_WIDE_LINE_HINT_PGI = 0x1A222 # macro
GL_WINDOW_RECTANGLE_EXT = 0x8F12 # macro
GL_WINDOW_RECTANGLE_MODE_EXT = 0x8F13 # macro
GL_WRAP_BORDER_SUN = 0x81D4 # macro
GL_WRITE_DISCARD_NV = 0x88BE # macro
GL_WRITE_ONLY = 0x88B9 # macro
GL_WRITE_ONLY_ARB = 0x88B9 # macro
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV = 0x887A # macro
GL_WRITE_PIXEL_DATA_RANGE_NV = 0x8878 # macro
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV = 0x887C # macro
GL_W_EXT = 0x87D8 # macro
GL_XOR = 0x1506 # macro
GL_XOR_NV = 0x1506 # macro
GL_X_EXT = 0x87D5 # macro
GL_YCBAYCR8A_4224_NV = 0x9032 # macro
GL_YCBCR_422_APPLE = 0x85B9 # macro
GL_YCBCR_MESA = 0x8757 # macro
GL_YCBYCR8_422_NV = 0x9031 # macro
GL_YCRCBA_SGIX = 0x8319 # macro
GL_YCRCB_422_SGIX = 0x81BB # macro
GL_YCRCB_444_SGIX = 0x81BC # macro
GL_YCRCB_SGIX = 0x8318 # macro
GL_Y_EXT = 0x87D6 # macro
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV = 0x9036 # macro
GL_Z4Y12Z4CB12Z4CR12_444_NV = 0x9037 # macro
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV = 0x9035 # macro
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV = 0x9034 # macro
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV = 0x9033 # macro
GL_ZERO = 0 # macro
GL_ZERO_EXT = 0x87DD # macro
GL_ZERO_TO_ONE = 0x935F # macro
GL_ZOOM_X = 0x0D16 # macro
GL_ZOOM_Y = 0x0D17 # macro
GL_Z_EXT = 0x87D7 # macro
GL_VERSION_1_0 = 1 # macro
GL_VERSION_1_1 = 1 # macro
GL_VERSION_1_2 = 1 # macro
GL_VERSION_1_3 = 1 # macro
GL_VERSION_1_4 = 1 # macro
GL_VERSION_1_5 = 1 # macro
GL_VERSION_2_0 = 1 # macro
GL_VERSION_2_1 = 1 # macro
GL_VERSION_3_0 = 1 # macro
GL_VERSION_3_1 = 1 # macro
GL_VERSION_3_2 = 1 # macro
GL_VERSION_3_3 = 1 # macro
GL_VERSION_4_0 = 1 # macro
GL_VERSION_4_1 = 1 # macro
GL_VERSION_4_2 = 1 # macro
GL_VERSION_4_3 = 1 # macro
GL_VERSION_4_4 = 1 # macro
GL_VERSION_4_5 = 1 # macro
GL_VERSION_4_6 = 1 # macro
GL_3DFX_multisample = 1 # macro
GL_3DFX_tbuffer = 1 # macro
GL_3DFX_texture_compression_FXT1 = 1 # macro
GL_AMD_blend_minmax_factor = 1 # macro
GL_AMD_conservative_depth = 1 # macro
GL_AMD_debug_output = 1 # macro
GL_AMD_depth_clamp_separate = 1 # macro
GL_AMD_draw_buffers_blend = 1 # macro
GL_AMD_framebuffer_multisample_advanced = 1 # macro
GL_AMD_framebuffer_sample_positions = 1 # macro
GL_AMD_gcn_shader = 1 # macro
GL_AMD_gpu_shader_half_float = 1 # macro
GL_AMD_gpu_shader_int16 = 1 # macro
GL_AMD_gpu_shader_int64 = 1 # macro
GL_AMD_interleaved_elements = 1 # macro
GL_AMD_multi_draw_indirect = 1 # macro
GL_AMD_name_gen_delete = 1 # macro
GL_AMD_occlusion_query_event = 1 # macro
GL_AMD_performance_monitor = 1 # macro
GL_AMD_pinned_memory = 1 # macro
GL_AMD_query_buffer_object = 1 # macro
GL_AMD_sample_positions = 1 # macro
GL_AMD_seamless_cubemap_per_texture = 1 # macro
GL_AMD_shader_atomic_counter_ops = 1 # macro
GL_AMD_shader_ballot = 1 # macro
GL_AMD_shader_explicit_vertex_parameter = 1 # macro
GL_AMD_shader_gpu_shader_half_float_fetch = 1 # macro
GL_AMD_shader_image_load_store_lod = 1 # macro
GL_AMD_shader_stencil_export = 1 # macro
GL_AMD_shader_trinary_minmax = 1 # macro
GL_AMD_sparse_texture = 1 # macro
GL_AMD_stencil_operation_extended = 1 # macro
GL_AMD_texture_gather_bias_lod = 1 # macro
GL_AMD_texture_texture4 = 1 # macro
GL_AMD_transform_feedback3_lines_triangles = 1 # macro
GL_AMD_transform_feedback4 = 1 # macro
GL_AMD_vertex_shader_layer = 1 # macro
GL_AMD_vertex_shader_tessellator = 1 # macro
GL_AMD_vertex_shader_viewport_index = 1 # macro
GL_APPLE_aux_depth_stencil = 1 # macro
GL_APPLE_client_storage = 1 # macro
GL_APPLE_element_array = 1 # macro
GL_APPLE_fence = 1 # macro
GL_APPLE_float_pixels = 1 # macro
GL_APPLE_flush_buffer_range = 1 # macro
GL_APPLE_object_purgeable = 1 # macro
GL_APPLE_rgb_422 = 1 # macro
GL_APPLE_row_bytes = 1 # macro
GL_APPLE_specular_vector = 1 # macro
GL_APPLE_texture_range = 1 # macro
GL_APPLE_transform_hint = 1 # macro
GL_APPLE_vertex_array_object = 1 # macro
GL_APPLE_vertex_array_range = 1 # macro
GL_APPLE_vertex_program_evaluators = 1 # macro
GL_APPLE_ycbcr_422 = 1 # macro
GL_ARB_ES2_compatibility = 1 # macro
GL_ARB_ES3_1_compatibility = 1 # macro
GL_ARB_ES3_2_compatibility = 1 # macro
GL_ARB_ES3_compatibility = 1 # macro
GL_ARB_arrays_of_arrays = 1 # macro
GL_ARB_base_instance = 1 # macro
GL_ARB_bindless_texture = 1 # macro
GL_ARB_blend_func_extended = 1 # macro
GL_ARB_buffer_storage = 1 # macro
GL_ARB_cl_event = 1 # macro
GL_ARB_clear_buffer_object = 1 # macro
GL_ARB_clear_texture = 1 # macro
GL_ARB_clip_control = 1 # macro
GL_ARB_color_buffer_float = 1 # macro
GL_ARB_compatibility = 1 # macro
GL_ARB_compressed_texture_pixel_storage = 1 # macro
GL_ARB_compute_shader = 1 # macro
GL_ARB_compute_variable_group_size = 1 # macro
GL_ARB_conditional_render_inverted = 1 # macro
GL_ARB_conservative_depth = 1 # macro
GL_ARB_copy_buffer = 1 # macro
GL_ARB_copy_image = 1 # macro
GL_ARB_cull_distance = 1 # macro
GL_ARB_debug_output = 1 # macro
GL_ARB_depth_buffer_float = 1 # macro
GL_ARB_depth_clamp = 1 # macro
GL_ARB_depth_texture = 1 # macro
GL_ARB_derivative_control = 1 # macro
GL_ARB_direct_state_access = 1 # macro
GL_ARB_draw_buffers = 1 # macro
GL_ARB_draw_buffers_blend = 1 # macro
GL_ARB_draw_elements_base_vertex = 1 # macro
GL_ARB_draw_indirect = 1 # macro
GL_ARB_draw_instanced = 1 # macro
GL_ARB_enhanced_layouts = 1 # macro
GL_ARB_explicit_attrib_location = 1 # macro
GL_ARB_explicit_uniform_location = 1 # macro
GL_ARB_fragment_coord_conventions = 1 # macro
GL_ARB_fragment_layer_viewport = 1 # macro
GL_ARB_fragment_program = 1 # macro
GL_ARB_fragment_program_shadow = 1 # macro
GL_ARB_fragment_shader = 1 # macro
GL_ARB_fragment_shader_interlock = 1 # macro
GL_ARB_framebuffer_no_attachments = 1 # macro
GL_ARB_framebuffer_object = 1 # macro
GL_ARB_framebuffer_sRGB = 1 # macro
GL_ARB_geometry_shader4 = 1 # macro
GL_ARB_get_program_binary = 1 # macro
GL_ARB_get_texture_sub_image = 1 # macro
GL_ARB_gl_spirv = 1 # macro
GL_ARB_gpu_shader5 = 1 # macro
GL_ARB_gpu_shader_fp64 = 1 # macro
GL_ARB_gpu_shader_int64 = 1 # macro
GL_ARB_half_float_pixel = 1 # macro
GL_ARB_half_float_vertex = 1 # macro
GL_ARB_imaging = 1 # macro
GL_ARB_indirect_parameters = 1 # macro
GL_ARB_instanced_arrays = 1 # macro
GL_ARB_internalformat_query = 1 # macro
GL_ARB_internalformat_query2 = 1 # macro
GL_ARB_invalidate_subdata = 1 # macro
GL_ARB_map_buffer_alignment = 1 # macro
GL_ARB_map_buffer_range = 1 # macro
GL_ARB_matrix_palette = 1 # macro
GL_ARB_multi_bind = 1 # macro
GL_ARB_multi_draw_indirect = 1 # macro
GL_ARB_multisample = 1 # macro
GL_ARB_multitexture = 1 # macro
GL_ARB_occlusion_query = 1 # macro
GL_ARB_occlusion_query2 = 1 # macro
GL_ARB_parallel_shader_compile = 1 # macro
GL_ARB_pipeline_statistics_query = 1 # macro
GL_ARB_pixel_buffer_object = 1 # macro
GL_ARB_point_parameters = 1 # macro
GL_ARB_point_sprite = 1 # macro
GL_ARB_polygon_offset_clamp = 1 # macro
GL_ARB_post_depth_coverage = 1 # macro
GL_ARB_program_interface_query = 1 # macro
GL_ARB_provoking_vertex = 1 # macro
GL_ARB_query_buffer_object = 1 # macro
GL_ARB_robust_buffer_access_behavior = 1 # macro
GL_ARB_robustness = 1 # macro
GL_ARB_robustness_isolation = 1 # macro
GL_ARB_sample_locations = 1 # macro
GL_ARB_sample_shading = 1 # macro
GL_ARB_sampler_objects = 1 # macro
GL_ARB_seamless_cube_map = 1 # macro
GL_ARB_seamless_cubemap_per_texture = 1 # macro
GL_ARB_separate_shader_objects = 1 # macro
GL_ARB_shader_atomic_counter_ops = 1 # macro
GL_ARB_shader_atomic_counters = 1 # macro
GL_ARB_shader_ballot = 1 # macro
GL_ARB_shader_bit_encoding = 1 # macro
GL_ARB_shader_clock = 1 # macro
GL_ARB_shader_draw_parameters = 1 # macro
GL_ARB_shader_group_vote = 1 # macro
GL_ARB_shader_image_load_store = 1 # macro
GL_ARB_shader_image_size = 1 # macro
GL_ARB_shader_objects = 1 # macro
GL_ARB_shader_precision = 1 # macro
GL_ARB_shader_stencil_export = 1 # macro
GL_ARB_shader_storage_buffer_object = 1 # macro
GL_ARB_shader_subroutine = 1 # macro
GL_ARB_shader_texture_image_samples = 1 # macro
GL_ARB_shader_texture_lod = 1 # macro
GL_ARB_shader_viewport_layer_array = 1 # macro
GL_ARB_shading_language_100 = 1 # macro
GL_ARB_shading_language_420pack = 1 # macro
GL_ARB_shading_language_include = 1 # macro
GL_ARB_shading_language_packing = 1 # macro
GL_ARB_shadow = 1 # macro
GL_ARB_shadow_ambient = 1 # macro
GL_ARB_sparse_buffer = 1 # macro
GL_ARB_sparse_texture = 1 # macro
GL_ARB_sparse_texture2 = 1 # macro
GL_ARB_sparse_texture_clamp = 1 # macro
GL_ARB_spirv_extensions = 1 # macro
GL_ARB_stencil_texturing = 1 # macro
GL_ARB_sync = 1 # macro
GL_ARB_tessellation_shader = 1 # macro
GL_ARB_texture_barrier = 1 # macro
GL_ARB_texture_border_clamp = 1 # macro
GL_ARB_texture_buffer_object = 1 # macro
GL_ARB_texture_buffer_object_rgb32 = 1 # macro
GL_ARB_texture_buffer_range = 1 # macro
GL_ARB_texture_compression = 1 # macro
GL_ARB_texture_compression_bptc = 1 # macro
GL_ARB_texture_compression_rgtc = 1 # macro
GL_ARB_texture_cube_map = 1 # macro
GL_ARB_texture_cube_map_array = 1 # macro
GL_ARB_texture_env_add = 1 # macro
GL_ARB_texture_env_combine = 1 # macro
GL_ARB_texture_env_crossbar = 1 # macro
GL_ARB_texture_env_dot3 = 1 # macro
GL_ARB_texture_filter_anisotropic = 1 # macro
GL_ARB_texture_filter_minmax = 1 # macro
GL_ARB_texture_float = 1 # macro
GL_ARB_texture_gather = 1 # macro
GL_ARB_texture_mirror_clamp_to_edge = 1 # macro
GL_ARB_texture_mirrored_repeat = 1 # macro
GL_ARB_texture_multisample = 1 # macro
GL_ARB_texture_non_power_of_two = 1 # macro
GL_ARB_texture_query_levels = 1 # macro
GL_ARB_texture_query_lod = 1 # macro
GL_ARB_texture_rectangle = 1 # macro
GL_ARB_texture_rg = 1 # macro
GL_ARB_texture_rgb10_a2ui = 1 # macro
GL_ARB_texture_stencil8 = 1 # macro
GL_ARB_texture_storage = 1 # macro
GL_ARB_texture_storage_multisample = 1 # macro
GL_ARB_texture_swizzle = 1 # macro
GL_ARB_texture_view = 1 # macro
GL_ARB_timer_query = 1 # macro
GL_ARB_transform_feedback2 = 1 # macro
GL_ARB_transform_feedback3 = 1 # macro
GL_ARB_transform_feedback_instanced = 1 # macro
GL_ARB_transform_feedback_overflow_query = 1 # macro
GL_ARB_transpose_matrix = 1 # macro
GL_ARB_uniform_buffer_object = 1 # macro
GL_ARB_vertex_array_bgra = 1 # macro
GL_ARB_vertex_array_object = 1 # macro
GL_ARB_vertex_attrib_64bit = 1 # macro
GL_ARB_vertex_attrib_binding = 1 # macro
GL_ARB_vertex_blend = 1 # macro
GL_ARB_vertex_buffer_object = 1 # macro
GL_ARB_vertex_program = 1 # macro
GL_ARB_vertex_shader = 1 # macro
GL_ARB_vertex_type_10f_11f_11f_rev = 1 # macro
GL_ARB_vertex_type_2_10_10_10_rev = 1 # macro
GL_ARB_viewport_array = 1 # macro
GL_ARB_window_pos = 1 # macro
GL_ATI_draw_buffers = 1 # macro
GL_ATI_element_array = 1 # macro
GL_ATI_envmap_bumpmap = 1 # macro
GL_ATI_fragment_shader = 1 # macro
GL_ATI_map_object_buffer = 1 # macro
GL_ATI_meminfo = 1 # macro
GL_ATI_pixel_format_float = 1 # macro
GL_ATI_pn_triangles = 1 # macro
GL_ATI_separate_stencil = 1 # macro
GL_ATI_text_fragment_shader = 1 # macro
GL_ATI_texture_env_combine3 = 1 # macro
GL_ATI_texture_float = 1 # macro
GL_ATI_texture_mirror_once = 1 # macro
GL_ATI_vertex_array_object = 1 # macro
GL_ATI_vertex_attrib_array_object = 1 # macro
GL_ATI_vertex_streams = 1 # macro
GL_EXT_422_pixels = 1 # macro
GL_EXT_EGL_image_storage = 1 # macro
GL_EXT_EGL_sync = 1 # macro
GL_EXT_abgr = 1 # macro
GL_EXT_bgra = 1 # macro
GL_EXT_bindable_uniform = 1 # macro
GL_EXT_blend_color = 1 # macro
GL_EXT_blend_equation_separate = 1 # macro
GL_EXT_blend_func_separate = 1 # macro
GL_EXT_blend_logic_op = 1 # macro
GL_EXT_blend_minmax = 1 # macro
GL_EXT_blend_subtract = 1 # macro
GL_EXT_clip_volume_hint = 1 # macro
GL_EXT_cmyka = 1 # macro
GL_EXT_color_subtable = 1 # macro
GL_EXT_compiled_vertex_array = 1 # macro
GL_EXT_convolution = 1 # macro
GL_EXT_coordinate_frame = 1 # macro
GL_EXT_copy_texture = 1 # macro
GL_EXT_cull_vertex = 1 # macro
GL_EXT_debug_label = 1 # macro
GL_EXT_debug_marker = 1 # macro
GL_EXT_depth_bounds_test = 1 # macro
GL_EXT_direct_state_access = 1 # macro
GL_EXT_draw_buffers2 = 1 # macro
GL_EXT_draw_instanced = 1 # macro
GL_EXT_draw_range_elements = 1 # macro
GL_EXT_external_buffer = 1 # macro
GL_EXT_fog_coord = 1 # macro
GL_EXT_framebuffer_blit = 1 # macro
GL_EXT_framebuffer_blit_layers = 1 # macro
GL_EXT_framebuffer_multisample = 1 # macro
GL_EXT_framebuffer_multisample_blit_scaled = 1 # macro
GL_EXT_framebuffer_object = 1 # macro
GL_EXT_framebuffer_sRGB = 1 # macro
GL_EXT_geometry_shader4 = 1 # macro
GL_EXT_gpu_program_parameters = 1 # macro
GL_EXT_gpu_shader4 = 1 # macro
GL_EXT_histogram = 1 # macro
GL_EXT_index_array_formats = 1 # macro
GL_EXT_index_func = 1 # macro
GL_EXT_index_material = 1 # macro
GL_EXT_index_texture = 1 # macro
GL_EXT_light_texture = 1 # macro
GL_EXT_memory_object = 1 # macro
GL_EXT_memory_object_fd = 1 # macro
GL_EXT_memory_object_win32 = 1 # macro
GL_EXT_misc_attribute = 1 # macro
GL_EXT_multi_draw_arrays = 1 # macro
GL_EXT_multisample = 1 # macro
GL_EXT_multiview_tessellation_geometry_shader = 1 # macro
GL_EXT_multiview_texture_multisample = 1 # macro
GL_EXT_multiview_timer_query = 1 # macro
GL_EXT_packed_depth_stencil = 1 # macro
GL_EXT_packed_float = 1 # macro
GL_EXT_packed_pixels = 1 # macro
GL_EXT_paletted_texture = 1 # macro
GL_EXT_pixel_buffer_object = 1 # macro
GL_EXT_pixel_transform = 1 # macro
GL_EXT_pixel_transform_color_table = 1 # macro
GL_EXT_point_parameters = 1 # macro
GL_EXT_polygon_offset = 1 # macro
GL_EXT_polygon_offset_clamp = 1 # macro
GL_EXT_post_depth_coverage = 1 # macro
GL_EXT_provoking_vertex = 1 # macro
GL_EXT_raster_multisample = 1 # macro
GL_EXT_rescale_normal = 1 # macro
GL_EXT_secondary_color = 1 # macro
GL_EXT_semaphore = 1 # macro
GL_EXT_semaphore_fd = 1 # macro
GL_EXT_semaphore_win32 = 1 # macro
GL_EXT_separate_shader_objects = 1 # macro
GL_EXT_separate_specular_color = 1 # macro
GL_EXT_shader_framebuffer_fetch = 1 # macro
GL_EXT_shader_framebuffer_fetch_non_coherent = 1 # macro
GL_EXT_shader_image_load_formatted = 1 # macro
GL_EXT_shader_image_load_store = 1 # macro
GL_EXT_shader_integer_mix = 1 # macro
GL_EXT_shader_samples_identical = 1 # macro
GL_EXT_shadow_funcs = 1 # macro
GL_EXT_shared_texture_palette = 1 # macro
GL_EXT_sparse_texture2 = 1 # macro
GL_EXT_stencil_clear_tag = 1 # macro
GL_EXT_stencil_two_side = 1 # macro
GL_EXT_stencil_wrap = 1 # macro
GL_EXT_subtexture = 1 # macro
GL_EXT_texture = 1 # macro
GL_EXT_texture3D = 1 # macro
GL_EXT_texture_array = 1 # macro
GL_EXT_texture_buffer_object = 1 # macro
GL_EXT_texture_compression_latc = 1 # macro
GL_EXT_texture_compression_rgtc = 1 # macro
GL_EXT_texture_compression_s3tc = 1 # macro
GL_EXT_texture_cube_map = 1 # macro
GL_EXT_texture_env_add = 1 # macro
GL_EXT_texture_env_combine = 1 # macro
GL_EXT_texture_env_dot3 = 1 # macro
GL_EXT_texture_filter_anisotropic = 1 # macro
GL_EXT_texture_filter_minmax = 1 # macro
GL_EXT_texture_integer = 1 # macro
GL_EXT_texture_lod_bias = 1 # macro
GL_EXT_texture_mirror_clamp = 1 # macro
GL_EXT_texture_object = 1 # macro
GL_EXT_texture_perturb_normal = 1 # macro
GL_EXT_texture_sRGB = 1 # macro
GL_EXT_texture_sRGB_R8 = 1 # macro
GL_EXT_texture_sRGB_RG8 = 1 # macro
GL_EXT_texture_sRGB_decode = 1 # macro
GL_EXT_texture_shadow_lod = 1 # macro
GL_EXT_texture_shared_exponent = 1 # macro
GL_EXT_texture_snorm = 1 # macro
GL_EXT_texture_storage = 1 # macro
GL_EXT_texture_swizzle = 1 # macro
GL_EXT_timer_query = 1 # macro
GL_EXT_transform_feedback = 1 # macro
GL_EXT_vertex_array = 1 # macro
GL_EXT_vertex_array_bgra = 1 # macro
GL_EXT_vertex_attrib_64bit = 1 # macro
GL_EXT_vertex_shader = 1 # macro
GL_EXT_vertex_weighting = 1 # macro
GL_EXT_win32_keyed_mutex = 1 # macro
GL_EXT_window_rectangles = 1 # macro
GL_EXT_x11_sync_object = 1 # macro
GL_GREMEDY_frame_terminator = 1 # macro
GL_GREMEDY_string_marker = 1 # macro
GL_HP_convolution_border_modes = 1 # macro
GL_HP_image_transform = 1 # macro
GL_HP_occlusion_test = 1 # macro
GL_HP_texture_lighting = 1 # macro
GL_IBM_cull_vertex = 1 # macro
GL_IBM_multimode_draw_arrays = 1 # macro
GL_IBM_rasterpos_clip = 1 # macro
GL_IBM_static_data = 1 # macro
GL_IBM_texture_mirrored_repeat = 1 # macro
GL_IBM_vertex_array_lists = 1 # macro
GL_INGR_blend_func_separate = 1 # macro
GL_INGR_color_clamp = 1 # macro
GL_INGR_interlace_read = 1 # macro
GL_INTEL_blackhole_render = 1 # macro
GL_INTEL_conservative_rasterization = 1 # macro
GL_INTEL_fragment_shader_ordering = 1 # macro
GL_INTEL_framebuffer_CMAA = 1 # macro
GL_INTEL_map_texture = 1 # macro
GL_INTEL_parallel_arrays = 1 # macro
GL_INTEL_performance_query = 1 # macro
GL_KHR_blend_equation_advanced = 1 # macro
GL_KHR_blend_equation_advanced_coherent = 1 # macro
GL_KHR_context_flush_control = 1 # macro
GL_KHR_debug = 1 # macro
GL_KHR_no_error = 1 # macro
GL_KHR_parallel_shader_compile = 1 # macro
GL_KHR_robust_buffer_access_behavior = 1 # macro
GL_KHR_robustness = 1 # macro
GL_KHR_shader_subgroup = 1 # macro
GL_KHR_texture_compression_astc_hdr = 1 # macro
GL_KHR_texture_compression_astc_ldr = 1 # macro
GL_KHR_texture_compression_astc_sliced_3d = 1 # macro
GL_MESAX_texture_stack = 1 # macro
GL_MESA_framebuffer_flip_x = 1 # macro
GL_MESA_framebuffer_flip_y = 1 # macro
GL_MESA_framebuffer_swap_xy = 1 # macro
GL_MESA_pack_invert = 1 # macro
GL_MESA_program_binary_formats = 1 # macro
GL_MESA_resize_buffers = 1 # macro
GL_MESA_shader_integer_functions = 1 # macro
GL_MESA_tile_raster_order = 1 # macro
GL_MESA_window_pos = 1 # macro
GL_MESA_ycbcr_texture = 1 # macro
GL_NVX_blend_equation_advanced_multi_draw_buffers = 1 # macro
GL_NVX_conditional_render = 1 # macro
GL_NVX_gpu_memory_info = 1 # macro
GL_NVX_gpu_multicast2 = 1 # macro
GL_NVX_linked_gpu_multicast = 1 # macro
GL_NVX_progress_fence = 1 # macro
GL_NV_alpha_to_coverage_dither_control = 1 # macro
GL_NV_bindless_multi_draw_indirect = 1 # macro
GL_NV_bindless_multi_draw_indirect_count = 1 # macro
GL_NV_bindless_texture = 1 # macro
GL_NV_blend_equation_advanced = 1 # macro
GL_NV_blend_equation_advanced_coherent = 1 # macro
GL_NV_blend_minmax_factor = 1 # macro
GL_NV_blend_square = 1 # macro
GL_NV_clip_space_w_scaling = 1 # macro
GL_NV_command_list = 1 # macro
GL_NV_compute_program5 = 1 # macro
GL_NV_compute_shader_derivatives = 1 # macro
GL_NV_conditional_render = 1 # macro
GL_NV_conservative_raster = 1 # macro
GL_NV_conservative_raster_dilate = 1 # macro
GL_NV_conservative_raster_pre_snap = 1 # macro
GL_NV_conservative_raster_pre_snap_triangles = 1 # macro
GL_NV_conservative_raster_underestimation = 1 # macro
GL_NV_copy_depth_to_color = 1 # macro
GL_NV_copy_image = 1 # macro
GL_NV_deep_texture3D = 1 # macro
GL_NV_depth_buffer_float = 1 # macro
GL_NV_depth_clamp = 1 # macro
GL_NV_draw_texture = 1 # macro
GL_NV_draw_vulkan_image = 1 # macro
GL_NV_evaluators = 1 # macro
GL_NV_explicit_multisample = 1 # macro
GL_NV_fence = 1 # macro
GL_NV_fill_rectangle = 1 # macro
GL_NV_float_buffer = 1 # macro
GL_NV_fog_distance = 1 # macro
GL_NV_fragment_coverage_to_color = 1 # macro
GL_NV_fragment_program = 1 # macro
GL_NV_fragment_program2 = 1 # macro
GL_NV_fragment_program4 = 1 # macro
GL_NV_fragment_program_option = 1 # macro
GL_NV_fragment_shader_barycentric = 1 # macro
GL_NV_fragment_shader_interlock = 1 # macro
GL_NV_framebuffer_mixed_samples = 1 # macro
GL_NV_framebuffer_multisample_coverage = 1 # macro
GL_NV_geometry_program4 = 1 # macro
GL_NV_geometry_shader4 = 1 # macro
GL_NV_geometry_shader_passthrough = 1 # macro
GL_NV_gpu_multicast = 1 # macro
GL_NV_gpu_program4 = 1 # macro
GL_NV_gpu_program5 = 1 # macro
GL_NV_gpu_program5_mem_extended = 1 # macro
GL_NV_gpu_shader5 = 1 # macro
GL_NV_half_float = 1 # macro
GL_NV_internalformat_sample_query = 1 # macro
GL_NV_light_max_exponent = 1 # macro
GL_NV_memory_attachment = 1 # macro
GL_NV_memory_object_sparse = 1 # macro
GL_NV_mesh_shader = 1 # macro
GL_NV_multisample_coverage = 1 # macro
GL_NV_multisample_filter_hint = 1 # macro
GL_NV_occlusion_query = 1 # macro
GL_NV_packed_depth_stencil = 1 # macro
GL_NV_parameter_buffer_object = 1 # macro
GL_NV_parameter_buffer_object2 = 1 # macro
GL_NV_path_rendering = 1 # macro
GL_NV_path_rendering_shared_edge = 1 # macro
GL_NV_pixel_data_range = 1 # macro
GL_NV_point_sprite = 1 # macro
GL_NV_present_video = 1 # macro
GL_NV_primitive_restart = 1 # macro
GL_NV_primitive_shading_rate = 1 # macro
GL_NV_query_resource = 1 # macro
GL_NV_query_resource_tag = 1 # macro
GL_NV_register_combiners = 1 # macro
GL_NV_register_combiners2 = 1 # macro
GL_NV_representative_fragment_test = 1 # macro
GL_NV_robustness_video_memory_purge = 1 # macro
GL_NV_sample_locations = 1 # macro
GL_NV_sample_mask_override_coverage = 1 # macro
GL_NV_scissor_exclusive = 1 # macro
GL_NV_shader_atomic_counters = 1 # macro
GL_NV_shader_atomic_float = 1 # macro
GL_NV_shader_atomic_float64 = 1 # macro
GL_NV_shader_atomic_fp16_vector = 1 # macro
GL_NV_shader_atomic_int64 = 1 # macro
GL_NV_shader_buffer_load = 1 # macro
GL_NV_shader_buffer_store = 1 # macro
GL_NV_shader_storage_buffer_object = 1 # macro
GL_NV_shader_subgroup_partitioned = 1 # macro
GL_NV_shader_texture_footprint = 1 # macro
GL_NV_shader_thread_group = 1 # macro
GL_NV_shader_thread_shuffle = 1 # macro
GL_NV_shading_rate_image = 1 # macro
GL_NV_stereo_view_rendering = 1 # macro
GL_NV_tessellation_program5 = 1 # macro
GL_NV_texgen_emboss = 1 # macro
GL_NV_texgen_reflection = 1 # macro
GL_NV_texture_barrier = 1 # macro
GL_NV_texture_compression_vtc = 1 # macro
GL_NV_texture_env_combine4 = 1 # macro
GL_NV_texture_expand_normal = 1 # macro
GL_NV_texture_multisample = 1 # macro
GL_NV_texture_rectangle = 1 # macro
GL_NV_texture_rectangle_compressed = 1 # macro
GL_NV_texture_shader = 1 # macro
GL_NV_texture_shader2 = 1 # macro
GL_NV_texture_shader3 = 1 # macro
GL_NV_timeline_semaphore = 1 # macro
GL_NV_transform_feedback = 1 # macro
GL_NV_transform_feedback2 = 1 # macro
GL_NV_uniform_buffer_unified_memory = 1 # macro
GL_NV_vdpau_interop = 1 # macro
GL_NV_vdpau_interop2 = 1 # macro
GL_NV_vertex_array_range = 1 # macro
GL_NV_vertex_array_range2 = 1 # macro
GL_NV_vertex_attrib_integer_64bit = 1 # macro
GL_NV_vertex_buffer_unified_memory = 1 # macro
GL_NV_vertex_program = 1 # macro
GL_NV_vertex_program1_1 = 1 # macro
GL_NV_vertex_program2 = 1 # macro
GL_NV_vertex_program2_option = 1 # macro
GL_NV_vertex_program3 = 1 # macro
GL_NV_vertex_program4 = 1 # macro
GL_NV_video_capture = 1 # macro
GL_NV_viewport_array2 = 1 # macro
GL_NV_viewport_swizzle = 1 # macro
GL_OES_byte_coordinates = 1 # macro
GL_OES_compressed_paletted_texture = 1 # macro
GL_OES_fixed_point = 1 # macro
GL_OES_query_matrix = 1 # macro
GL_OES_read_format = 1 # macro
GL_OES_single_precision = 1 # macro
GL_OML_interlace = 1 # macro
GL_OML_resample = 1 # macro
GL_OML_subsample = 1 # macro
GL_OVR_multiview = 1 # macro
GL_OVR_multiview2 = 1 # macro
GL_PGI_misc_hints = 1 # macro
GL_PGI_vertex_hints = 1 # macro
GL_REND_screen_coordinates = 1 # macro
GL_S3_s3tc = 1 # macro
GL_SGIS_detail_texture = 1 # macro
GL_SGIS_fog_function = 1 # macro
GL_SGIS_generate_mipmap = 1 # macro
GL_SGIS_multisample = 1 # macro
GL_SGIS_pixel_texture = 1 # macro
GL_SGIS_point_line_texgen = 1 # macro
GL_SGIS_point_parameters = 1 # macro
GL_SGIS_sharpen_texture = 1 # macro
GL_SGIS_texture4D = 1 # macro
GL_SGIS_texture_border_clamp = 1 # macro
GL_SGIS_texture_color_mask = 1 # macro
GL_SGIS_texture_edge_clamp = 1 # macro
GL_SGIS_texture_filter4 = 1 # macro
GL_SGIS_texture_lod = 1 # macro
GL_SGIS_texture_select = 1 # macro
GL_SGIX_async = 1 # macro
GL_SGIX_async_histogram = 1 # macro
GL_SGIX_async_pixel = 1 # macro
GL_SGIX_blend_alpha_minmax = 1 # macro
GL_SGIX_calligraphic_fragment = 1 # macro
GL_SGIX_clipmap = 1 # macro
GL_SGIX_convolution_accuracy = 1 # macro
GL_SGIX_depth_pass_instrument = 1 # macro
GL_SGIX_depth_texture = 1 # macro
GL_SGIX_flush_raster = 1 # macro
GL_SGIX_fog_offset = 1 # macro
GL_SGIX_fragment_lighting = 1 # macro
GL_SGIX_framezoom = 1 # macro
GL_SGIX_igloo_interface = 1 # macro
GL_SGIX_instruments = 1 # macro
GL_SGIX_interlace = 1 # macro
GL_SGIX_ir_instrument1 = 1 # macro
GL_SGIX_list_priority = 1 # macro
GL_SGIX_pixel_texture = 1 # macro
GL_SGIX_pixel_tiles = 1 # macro
GL_SGIX_polynomial_ffd = 1 # macro
GL_SGIX_reference_plane = 1 # macro
GL_SGIX_resample = 1 # macro
GL_SGIX_scalebias_hint = 1 # macro
GL_SGIX_shadow = 1 # macro
GL_SGIX_shadow_ambient = 1 # macro
GL_SGIX_sprite = 1 # macro
GL_SGIX_subsample = 1 # macro
GL_SGIX_tag_sample_buffer = 1 # macro
GL_SGIX_texture_add_env = 1 # macro
GL_SGIX_texture_coordinate_clamp = 1 # macro
GL_SGIX_texture_lod_bias = 1 # macro
GL_SGIX_texture_multi_buffer = 1 # macro
GL_SGIX_texture_scale_bias = 1 # macro
GL_SGIX_vertex_preclip = 1 # macro
GL_SGIX_ycrcb = 1 # macro
GL_SGIX_ycrcb_subsample = 1 # macro
GL_SGIX_ycrcba = 1 # macro
GL_SGI_color_matrix = 1 # macro
GL_SGI_color_table = 1 # macro
GL_SGI_texture_color_table = 1 # macro
GL_SUNX_constant_data = 1 # macro
GL_SUN_convolution_border_modes = 1 # macro
GL_SUN_global_alpha = 1 # macro
GL_SUN_mesh_array = 1 # macro
GL_SUN_slice_accum = 1 # macro
GL_SUN_triangle_list = 1 # macro
GL_SUN_vertex = 1 # macro
GL_WIN_phong_shading = 1 # macro
GL_WIN_specular_fog = 1 # macro
class struct___GLsync(Structure):
    pass

class struct__cl_context(Structure):
    pass

class struct__cl_event(Structure):
    pass

class struct_GladGLContext(Structure):
    pass

struct_GladGLContext._pack_ = 1 # source:False
struct_GladGLContext._fields_ = [
    ('userptr', ctypes.POINTER(None)),
    ('VERSION_1_0', ctypes.c_int32),
    ('VERSION_1_1', ctypes.c_int32),
    ('VERSION_1_2', ctypes.c_int32),
    ('VERSION_1_3', ctypes.c_int32),
    ('VERSION_1_4', ctypes.c_int32),
    ('VERSION_1_5', ctypes.c_int32),
    ('VERSION_2_0', ctypes.c_int32),
    ('VERSION_2_1', ctypes.c_int32),
    ('VERSION_3_0', ctypes.c_int32),
    ('VERSION_3_1', ctypes.c_int32),
    ('VERSION_3_2', ctypes.c_int32),
    ('VERSION_3_3', ctypes.c_int32),
    ('VERSION_4_0', ctypes.c_int32),
    ('VERSION_4_1', ctypes.c_int32),
    ('VERSION_4_2', ctypes.c_int32),
    ('VERSION_4_3', ctypes.c_int32),
    ('VERSION_4_4', ctypes.c_int32),
    ('VERSION_4_5', ctypes.c_int32),
    ('VERSION_4_6', ctypes.c_int32),
    ('_3DFX_multisample', ctypes.c_int32),
    ('_3DFX_tbuffer', ctypes.c_int32),
    ('_3DFX_texture_compression_FXT1', ctypes.c_int32),
    ('AMD_blend_minmax_factor', ctypes.c_int32),
    ('AMD_conservative_depth', ctypes.c_int32),
    ('AMD_debug_output', ctypes.c_int32),
    ('AMD_depth_clamp_separate', ctypes.c_int32),
    ('AMD_draw_buffers_blend', ctypes.c_int32),
    ('AMD_framebuffer_multisample_advanced', ctypes.c_int32),
    ('AMD_framebuffer_sample_positions', ctypes.c_int32),
    ('AMD_gcn_shader', ctypes.c_int32),
    ('AMD_gpu_shader_half_float', ctypes.c_int32),
    ('AMD_gpu_shader_int16', ctypes.c_int32),
    ('AMD_gpu_shader_int64', ctypes.c_int32),
    ('AMD_interleaved_elements', ctypes.c_int32),
    ('AMD_multi_draw_indirect', ctypes.c_int32),
    ('AMD_name_gen_delete', ctypes.c_int32),
    ('AMD_occlusion_query_event', ctypes.c_int32),
    ('AMD_performance_monitor', ctypes.c_int32),
    ('AMD_pinned_memory', ctypes.c_int32),
    ('AMD_query_buffer_object', ctypes.c_int32),
    ('AMD_sample_positions', ctypes.c_int32),
    ('AMD_seamless_cubemap_per_texture', ctypes.c_int32),
    ('AMD_shader_atomic_counter_ops', ctypes.c_int32),
    ('AMD_shader_ballot', ctypes.c_int32),
    ('AMD_shader_explicit_vertex_parameter', ctypes.c_int32),
    ('AMD_shader_gpu_shader_half_float_fetch', ctypes.c_int32),
    ('AMD_shader_image_load_store_lod', ctypes.c_int32),
    ('AMD_shader_stencil_export', ctypes.c_int32),
    ('AMD_shader_trinary_minmax', ctypes.c_int32),
    ('AMD_sparse_texture', ctypes.c_int32),
    ('AMD_stencil_operation_extended', ctypes.c_int32),
    ('AMD_texture_gather_bias_lod', ctypes.c_int32),
    ('AMD_texture_texture4', ctypes.c_int32),
    ('AMD_transform_feedback3_lines_triangles', ctypes.c_int32),
    ('AMD_transform_feedback4', ctypes.c_int32),
    ('AMD_vertex_shader_layer', ctypes.c_int32),
    ('AMD_vertex_shader_tessellator', ctypes.c_int32),
    ('AMD_vertex_shader_viewport_index', ctypes.c_int32),
    ('APPLE_aux_depth_stencil', ctypes.c_int32),
    ('APPLE_client_storage', ctypes.c_int32),
    ('APPLE_element_array', ctypes.c_int32),
    ('APPLE_fence', ctypes.c_int32),
    ('APPLE_float_pixels', ctypes.c_int32),
    ('APPLE_flush_buffer_range', ctypes.c_int32),
    ('APPLE_object_purgeable', ctypes.c_int32),
    ('APPLE_rgb_422', ctypes.c_int32),
    ('APPLE_row_bytes', ctypes.c_int32),
    ('APPLE_specular_vector', ctypes.c_int32),
    ('APPLE_texture_range', ctypes.c_int32),
    ('APPLE_transform_hint', ctypes.c_int32),
    ('APPLE_vertex_array_object', ctypes.c_int32),
    ('APPLE_vertex_array_range', ctypes.c_int32),
    ('APPLE_vertex_program_evaluators', ctypes.c_int32),
    ('APPLE_ycbcr_422', ctypes.c_int32),
    ('ARB_ES2_compatibility', ctypes.c_int32),
    ('ARB_ES3_1_compatibility', ctypes.c_int32),
    ('ARB_ES3_2_compatibility', ctypes.c_int32),
    ('ARB_ES3_compatibility', ctypes.c_int32),
    ('ARB_arrays_of_arrays', ctypes.c_int32),
    ('ARB_base_instance', ctypes.c_int32),
    ('ARB_bindless_texture', ctypes.c_int32),
    ('ARB_blend_func_extended', ctypes.c_int32),
    ('ARB_buffer_storage', ctypes.c_int32),
    ('ARB_cl_event', ctypes.c_int32),
    ('ARB_clear_buffer_object', ctypes.c_int32),
    ('ARB_clear_texture', ctypes.c_int32),
    ('ARB_clip_control', ctypes.c_int32),
    ('ARB_color_buffer_float', ctypes.c_int32),
    ('ARB_compatibility', ctypes.c_int32),
    ('ARB_compressed_texture_pixel_storage', ctypes.c_int32),
    ('ARB_compute_shader', ctypes.c_int32),
    ('ARB_compute_variable_group_size', ctypes.c_int32),
    ('ARB_conditional_render_inverted', ctypes.c_int32),
    ('ARB_conservative_depth', ctypes.c_int32),
    ('ARB_copy_buffer', ctypes.c_int32),
    ('ARB_copy_image', ctypes.c_int32),
    ('ARB_cull_distance', ctypes.c_int32),
    ('ARB_debug_output', ctypes.c_int32),
    ('ARB_depth_buffer_float', ctypes.c_int32),
    ('ARB_depth_clamp', ctypes.c_int32),
    ('ARB_depth_texture', ctypes.c_int32),
    ('ARB_derivative_control', ctypes.c_int32),
    ('ARB_direct_state_access', ctypes.c_int32),
    ('ARB_draw_buffers', ctypes.c_int32),
    ('ARB_draw_buffers_blend', ctypes.c_int32),
    ('ARB_draw_elements_base_vertex', ctypes.c_int32),
    ('ARB_draw_indirect', ctypes.c_int32),
    ('ARB_draw_instanced', ctypes.c_int32),
    ('ARB_enhanced_layouts', ctypes.c_int32),
    ('ARB_explicit_attrib_location', ctypes.c_int32),
    ('ARB_explicit_uniform_location', ctypes.c_int32),
    ('ARB_fragment_coord_conventions', ctypes.c_int32),
    ('ARB_fragment_layer_viewport', ctypes.c_int32),
    ('ARB_fragment_program', ctypes.c_int32),
    ('ARB_fragment_program_shadow', ctypes.c_int32),
    ('ARB_fragment_shader', ctypes.c_int32),
    ('ARB_fragment_shader_interlock', ctypes.c_int32),
    ('ARB_framebuffer_no_attachments', ctypes.c_int32),
    ('ARB_framebuffer_object', ctypes.c_int32),
    ('ARB_framebuffer_sRGB', ctypes.c_int32),
    ('ARB_geometry_shader4', ctypes.c_int32),
    ('ARB_get_program_binary', ctypes.c_int32),
    ('ARB_get_texture_sub_image', ctypes.c_int32),
    ('ARB_gl_spirv', ctypes.c_int32),
    ('ARB_gpu_shader5', ctypes.c_int32),
    ('ARB_gpu_shader_fp64', ctypes.c_int32),
    ('ARB_gpu_shader_int64', ctypes.c_int32),
    ('ARB_half_float_pixel', ctypes.c_int32),
    ('ARB_half_float_vertex', ctypes.c_int32),
    ('ARB_imaging', ctypes.c_int32),
    ('ARB_indirect_parameters', ctypes.c_int32),
    ('ARB_instanced_arrays', ctypes.c_int32),
    ('ARB_internalformat_query', ctypes.c_int32),
    ('ARB_internalformat_query2', ctypes.c_int32),
    ('ARB_invalidate_subdata', ctypes.c_int32),
    ('ARB_map_buffer_alignment', ctypes.c_int32),
    ('ARB_map_buffer_range', ctypes.c_int32),
    ('ARB_matrix_palette', ctypes.c_int32),
    ('ARB_multi_bind', ctypes.c_int32),
    ('ARB_multi_draw_indirect', ctypes.c_int32),
    ('ARB_multisample', ctypes.c_int32),
    ('ARB_multitexture', ctypes.c_int32),
    ('ARB_occlusion_query', ctypes.c_int32),
    ('ARB_occlusion_query2', ctypes.c_int32),
    ('ARB_parallel_shader_compile', ctypes.c_int32),
    ('ARB_pipeline_statistics_query', ctypes.c_int32),
    ('ARB_pixel_buffer_object', ctypes.c_int32),
    ('ARB_point_parameters', ctypes.c_int32),
    ('ARB_point_sprite', ctypes.c_int32),
    ('ARB_polygon_offset_clamp', ctypes.c_int32),
    ('ARB_post_depth_coverage', ctypes.c_int32),
    ('ARB_program_interface_query', ctypes.c_int32),
    ('ARB_provoking_vertex', ctypes.c_int32),
    ('ARB_query_buffer_object', ctypes.c_int32),
    ('ARB_robust_buffer_access_behavior', ctypes.c_int32),
    ('ARB_robustness', ctypes.c_int32),
    ('ARB_robustness_isolation', ctypes.c_int32),
    ('ARB_sample_locations', ctypes.c_int32),
    ('ARB_sample_shading', ctypes.c_int32),
    ('ARB_sampler_objects', ctypes.c_int32),
    ('ARB_seamless_cube_map', ctypes.c_int32),
    ('ARB_seamless_cubemap_per_texture', ctypes.c_int32),
    ('ARB_separate_shader_objects', ctypes.c_int32),
    ('ARB_shader_atomic_counter_ops', ctypes.c_int32),
    ('ARB_shader_atomic_counters', ctypes.c_int32),
    ('ARB_shader_ballot', ctypes.c_int32),
    ('ARB_shader_bit_encoding', ctypes.c_int32),
    ('ARB_shader_clock', ctypes.c_int32),
    ('ARB_shader_draw_parameters', ctypes.c_int32),
    ('ARB_shader_group_vote', ctypes.c_int32),
    ('ARB_shader_image_load_store', ctypes.c_int32),
    ('ARB_shader_image_size', ctypes.c_int32),
    ('ARB_shader_objects', ctypes.c_int32),
    ('ARB_shader_precision', ctypes.c_int32),
    ('ARB_shader_stencil_export', ctypes.c_int32),
    ('ARB_shader_storage_buffer_object', ctypes.c_int32),
    ('ARB_shader_subroutine', ctypes.c_int32),
    ('ARB_shader_texture_image_samples', ctypes.c_int32),
    ('ARB_shader_texture_lod', ctypes.c_int32),
    ('ARB_shader_viewport_layer_array', ctypes.c_int32),
    ('ARB_shading_language_100', ctypes.c_int32),
    ('ARB_shading_language_420pack', ctypes.c_int32),
    ('ARB_shading_language_include', ctypes.c_int32),
    ('ARB_shading_language_packing', ctypes.c_int32),
    ('ARB_shadow', ctypes.c_int32),
    ('ARB_shadow_ambient', ctypes.c_int32),
    ('ARB_sparse_buffer', ctypes.c_int32),
    ('ARB_sparse_texture', ctypes.c_int32),
    ('ARB_sparse_texture2', ctypes.c_int32),
    ('ARB_sparse_texture_clamp', ctypes.c_int32),
    ('ARB_spirv_extensions', ctypes.c_int32),
    ('ARB_stencil_texturing', ctypes.c_int32),
    ('ARB_sync', ctypes.c_int32),
    ('ARB_tessellation_shader', ctypes.c_int32),
    ('ARB_texture_barrier', ctypes.c_int32),
    ('ARB_texture_border_clamp', ctypes.c_int32),
    ('ARB_texture_buffer_object', ctypes.c_int32),
    ('ARB_texture_buffer_object_rgb32', ctypes.c_int32),
    ('ARB_texture_buffer_range', ctypes.c_int32),
    ('ARB_texture_compression', ctypes.c_int32),
    ('ARB_texture_compression_bptc', ctypes.c_int32),
    ('ARB_texture_compression_rgtc', ctypes.c_int32),
    ('ARB_texture_cube_map', ctypes.c_int32),
    ('ARB_texture_cube_map_array', ctypes.c_int32),
    ('ARB_texture_env_add', ctypes.c_int32),
    ('ARB_texture_env_combine', ctypes.c_int32),
    ('ARB_texture_env_crossbar', ctypes.c_int32),
    ('ARB_texture_env_dot3', ctypes.c_int32),
    ('ARB_texture_filter_anisotropic', ctypes.c_int32),
    ('ARB_texture_filter_minmax', ctypes.c_int32),
    ('ARB_texture_float', ctypes.c_int32),
    ('ARB_texture_gather', ctypes.c_int32),
    ('ARB_texture_mirror_clamp_to_edge', ctypes.c_int32),
    ('ARB_texture_mirrored_repeat', ctypes.c_int32),
    ('ARB_texture_multisample', ctypes.c_int32),
    ('ARB_texture_non_power_of_two', ctypes.c_int32),
    ('ARB_texture_query_levels', ctypes.c_int32),
    ('ARB_texture_query_lod', ctypes.c_int32),
    ('ARB_texture_rectangle', ctypes.c_int32),
    ('ARB_texture_rg', ctypes.c_int32),
    ('ARB_texture_rgb10_a2ui', ctypes.c_int32),
    ('ARB_texture_stencil8', ctypes.c_int32),
    ('ARB_texture_storage', ctypes.c_int32),
    ('ARB_texture_storage_multisample', ctypes.c_int32),
    ('ARB_texture_swizzle', ctypes.c_int32),
    ('ARB_texture_view', ctypes.c_int32),
    ('ARB_timer_query', ctypes.c_int32),
    ('ARB_transform_feedback2', ctypes.c_int32),
    ('ARB_transform_feedback3', ctypes.c_int32),
    ('ARB_transform_feedback_instanced', ctypes.c_int32),
    ('ARB_transform_feedback_overflow_query', ctypes.c_int32),
    ('ARB_transpose_matrix', ctypes.c_int32),
    ('ARB_uniform_buffer_object', ctypes.c_int32),
    ('ARB_vertex_array_bgra', ctypes.c_int32),
    ('ARB_vertex_array_object', ctypes.c_int32),
    ('ARB_vertex_attrib_64bit', ctypes.c_int32),
    ('ARB_vertex_attrib_binding', ctypes.c_int32),
    ('ARB_vertex_blend', ctypes.c_int32),
    ('ARB_vertex_buffer_object', ctypes.c_int32),
    ('ARB_vertex_program', ctypes.c_int32),
    ('ARB_vertex_shader', ctypes.c_int32),
    ('ARB_vertex_type_10f_11f_11f_rev', ctypes.c_int32),
    ('ARB_vertex_type_2_10_10_10_rev', ctypes.c_int32),
    ('ARB_viewport_array', ctypes.c_int32),
    ('ARB_window_pos', ctypes.c_int32),
    ('ATI_draw_buffers', ctypes.c_int32),
    ('ATI_element_array', ctypes.c_int32),
    ('ATI_envmap_bumpmap', ctypes.c_int32),
    ('ATI_fragment_shader', ctypes.c_int32),
    ('ATI_map_object_buffer', ctypes.c_int32),
    ('ATI_meminfo', ctypes.c_int32),
    ('ATI_pixel_format_float', ctypes.c_int32),
    ('ATI_pn_triangles', ctypes.c_int32),
    ('ATI_separate_stencil', ctypes.c_int32),
    ('ATI_text_fragment_shader', ctypes.c_int32),
    ('ATI_texture_env_combine3', ctypes.c_int32),
    ('ATI_texture_float', ctypes.c_int32),
    ('ATI_texture_mirror_once', ctypes.c_int32),
    ('ATI_vertex_array_object', ctypes.c_int32),
    ('ATI_vertex_attrib_array_object', ctypes.c_int32),
    ('ATI_vertex_streams', ctypes.c_int32),
    ('EXT_422_pixels', ctypes.c_int32),
    ('EXT_EGL_image_storage', ctypes.c_int32),
    ('EXT_EGL_sync', ctypes.c_int32),
    ('EXT_abgr', ctypes.c_int32),
    ('EXT_bgra', ctypes.c_int32),
    ('EXT_bindable_uniform', ctypes.c_int32),
    ('EXT_blend_color', ctypes.c_int32),
    ('EXT_blend_equation_separate', ctypes.c_int32),
    ('EXT_blend_func_separate', ctypes.c_int32),
    ('EXT_blend_logic_op', ctypes.c_int32),
    ('EXT_blend_minmax', ctypes.c_int32),
    ('EXT_blend_subtract', ctypes.c_int32),
    ('EXT_clip_volume_hint', ctypes.c_int32),
    ('EXT_cmyka', ctypes.c_int32),
    ('EXT_color_subtable', ctypes.c_int32),
    ('EXT_compiled_vertex_array', ctypes.c_int32),
    ('EXT_convolution', ctypes.c_int32),
    ('EXT_coordinate_frame', ctypes.c_int32),
    ('EXT_copy_texture', ctypes.c_int32),
    ('EXT_cull_vertex', ctypes.c_int32),
    ('EXT_debug_label', ctypes.c_int32),
    ('EXT_debug_marker', ctypes.c_int32),
    ('EXT_depth_bounds_test', ctypes.c_int32),
    ('EXT_direct_state_access', ctypes.c_int32),
    ('EXT_draw_buffers2', ctypes.c_int32),
    ('EXT_draw_instanced', ctypes.c_int32),
    ('EXT_draw_range_elements', ctypes.c_int32),
    ('EXT_external_buffer', ctypes.c_int32),
    ('EXT_fog_coord', ctypes.c_int32),
    ('EXT_framebuffer_blit', ctypes.c_int32),
    ('EXT_framebuffer_blit_layers', ctypes.c_int32),
    ('EXT_framebuffer_multisample', ctypes.c_int32),
    ('EXT_framebuffer_multisample_blit_scaled', ctypes.c_int32),
    ('EXT_framebuffer_object', ctypes.c_int32),
    ('EXT_framebuffer_sRGB', ctypes.c_int32),
    ('EXT_geometry_shader4', ctypes.c_int32),
    ('EXT_gpu_program_parameters', ctypes.c_int32),
    ('EXT_gpu_shader4', ctypes.c_int32),
    ('EXT_histogram', ctypes.c_int32),
    ('EXT_index_array_formats', ctypes.c_int32),
    ('EXT_index_func', ctypes.c_int32),
    ('EXT_index_material', ctypes.c_int32),
    ('EXT_index_texture', ctypes.c_int32),
    ('EXT_light_texture', ctypes.c_int32),
    ('EXT_memory_object', ctypes.c_int32),
    ('EXT_memory_object_fd', ctypes.c_int32),
    ('EXT_memory_object_win32', ctypes.c_int32),
    ('EXT_misc_attribute', ctypes.c_int32),
    ('EXT_multi_draw_arrays', ctypes.c_int32),
    ('EXT_multisample', ctypes.c_int32),
    ('EXT_multiview_tessellation_geometry_shader', ctypes.c_int32),
    ('EXT_multiview_texture_multisample', ctypes.c_int32),
    ('EXT_multiview_timer_query', ctypes.c_int32),
    ('EXT_packed_depth_stencil', ctypes.c_int32),
    ('EXT_packed_float', ctypes.c_int32),
    ('EXT_packed_pixels', ctypes.c_int32),
    ('EXT_paletted_texture', ctypes.c_int32),
    ('EXT_pixel_buffer_object', ctypes.c_int32),
    ('EXT_pixel_transform', ctypes.c_int32),
    ('EXT_pixel_transform_color_table', ctypes.c_int32),
    ('EXT_point_parameters', ctypes.c_int32),
    ('EXT_polygon_offset', ctypes.c_int32),
    ('EXT_polygon_offset_clamp', ctypes.c_int32),
    ('EXT_post_depth_coverage', ctypes.c_int32),
    ('EXT_provoking_vertex', ctypes.c_int32),
    ('EXT_raster_multisample', ctypes.c_int32),
    ('EXT_rescale_normal', ctypes.c_int32),
    ('EXT_secondary_color', ctypes.c_int32),
    ('EXT_semaphore', ctypes.c_int32),
    ('EXT_semaphore_fd', ctypes.c_int32),
    ('EXT_semaphore_win32', ctypes.c_int32),
    ('EXT_separate_shader_objects', ctypes.c_int32),
    ('EXT_separate_specular_color', ctypes.c_int32),
    ('EXT_shader_framebuffer_fetch', ctypes.c_int32),
    ('EXT_shader_framebuffer_fetch_non_coherent', ctypes.c_int32),
    ('EXT_shader_image_load_formatted', ctypes.c_int32),
    ('EXT_shader_image_load_store', ctypes.c_int32),
    ('EXT_shader_integer_mix', ctypes.c_int32),
    ('EXT_shader_samples_identical', ctypes.c_int32),
    ('EXT_shadow_funcs', ctypes.c_int32),
    ('EXT_shared_texture_palette', ctypes.c_int32),
    ('EXT_sparse_texture2', ctypes.c_int32),
    ('EXT_stencil_clear_tag', ctypes.c_int32),
    ('EXT_stencil_two_side', ctypes.c_int32),
    ('EXT_stencil_wrap', ctypes.c_int32),
    ('EXT_subtexture', ctypes.c_int32),
    ('EXT_texture', ctypes.c_int32),
    ('EXT_texture3D', ctypes.c_int32),
    ('EXT_texture_array', ctypes.c_int32),
    ('EXT_texture_buffer_object', ctypes.c_int32),
    ('EXT_texture_compression_latc', ctypes.c_int32),
    ('EXT_texture_compression_rgtc', ctypes.c_int32),
    ('EXT_texture_compression_s3tc', ctypes.c_int32),
    ('EXT_texture_cube_map', ctypes.c_int32),
    ('EXT_texture_env_add', ctypes.c_int32),
    ('EXT_texture_env_combine', ctypes.c_int32),
    ('EXT_texture_env_dot3', ctypes.c_int32),
    ('EXT_texture_filter_anisotropic', ctypes.c_int32),
    ('EXT_texture_filter_minmax', ctypes.c_int32),
    ('EXT_texture_integer', ctypes.c_int32),
    ('EXT_texture_lod_bias', ctypes.c_int32),
    ('EXT_texture_mirror_clamp', ctypes.c_int32),
    ('EXT_texture_object', ctypes.c_int32),
    ('EXT_texture_perturb_normal', ctypes.c_int32),
    ('EXT_texture_sRGB', ctypes.c_int32),
    ('EXT_texture_sRGB_R8', ctypes.c_int32),
    ('EXT_texture_sRGB_RG8', ctypes.c_int32),
    ('EXT_texture_sRGB_decode', ctypes.c_int32),
    ('EXT_texture_shadow_lod', ctypes.c_int32),
    ('EXT_texture_shared_exponent', ctypes.c_int32),
    ('EXT_texture_snorm', ctypes.c_int32),
    ('EXT_texture_storage', ctypes.c_int32),
    ('EXT_texture_swizzle', ctypes.c_int32),
    ('EXT_timer_query', ctypes.c_int32),
    ('EXT_transform_feedback', ctypes.c_int32),
    ('EXT_vertex_array', ctypes.c_int32),
    ('EXT_vertex_array_bgra', ctypes.c_int32),
    ('EXT_vertex_attrib_64bit', ctypes.c_int32),
    ('EXT_vertex_shader', ctypes.c_int32),
    ('EXT_vertex_weighting', ctypes.c_int32),
    ('EXT_win32_keyed_mutex', ctypes.c_int32),
    ('EXT_window_rectangles', ctypes.c_int32),
    ('EXT_x11_sync_object', ctypes.c_int32),
    ('GREMEDY_frame_terminator', ctypes.c_int32),
    ('GREMEDY_string_marker', ctypes.c_int32),
    ('HP_convolution_border_modes', ctypes.c_int32),
    ('HP_image_transform', ctypes.c_int32),
    ('HP_occlusion_test', ctypes.c_int32),
    ('HP_texture_lighting', ctypes.c_int32),
    ('IBM_cull_vertex', ctypes.c_int32),
    ('IBM_multimode_draw_arrays', ctypes.c_int32),
    ('IBM_rasterpos_clip', ctypes.c_int32),
    ('IBM_static_data', ctypes.c_int32),
    ('IBM_texture_mirrored_repeat', ctypes.c_int32),
    ('IBM_vertex_array_lists', ctypes.c_int32),
    ('INGR_blend_func_separate', ctypes.c_int32),
    ('INGR_color_clamp', ctypes.c_int32),
    ('INGR_interlace_read', ctypes.c_int32),
    ('INTEL_blackhole_render', ctypes.c_int32),
    ('INTEL_conservative_rasterization', ctypes.c_int32),
    ('INTEL_fragment_shader_ordering', ctypes.c_int32),
    ('INTEL_framebuffer_CMAA', ctypes.c_int32),
    ('INTEL_map_texture', ctypes.c_int32),
    ('INTEL_parallel_arrays', ctypes.c_int32),
    ('INTEL_performance_query', ctypes.c_int32),
    ('KHR_blend_equation_advanced', ctypes.c_int32),
    ('KHR_blend_equation_advanced_coherent', ctypes.c_int32),
    ('KHR_context_flush_control', ctypes.c_int32),
    ('KHR_debug', ctypes.c_int32),
    ('KHR_no_error', ctypes.c_int32),
    ('KHR_parallel_shader_compile', ctypes.c_int32),
    ('KHR_robust_buffer_access_behavior', ctypes.c_int32),
    ('KHR_robustness', ctypes.c_int32),
    ('KHR_shader_subgroup', ctypes.c_int32),
    ('KHR_texture_compression_astc_hdr', ctypes.c_int32),
    ('KHR_texture_compression_astc_ldr', ctypes.c_int32),
    ('KHR_texture_compression_astc_sliced_3d', ctypes.c_int32),
    ('MESAX_texture_stack', ctypes.c_int32),
    ('MESA_framebuffer_flip_x', ctypes.c_int32),
    ('MESA_framebuffer_flip_y', ctypes.c_int32),
    ('MESA_framebuffer_swap_xy', ctypes.c_int32),
    ('MESA_pack_invert', ctypes.c_int32),
    ('MESA_program_binary_formats', ctypes.c_int32),
    ('MESA_resize_buffers', ctypes.c_int32),
    ('MESA_shader_integer_functions', ctypes.c_int32),
    ('MESA_tile_raster_order', ctypes.c_int32),
    ('MESA_window_pos', ctypes.c_int32),
    ('MESA_ycbcr_texture', ctypes.c_int32),
    ('NVX_blend_equation_advanced_multi_draw_buffers', ctypes.c_int32),
    ('NVX_conditional_render', ctypes.c_int32),
    ('NVX_gpu_memory_info', ctypes.c_int32),
    ('NVX_gpu_multicast2', ctypes.c_int32),
    ('NVX_linked_gpu_multicast', ctypes.c_int32),
    ('NVX_progress_fence', ctypes.c_int32),
    ('NV_alpha_to_coverage_dither_control', ctypes.c_int32),
    ('NV_bindless_multi_draw_indirect', ctypes.c_int32),
    ('NV_bindless_multi_draw_indirect_count', ctypes.c_int32),
    ('NV_bindless_texture', ctypes.c_int32),
    ('NV_blend_equation_advanced', ctypes.c_int32),
    ('NV_blend_equation_advanced_coherent', ctypes.c_int32),
    ('NV_blend_minmax_factor', ctypes.c_int32),
    ('NV_blend_square', ctypes.c_int32),
    ('NV_clip_space_w_scaling', ctypes.c_int32),
    ('NV_command_list', ctypes.c_int32),
    ('NV_compute_program5', ctypes.c_int32),
    ('NV_compute_shader_derivatives', ctypes.c_int32),
    ('NV_conditional_render', ctypes.c_int32),
    ('NV_conservative_raster', ctypes.c_int32),
    ('NV_conservative_raster_dilate', ctypes.c_int32),
    ('NV_conservative_raster_pre_snap', ctypes.c_int32),
    ('NV_conservative_raster_pre_snap_triangles', ctypes.c_int32),
    ('NV_conservative_raster_underestimation', ctypes.c_int32),
    ('NV_copy_depth_to_color', ctypes.c_int32),
    ('NV_copy_image', ctypes.c_int32),
    ('NV_deep_texture3D', ctypes.c_int32),
    ('NV_depth_buffer_float', ctypes.c_int32),
    ('NV_depth_clamp', ctypes.c_int32),
    ('NV_draw_texture', ctypes.c_int32),
    ('NV_draw_vulkan_image', ctypes.c_int32),
    ('NV_evaluators', ctypes.c_int32),
    ('NV_explicit_multisample', ctypes.c_int32),
    ('NV_fence', ctypes.c_int32),
    ('NV_fill_rectangle', ctypes.c_int32),
    ('NV_float_buffer', ctypes.c_int32),
    ('NV_fog_distance', ctypes.c_int32),
    ('NV_fragment_coverage_to_color', ctypes.c_int32),
    ('NV_fragment_program', ctypes.c_int32),
    ('NV_fragment_program2', ctypes.c_int32),
    ('NV_fragment_program4', ctypes.c_int32),
    ('NV_fragment_program_option', ctypes.c_int32),
    ('NV_fragment_shader_barycentric', ctypes.c_int32),
    ('NV_fragment_shader_interlock', ctypes.c_int32),
    ('NV_framebuffer_mixed_samples', ctypes.c_int32),
    ('NV_framebuffer_multisample_coverage', ctypes.c_int32),
    ('NV_geometry_program4', ctypes.c_int32),
    ('NV_geometry_shader4', ctypes.c_int32),
    ('NV_geometry_shader_passthrough', ctypes.c_int32),
    ('NV_gpu_multicast', ctypes.c_int32),
    ('NV_gpu_program4', ctypes.c_int32),
    ('NV_gpu_program5', ctypes.c_int32),
    ('NV_gpu_program5_mem_extended', ctypes.c_int32),
    ('NV_gpu_shader5', ctypes.c_int32),
    ('NV_half_float', ctypes.c_int32),
    ('NV_internalformat_sample_query', ctypes.c_int32),
    ('NV_light_max_exponent', ctypes.c_int32),
    ('NV_memory_attachment', ctypes.c_int32),
    ('NV_memory_object_sparse', ctypes.c_int32),
    ('NV_mesh_shader', ctypes.c_int32),
    ('NV_multisample_coverage', ctypes.c_int32),
    ('NV_multisample_filter_hint', ctypes.c_int32),
    ('NV_occlusion_query', ctypes.c_int32),
    ('NV_packed_depth_stencil', ctypes.c_int32),
    ('NV_parameter_buffer_object', ctypes.c_int32),
    ('NV_parameter_buffer_object2', ctypes.c_int32),
    ('NV_path_rendering', ctypes.c_int32),
    ('NV_path_rendering_shared_edge', ctypes.c_int32),
    ('NV_pixel_data_range', ctypes.c_int32),
    ('NV_point_sprite', ctypes.c_int32),
    ('NV_present_video', ctypes.c_int32),
    ('NV_primitive_restart', ctypes.c_int32),
    ('NV_primitive_shading_rate', ctypes.c_int32),
    ('NV_query_resource', ctypes.c_int32),
    ('NV_query_resource_tag', ctypes.c_int32),
    ('NV_register_combiners', ctypes.c_int32),
    ('NV_register_combiners2', ctypes.c_int32),
    ('NV_representative_fragment_test', ctypes.c_int32),
    ('NV_robustness_video_memory_purge', ctypes.c_int32),
    ('NV_sample_locations', ctypes.c_int32),
    ('NV_sample_mask_override_coverage', ctypes.c_int32),
    ('NV_scissor_exclusive', ctypes.c_int32),
    ('NV_shader_atomic_counters', ctypes.c_int32),
    ('NV_shader_atomic_float', ctypes.c_int32),
    ('NV_shader_atomic_float64', ctypes.c_int32),
    ('NV_shader_atomic_fp16_vector', ctypes.c_int32),
    ('NV_shader_atomic_int64', ctypes.c_int32),
    ('NV_shader_buffer_load', ctypes.c_int32),
    ('NV_shader_buffer_store', ctypes.c_int32),
    ('NV_shader_storage_buffer_object', ctypes.c_int32),
    ('NV_shader_subgroup_partitioned', ctypes.c_int32),
    ('NV_shader_texture_footprint', ctypes.c_int32),
    ('NV_shader_thread_group', ctypes.c_int32),
    ('NV_shader_thread_shuffle', ctypes.c_int32),
    ('NV_shading_rate_image', ctypes.c_int32),
    ('NV_stereo_view_rendering', ctypes.c_int32),
    ('NV_tessellation_program5', ctypes.c_int32),
    ('NV_texgen_emboss', ctypes.c_int32),
    ('NV_texgen_reflection', ctypes.c_int32),
    ('NV_texture_barrier', ctypes.c_int32),
    ('NV_texture_compression_vtc', ctypes.c_int32),
    ('NV_texture_env_combine4', ctypes.c_int32),
    ('NV_texture_expand_normal', ctypes.c_int32),
    ('NV_texture_multisample', ctypes.c_int32),
    ('NV_texture_rectangle', ctypes.c_int32),
    ('NV_texture_rectangle_compressed', ctypes.c_int32),
    ('NV_texture_shader', ctypes.c_int32),
    ('NV_texture_shader2', ctypes.c_int32),
    ('NV_texture_shader3', ctypes.c_int32),
    ('NV_timeline_semaphore', ctypes.c_int32),
    ('NV_transform_feedback', ctypes.c_int32),
    ('NV_transform_feedback2', ctypes.c_int32),
    ('NV_uniform_buffer_unified_memory', ctypes.c_int32),
    ('NV_vdpau_interop', ctypes.c_int32),
    ('NV_vdpau_interop2', ctypes.c_int32),
    ('NV_vertex_array_range', ctypes.c_int32),
    ('NV_vertex_array_range2', ctypes.c_int32),
    ('NV_vertex_attrib_integer_64bit', ctypes.c_int32),
    ('NV_vertex_buffer_unified_memory', ctypes.c_int32),
    ('NV_vertex_program', ctypes.c_int32),
    ('NV_vertex_program1_1', ctypes.c_int32),
    ('NV_vertex_program2', ctypes.c_int32),
    ('NV_vertex_program2_option', ctypes.c_int32),
    ('NV_vertex_program3', ctypes.c_int32),
    ('NV_vertex_program4', ctypes.c_int32),
    ('NV_video_capture', ctypes.c_int32),
    ('NV_viewport_array2', ctypes.c_int32),
    ('NV_viewport_swizzle', ctypes.c_int32),
    ('OES_byte_coordinates', ctypes.c_int32),
    ('OES_compressed_paletted_texture', ctypes.c_int32),
    ('OES_fixed_point', ctypes.c_int32),
    ('OES_query_matrix', ctypes.c_int32),
    ('OES_read_format', ctypes.c_int32),
    ('OES_single_precision', ctypes.c_int32),
    ('OML_interlace', ctypes.c_int32),
    ('OML_resample', ctypes.c_int32),
    ('OML_subsample', ctypes.c_int32),
    ('OVR_multiview', ctypes.c_int32),
    ('OVR_multiview2', ctypes.c_int32),
    ('PGI_misc_hints', ctypes.c_int32),
    ('PGI_vertex_hints', ctypes.c_int32),
    ('REND_screen_coordinates', ctypes.c_int32),
    ('S3_s3tc', ctypes.c_int32),
    ('SGIS_detail_texture', ctypes.c_int32),
    ('SGIS_fog_function', ctypes.c_int32),
    ('SGIS_generate_mipmap', ctypes.c_int32),
    ('SGIS_multisample', ctypes.c_int32),
    ('SGIS_pixel_texture', ctypes.c_int32),
    ('SGIS_point_line_texgen', ctypes.c_int32),
    ('SGIS_point_parameters', ctypes.c_int32),
    ('SGIS_sharpen_texture', ctypes.c_int32),
    ('SGIS_texture4D', ctypes.c_int32),
    ('SGIS_texture_border_clamp', ctypes.c_int32),
    ('SGIS_texture_color_mask', ctypes.c_int32),
    ('SGIS_texture_edge_clamp', ctypes.c_int32),
    ('SGIS_texture_filter4', ctypes.c_int32),
    ('SGIS_texture_lod', ctypes.c_int32),
    ('SGIS_texture_select', ctypes.c_int32),
    ('SGIX_async', ctypes.c_int32),
    ('SGIX_async_histogram', ctypes.c_int32),
    ('SGIX_async_pixel', ctypes.c_int32),
    ('SGIX_blend_alpha_minmax', ctypes.c_int32),
    ('SGIX_calligraphic_fragment', ctypes.c_int32),
    ('SGIX_clipmap', ctypes.c_int32),
    ('SGIX_convolution_accuracy', ctypes.c_int32),
    ('SGIX_depth_pass_instrument', ctypes.c_int32),
    ('SGIX_depth_texture', ctypes.c_int32),
    ('SGIX_flush_raster', ctypes.c_int32),
    ('SGIX_fog_offset', ctypes.c_int32),
    ('SGIX_fragment_lighting', ctypes.c_int32),
    ('SGIX_framezoom', ctypes.c_int32),
    ('SGIX_igloo_interface', ctypes.c_int32),
    ('SGIX_instruments', ctypes.c_int32),
    ('SGIX_interlace', ctypes.c_int32),
    ('SGIX_ir_instrument1', ctypes.c_int32),
    ('SGIX_list_priority', ctypes.c_int32),
    ('SGIX_pixel_texture', ctypes.c_int32),
    ('SGIX_pixel_tiles', ctypes.c_int32),
    ('SGIX_polynomial_ffd', ctypes.c_int32),
    ('SGIX_reference_plane', ctypes.c_int32),
    ('SGIX_resample', ctypes.c_int32),
    ('SGIX_scalebias_hint', ctypes.c_int32),
    ('SGIX_shadow', ctypes.c_int32),
    ('SGIX_shadow_ambient', ctypes.c_int32),
    ('SGIX_sprite', ctypes.c_int32),
    ('SGIX_subsample', ctypes.c_int32),
    ('SGIX_tag_sample_buffer', ctypes.c_int32),
    ('SGIX_texture_add_env', ctypes.c_int32),
    ('SGIX_texture_coordinate_clamp', ctypes.c_int32),
    ('SGIX_texture_lod_bias', ctypes.c_int32),
    ('SGIX_texture_multi_buffer', ctypes.c_int32),
    ('SGIX_texture_scale_bias', ctypes.c_int32),
    ('SGIX_vertex_preclip', ctypes.c_int32),
    ('SGIX_ycrcb', ctypes.c_int32),
    ('SGIX_ycrcb_subsample', ctypes.c_int32),
    ('SGIX_ycrcba', ctypes.c_int32),
    ('SGI_color_matrix', ctypes.c_int32),
    ('SGI_color_table', ctypes.c_int32),
    ('SGI_texture_color_table', ctypes.c_int32),
    ('SUNX_constant_data', ctypes.c_int32),
    ('SUN_convolution_border_modes', ctypes.c_int32),
    ('SUN_global_alpha', ctypes.c_int32),
    ('SUN_mesh_array', ctypes.c_int32),
    ('SUN_slice_accum', ctypes.c_int32),
    ('SUN_triangle_list', ctypes.c_int32),
    ('SUN_vertex', ctypes.c_int32),
    ('WIN_phong_shading', ctypes.c_int32),
    ('WIN_specular_fog', ctypes.c_int32),
    ('PADDING_0', ctypes.c_ubyte * 4),
    ('Accum', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('AccumxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('AcquireKeyedMutexWin32EXT', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_uint32)),
    ('ActiveProgramEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ActiveShaderProgram', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('ActiveStencilFaceEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ActiveTexture', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ActiveTextureARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ActiveVaryingNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('AlphaFragmentOp1ATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('AlphaFragmentOp2ATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('AlphaFragmentOp3ATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('AlphaFunc', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('AlphaFuncxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('AlphaToCoverageDitherControlNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ApplyFramebufferAttachmentCMAAINTEL', ctypes.CFUNCTYPE(None)),
    ('ApplyTextureEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('AreProgramsResidentNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_ubyte))),
    ('AreTexturesResident', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_ubyte))),
    ('AreTexturesResidentEXT', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_ubyte))),
    ('ArrayElement', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('ArrayElementEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('ArrayObjectATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('AsyncCopyBufferSubDataNVX', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint64), ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint64))),
    ('AsyncCopyImageSubDataNVX', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint64), ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint64))),
    ('AsyncMarkerSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('AttachObjectARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('AttachShader', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('Begin', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BeginConditionalRender', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BeginConditionalRenderNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BeginConditionalRenderNVX', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BeginFragmentShaderATI', ctypes.CFUNCTYPE(None)),
    ('BeginOcclusionQueryNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BeginPerfMonitorAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BeginPerfQueryINTEL', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BeginQuery', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BeginQueryARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BeginQueryIndexed', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BeginTransformFeedback', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BeginTransformFeedbackEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BeginTransformFeedbackNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BeginVertexShaderEXT', ctypes.CFUNCTYPE(None)),
    ('BeginVideoCaptureNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BindAttribLocation', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('BindAttribLocationARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('BindBuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindBufferARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindBufferBase', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindBufferBaseEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindBufferBaseNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindBufferOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64)),
    ('BindBufferOffsetNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64)),
    ('BindBufferRange', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('BindBufferRangeEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('BindBufferRangeNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('BindBuffersBase', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('BindBuffersRange', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_int64), ctypes.POINTER(ctypes.c_int64))),
    ('BindFragDataLocation', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('BindFragDataLocationEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('BindFragDataLocationIndexed', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('BindFragmentShaderATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BindFramebuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindFramebufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindImageTexture', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_ubyte, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindImageTextureEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_ubyte, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32)),
    ('BindImageTextures', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('BindLightParameterEXT', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindMaterialParameterEXT', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindMultiTextureEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindParameterEXT', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32)),
    ('BindProgramARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindProgramNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindProgramPipeline', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BindRenderbuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindRenderbufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindSampler', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindSamplers', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('BindShadingRateImageNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BindTexGenParameterEXT', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindTexture', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindTextureEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindTextureUnit', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindTextureUnitParameterEXT', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindTextures', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('BindTransformFeedback', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindTransformFeedbackNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BindVertexArray', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BindVertexArrayAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BindVertexBuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int32)),
    ('BindVertexBuffers', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_int64), ctypes.POINTER(ctypes.c_int32))),
    ('BindVertexShaderEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BindVideoCaptureStreamBufferNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64)),
    ('BindVideoCaptureStreamTextureNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('Binormal3bEXT', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('Binormal3bvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('Binormal3dEXT', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Binormal3dvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('Binormal3fEXT', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Binormal3fvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('Binormal3iEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Binormal3ivEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('Binormal3sEXT', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('Binormal3svEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('BinormalPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('Bitmap', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.POINTER(ctypes.c_ubyte))),
    ('BitmapxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte))),
    ('BlendBarrierKHR', ctypes.CFUNCTYPE(None)),
    ('BlendBarrierNV', ctypes.CFUNCTYPE(None)),
    ('BlendColor', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('BlendColorEXT', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('BlendColorxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('BlendEquation', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BlendEquationEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('BlendEquationIndexedAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendEquationSeparate', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendEquationSeparateEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendEquationSeparateIndexedAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendEquationSeparatei', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendEquationSeparateiARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendEquationi', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendEquationiARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendFunc', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendFuncIndexedAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendFuncSeparate', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendFuncSeparateEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendFuncSeparateINGR', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendFuncSeparateIndexedAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendFuncSeparatei', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendFuncSeparateiARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendFunci', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendFunciARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlendParameteriNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('BlitFramebuffer', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlitFramebufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlitFramebufferLayerEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlitFramebufferLayersEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BlitNamedFramebuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('BufferAddressRangeNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_int64)),
    ('BufferAttachMemoryNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint64)),
    ('BufferData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.POINTER(None), ctypes.c_uint32)),
    ('BufferDataARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.POINTER(None), ctypes.c_uint32)),
    ('BufferPageCommitmentARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_ubyte)),
    ('BufferPageCommitmentMemNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_ubyte)),
    ('BufferParameteriAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('BufferStorage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.POINTER(None), ctypes.c_uint32)),
    ('BufferStorageExternalEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.POINTER(None), ctypes.c_uint32)),
    ('BufferStorageMemEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_uint32, ctypes.c_uint64)),
    ('BufferSubData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.POINTER(None))),
    ('BufferSubDataARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.POINTER(None))),
    ('CallCommandListNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('CallList', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('CallLists', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('CheckFramebufferStatus', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32)),
    ('CheckFramebufferStatusEXT', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32)),
    ('CheckNamedFramebufferStatus', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('CheckNamedFramebufferStatusEXT', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ClampColor', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('ClampColorARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('Clear', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ClearAccum', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ClearAccumxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ClearBufferData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ClearBufferSubData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ClearBufferfi', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_float, ctypes.c_int32)),
    ('ClearBufferfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ClearBufferiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ClearBufferuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ClearColor', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ClearColorIiEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ClearColorIuiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ClearColorxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ClearDepth', ctypes.CFUNCTYPE(None, ctypes.c_double)),
    ('ClearDepthdNV', ctypes.CFUNCTYPE(None, ctypes.c_double)),
    ('ClearDepthf', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('ClearDepthfOES', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('ClearDepthxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('ClearIndex', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('ClearNamedBufferData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ClearNamedBufferDataEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ClearNamedBufferSubData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ClearNamedBufferSubDataEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ClearNamedFramebufferfi', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_float, ctypes.c_int32)),
    ('ClearNamedFramebufferfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ClearNamedFramebufferiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ClearNamedFramebufferuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ClearStencil', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('ClearTexImage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ClearTexSubImage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ClientActiveTexture', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ClientActiveTextureARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ClientActiveVertexStreamATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ClientAttribDefaultEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ClientWaitSemaphoreui64NVX', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint64))),
    ('ClientWaitSync', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.POINTER(struct___GLsync), ctypes.c_uint32, ctypes.c_uint64)),
    ('ClipControl', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('ClipPlane', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('ClipPlanefOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ClipPlanexOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('Color3b', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('Color3bv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('Color3d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Color3dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('Color3f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Color3fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Color3fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('Color3fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('Color3hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('Color3hvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('Color3i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Color3iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('Color3s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('Color3sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('Color3ub', ctypes.CFUNCTYPE(None, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte)),
    ('Color3ubv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_ubyte))),
    ('Color3ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('Color3uiv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32))),
    ('Color3us', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('Color3usv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('Color3xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Color3xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('Color4b', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('Color4bv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('Color4d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Color4dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('Color4f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Color4fNormal3fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Color4fNormal3fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('Color4fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('Color4hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('Color4hvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('Color4i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Color4iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('Color4s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('Color4sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('Color4ub', ctypes.CFUNCTYPE(None, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte)),
    ('Color4ubVertex2fSUN', ctypes.CFUNCTYPE(None, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_float, ctypes.c_float)),
    ('Color4ubVertex2fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_ubyte), ctypes.POINTER(ctypes.c_float))),
    ('Color4ubVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Color4ubVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_ubyte), ctypes.POINTER(ctypes.c_float))),
    ('Color4ubv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_ubyte))),
    ('Color4ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('Color4uiv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32))),
    ('Color4us', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('Color4usv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('Color4xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Color4xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('ColorFormatNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32)),
    ('ColorFragmentOp1ATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ColorFragmentOp2ATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ColorFragmentOp3ATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ColorMask', ctypes.CFUNCTYPE(None, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte)),
    ('ColorMaskIndexedEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte)),
    ('ColorMaski', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte)),
    ('ColorMaterial', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('ColorP3ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('ColorP3uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('ColorP4ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('ColorP4uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('ColorPointer', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('ColorPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('ColorPointerListIBM', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(None)), ctypes.c_int32)),
    ('ColorPointervINTEL', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('ColorSubTable', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ColorSubTableEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ColorTable', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ColorTableEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ColorTableParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ColorTableParameterfvSGI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ColorTableParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('ColorTableParameterivSGI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('ColorTableSGI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('CombinerInputNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('CombinerOutputNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte)),
    ('CombinerParameterfNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('CombinerParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('CombinerParameteriNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('CombinerParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('CombinerStageParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('CommandListSegmentsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('CompileCommandListNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('CompileShader', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('CompileShaderARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('CompileShaderIncludeARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(ctypes.c_char)), ctypes.POINTER(ctypes.c_int32))),
    ('CompressedMultiTexImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedMultiTexImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedMultiTexImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedMultiTexSubImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedMultiTexSubImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedMultiTexSubImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTexImage1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTexImage1DARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTexImage2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTexImage2DARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTexImage3D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTexImage3DARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTexSubImage1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTexSubImage1DARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTexSubImage2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTexSubImage2DARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTexSubImage3D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTexSubImage3DARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTextureImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTextureImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTextureImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTextureSubImage1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTextureSubImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTextureSubImage2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTextureSubImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTextureSubImage3D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('CompressedTextureSubImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('ConservativeRasterParameterfNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('ConservativeRasterParameteriNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('ConvolutionFilter1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ConvolutionFilter1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ConvolutionFilter2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ConvolutionFilter2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ConvolutionParameterf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('ConvolutionParameterfEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('ConvolutionParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ConvolutionParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ConvolutionParameteri', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('ConvolutionParameteriEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('ConvolutionParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('ConvolutionParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('ConvolutionParameterxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('ConvolutionParameterxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('CopyBufferSubData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('CopyColorSubTable', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyColorSubTableEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyColorTable', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyColorTableSGI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyConvolutionFilter1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyConvolutionFilter1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyConvolutionFilter2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyConvolutionFilter2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyImageSubData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyImageSubDataNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyMultiTexImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyMultiTexImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyMultiTexSubImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyMultiTexSubImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyMultiTexSubImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyNamedBufferSubData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('CopyPathNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('CopyPixels', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32)),
    ('CopyTexImage1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTexImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTexImage2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTexImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTexSubImage1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTexSubImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTexSubImage2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTexSubImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTexSubImage3D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTexSubImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTextureImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTextureImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTextureSubImage1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTextureSubImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTextureSubImage2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTextureSubImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTextureSubImage3D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CopyTextureSubImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('CoverFillPathInstancedNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('CoverFillPathNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('CoverStrokePathInstancedNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('CoverStrokePathNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('CoverageModulationNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('CoverageModulationTableNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('CreateBuffers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreateCommandListsNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreateFramebuffers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreateMemoryObjectsEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreatePerfQueryINTEL', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreateProgram', ctypes.CFUNCTYPE(ctypes.c_uint32)),
    ('CreateProgramObjectARB', ctypes.CFUNCTYPE(ctypes.c_uint32)),
    ('CreateProgramPipelines', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreateProgressFenceNVX', ctypes.CFUNCTYPE(ctypes.c_uint32)),
    ('CreateQueries', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreateRenderbuffers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreateSamplers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreateSemaphoresNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreateShader', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32)),
    ('CreateShaderObjectARB', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32)),
    ('CreateShaderProgramEXT', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('CreateShaderProgramv', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(ctypes.c_char)))),
    ('CreateStatesNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreateSyncFromCLeventARB', ctypes.CFUNCTYPE(ctypes.POINTER(struct___GLsync), ctypes.POINTER(struct__cl_context), ctypes.POINTER(struct__cl_event), ctypes.c_uint32)),
    ('CreateTextures', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreateTransformFeedbacks', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CreateVertexArrays', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('CullFace', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('CullParameterdvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('CullParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('CurrentPaletteMatrixARB', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('DebugMessageCallback', ctypes.CFUNCTYPE(None, ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_char), ctypes.POINTER(None)), ctypes.POINTER(None))),
    ('DebugMessageCallbackAMD', ctypes.CFUNCTYPE(None, ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_char), ctypes.POINTER(None)), ctypes.POINTER(None))),
    ('DebugMessageCallbackARB', ctypes.CFUNCTYPE(None, ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_char), ctypes.POINTER(None)), ctypes.POINTER(None))),
    ('DebugMessageControl', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.c_ubyte)),
    ('DebugMessageControlARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.c_ubyte)),
    ('DebugMessageEnableAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.c_ubyte)),
    ('DebugMessageInsert', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('DebugMessageInsertAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('DebugMessageInsertARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('DeformSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DeformationMap3dSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_int32, ctypes.c_int32, ctypes.c_double, ctypes.c_double, ctypes.c_int32, ctypes.c_int32, ctypes.c_double, ctypes.c_double, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('DeformationMap3fSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_int32, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_int32, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('DeleteAsyncMarkersSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('DeleteBuffers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteBuffersARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteCommandListsNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteFencesAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteFencesNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteFragmentShaderATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DeleteFramebuffers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteFramebuffersEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteLists', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('DeleteMemoryObjectsEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteNamedStringARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('DeleteNamesAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteObjectARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DeleteOcclusionQueriesNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeletePathsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('DeletePerfMonitorsAMD', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeletePerfQueryINTEL', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DeleteProgram', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DeleteProgramPipelines', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteProgramsARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteProgramsNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteQueries', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteQueriesARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteQueryResourceTagNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('DeleteRenderbuffers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteRenderbuffersEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteSamplers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteSemaphoresEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteShader', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DeleteStatesNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteSync', ctypes.CFUNCTYPE(None, ctypes.POINTER(struct___GLsync))),
    ('DeleteTextures', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteTexturesEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteTransformFeedbacks', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteTransformFeedbacksNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteVertexArrays', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteVertexArraysAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DeleteVertexShaderEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DepthBoundsEXT', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double)),
    ('DepthBoundsdNV', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double)),
    ('DepthFunc', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DepthMask', ctypes.CFUNCTYPE(None, ctypes.c_ubyte)),
    ('DepthRange', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double)),
    ('DepthRangeArraydvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('DepthRangeArrayv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('DepthRangeIndexed', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double)),
    ('DepthRangeIndexeddNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double)),
    ('DepthRangedNV', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double)),
    ('DepthRangef', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('DepthRangefOES', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('DepthRangexOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('DetachObjectARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DetachShader', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DetailTexFuncSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Disable', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DisableClientState', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DisableClientStateIndexedEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DisableClientStateiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DisableIndexedEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DisableVariantClientStateEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DisableVertexArrayAttrib', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DisableVertexArrayAttribEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DisableVertexArrayEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DisableVertexAttribAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DisableVertexAttribArray', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DisableVertexAttribArrayARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('Disablei', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DispatchCompute', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('DispatchComputeGroupSizeARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('DispatchComputeIndirect', ctypes.CFUNCTYPE(None, ctypes.c_int64)),
    ('DrawArrays', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('DrawArraysEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('DrawArraysIndirect', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(None))),
    ('DrawArraysInstanced', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('DrawArraysInstancedARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('DrawArraysInstancedBaseInstance', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32)),
    ('DrawArraysInstancedEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('DrawBuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('DrawBuffers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DrawBuffersARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DrawBuffersATI', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('DrawCommandsAddressNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64), ctypes.POINTER(ctypes.c_int32), ctypes.c_uint32)),
    ('DrawCommandsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64), ctypes.POINTER(ctypes.c_int32), ctypes.c_uint32)),
    ('DrawCommandsStatesAddressNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint64), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.c_uint32)),
    ('DrawCommandsStatesNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.c_uint32)),
    ('DrawElementArrayAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('DrawElementArrayATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('DrawElements', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('DrawElementsBaseVertex', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32)),
    ('DrawElementsIndirect', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('DrawElementsInstanced', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32)),
    ('DrawElementsInstancedARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32)),
    ('DrawElementsInstancedBaseInstance', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32, ctypes.c_uint32)),
    ('DrawElementsInstancedBaseVertex', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32, ctypes.c_int32)),
    ('DrawElementsInstancedBaseVertexBaseInstance', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32)),
    ('DrawElementsInstancedEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32)),
    ('DrawMeshArraysSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('DrawMeshTasksIndirectNV', ctypes.CFUNCTYPE(None, ctypes.c_int64)),
    ('DrawMeshTasksNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DrawPixels', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('DrawRangeElementArrayAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('DrawRangeElementArrayATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('DrawRangeElements', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('DrawRangeElementsBaseVertex', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32)),
    ('DrawRangeElementsEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('DrawTextureNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('DrawTransformFeedback', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DrawTransformFeedbackInstanced', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('DrawTransformFeedbackNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('DrawTransformFeedbackStream', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('DrawTransformFeedbackStreamInstanced', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('DrawVkImageNV', ctypes.CFUNCTYPE(None, ctypes.c_uint64, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('EGLImageTargetTexStorageEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(None), ctypes.POINTER(ctypes.c_int32))),
    ('EGLImageTargetTextureStorageEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(None), ctypes.POINTER(ctypes.c_int32))),
    ('EdgeFlag', ctypes.CFUNCTYPE(None, ctypes.c_ubyte)),
    ('EdgeFlagFormatNV', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('EdgeFlagPointer', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(None))),
    ('EdgeFlagPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte))),
    ('EdgeFlagPointerListIBM', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(ctypes.c_ubyte)), ctypes.c_int32)),
    ('EdgeFlagv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_ubyte))),
    ('ElementPointerAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ElementPointerATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(None))),
    ('Enable', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('EnableClientState', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('EnableClientStateIndexedEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('EnableClientStateiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('EnableIndexedEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('EnableVariantClientStateEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('EnableVertexArrayAttrib', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('EnableVertexArrayAttribEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('EnableVertexArrayEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('EnableVertexAttribAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('EnableVertexAttribArray', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('EnableVertexAttribArrayARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('Enablei', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('End', ctypes.CFUNCTYPE(None)),
    ('EndConditionalRender', ctypes.CFUNCTYPE(None)),
    ('EndConditionalRenderNV', ctypes.CFUNCTYPE(None)),
    ('EndConditionalRenderNVX', ctypes.CFUNCTYPE(None)),
    ('EndFragmentShaderATI', ctypes.CFUNCTYPE(None)),
    ('EndList', ctypes.CFUNCTYPE(None)),
    ('EndOcclusionQueryNV', ctypes.CFUNCTYPE(None)),
    ('EndPerfMonitorAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('EndPerfQueryINTEL', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('EndQuery', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('EndQueryARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('EndQueryIndexed', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('EndTransformFeedback', ctypes.CFUNCTYPE(None)),
    ('EndTransformFeedbackEXT', ctypes.CFUNCTYPE(None)),
    ('EndTransformFeedbackNV', ctypes.CFUNCTYPE(None)),
    ('EndVertexShaderEXT', ctypes.CFUNCTYPE(None)),
    ('EndVideoCaptureNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('EvalCoord1d', ctypes.CFUNCTYPE(None, ctypes.c_double)),
    ('EvalCoord1dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('EvalCoord1f', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('EvalCoord1fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('EvalCoord1xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('EvalCoord1xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('EvalCoord2d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double)),
    ('EvalCoord2dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('EvalCoord2f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('EvalCoord2fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('EvalCoord2xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('EvalCoord2xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('EvalMapsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('EvalMesh1', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('EvalMesh2', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('EvalPoint1', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('EvalPoint2', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('EvaluateDepthValuesARB', ctypes.CFUNCTYPE(None)),
    ('ExecuteProgramNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ExtractComponentEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('FeedbackBuffer', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('FeedbackBufferxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('FenceSync', ctypes.CFUNCTYPE(ctypes.POINTER(struct___GLsync), ctypes.c_uint32, ctypes.c_uint32)),
    ('FinalCombinerInputNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('Finish', ctypes.CFUNCTYPE(None)),
    ('FinishAsyncSGIX', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('FinishFenceAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('FinishFenceNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('FinishObjectAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('FinishTextureSUNX', ctypes.CFUNCTYPE(None)),
    ('Flush', ctypes.CFUNCTYPE(None)),
    ('FlushMappedBufferRange', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('FlushMappedBufferRangeAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('FlushMappedNamedBufferRange', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('FlushMappedNamedBufferRangeEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('FlushPixelDataRangeNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('FlushRasterSGIX', ctypes.CFUNCTYPE(None)),
    ('FlushStaticDataIBM', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('FlushVertexArrayRangeAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(None))),
    ('FlushVertexArrayRangeNV', ctypes.CFUNCTYPE(None)),
    ('FogCoordFormatNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('FogCoordPointer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('FogCoordPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('FogCoordPointerListIBM', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(None)), ctypes.c_int32)),
    ('FogCoordd', ctypes.CFUNCTYPE(None, ctypes.c_double)),
    ('FogCoorddEXT', ctypes.CFUNCTYPE(None, ctypes.c_double)),
    ('FogCoorddv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('FogCoorddvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('FogCoordf', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('FogCoordfEXT', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('FogCoordfv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('FogCoordfvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('FogCoordhNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16)),
    ('FogCoordhvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('FogFuncSGIS', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Fogf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('Fogfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('Fogi', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('Fogiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('FogxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('FogxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('FragmentColorMaterialSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('FragmentCoverageColorNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('FragmentLightModelfSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('FragmentLightModelfvSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('FragmentLightModeliSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('FragmentLightModelivSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('FragmentLightfSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('FragmentLightfvSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('FragmentLightiSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('FragmentLightivSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('FragmentMaterialfSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('FragmentMaterialfvSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('FragmentMaterialiSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('FragmentMaterialivSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('FrameTerminatorGREMEDY', ctypes.CFUNCTYPE(None)),
    ('FrameZoomSGIX', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('FramebufferDrawBufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('FramebufferDrawBuffersEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('FramebufferFetchBarrierEXT', ctypes.CFUNCTYPE(None)),
    ('FramebufferParameteri', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('FramebufferParameteriMESA', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('FramebufferReadBufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('FramebufferRenderbuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('FramebufferRenderbufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('FramebufferSampleLocationsfvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('FramebufferSampleLocationsfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('FramebufferSamplePositionsfvAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('FramebufferTexture', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('FramebufferTexture1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('FramebufferTexture1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('FramebufferTexture2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('FramebufferTexture2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('FramebufferTexture3D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('FramebufferTexture3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('FramebufferTextureARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('FramebufferTextureEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('FramebufferTextureFaceARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32)),
    ('FramebufferTextureFaceEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32)),
    ('FramebufferTextureLayer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('FramebufferTextureLayerARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('FramebufferTextureLayerEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('FramebufferTextureMultiviewOVR', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('FreeObjectBufferATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('FrontFace', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('Frustum', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('FrustumfOES', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('FrustumxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('GenAsyncMarkersSGIX', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_int32)),
    ('GenBuffers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenBuffersARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenFencesAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenFencesNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenFragmentShadersATI', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32)),
    ('GenFramebuffers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenFramebuffersEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenLists', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_int32)),
    ('GenNamesAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenOcclusionQueriesNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenPathsNV', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_int32)),
    ('GenPerfMonitorsAMD', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenProgramPipelines', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenProgramsARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenProgramsNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenQueries', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenQueriesARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenQueryResourceTagNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('GenRenderbuffers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenRenderbuffersEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenSamplers', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenSemaphoresEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenSymbolsEXT', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('GenTextures', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenTexturesEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenTransformFeedbacks', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenTransformFeedbacksNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenVertexArrays', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenVertexArraysAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GenVertexShadersEXT', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32)),
    ('GenerateMipmap', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('GenerateMipmapEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('GenerateMultiTexMipmapEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('GenerateTextureMipmap', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('GenerateTextureMipmapEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('GetActiveAtomicCounterBufferiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetActiveAttrib', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_char))),
    ('GetActiveAttribARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_char))),
    ('GetActiveSubroutineName', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetActiveSubroutineUniformName', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetActiveSubroutineUniformiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetActiveUniform', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_char))),
    ('GetActiveUniformARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_char))),
    ('GetActiveUniformBlockName', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetActiveUniformBlockiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetActiveUniformName', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetActiveUniformsiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetActiveVaryingNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_char))),
    ('GetArrayObjectfvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetArrayObjectivATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetAttachedObjectsARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32))),
    ('GetAttachedShaders', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32))),
    ('GetAttribLocation', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetAttribLocationARB', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetBooleanIndexedvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetBooleani_v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetBooleanv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetBufferParameteri64v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('GetBufferParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetBufferParameterivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetBufferParameterui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetBufferPointerv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetBufferPointervARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetBufferSubData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.POINTER(None))),
    ('GetBufferSubDataARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.POINTER(None))),
    ('GetClipPlane', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetClipPlanefOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetClipPlanexOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetColorTable', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetColorTableEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetColorTableParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetColorTableParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetColorTableParameterfvSGI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetColorTableParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetColorTableParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetColorTableParameterivSGI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetColorTableSGI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetCombinerInputParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetCombinerInputParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetCombinerOutputParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetCombinerOutputParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetCombinerStageParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetCommandHeaderNV', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('GetCompressedMultiTexImageEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetCompressedTexImage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetCompressedTexImageARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetCompressedTextureImage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetCompressedTextureImageEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetCompressedTextureSubImage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetConvolutionFilter', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetConvolutionFilterEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetConvolutionParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetConvolutionParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetConvolutionParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetConvolutionParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetConvolutionParameterxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetCoverageModulationTableNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetDebugMessageLog', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetDebugMessageLogAMD', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetDebugMessageLogARB', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetDetailTexFuncSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetDoubleIndexedvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetDoublei_v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetDoublei_vEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetDoublev', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetError', ctypes.CFUNCTYPE(ctypes.c_uint32)),
    ('GetFenceivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetFinalCombinerInputParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetFinalCombinerInputParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetFirstPerfQueryIdINTEL', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32))),
    ('GetFixedvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetFloatIndexedvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetFloati_v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetFloati_vEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetFloatv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetFogFuncSGIS', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('GetFragDataIndex', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetFragDataLocation', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetFragDataLocationEXT', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetFragmentLightfvSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetFragmentLightivSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetFragmentMaterialfvSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetFragmentMaterialivSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetFramebufferAttachmentParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetFramebufferAttachmentParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetFramebufferParameterfvAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetFramebufferParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetFramebufferParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetFramebufferParameterivMESA', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetGraphicsResetStatus', ctypes.CFUNCTYPE(ctypes.c_uint32)),
    ('GetGraphicsResetStatusARB', ctypes.CFUNCTYPE(ctypes.c_uint32)),
    ('GetHandleARB', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32)),
    ('GetHistogram', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetHistogramEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetHistogramParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetHistogramParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetHistogramParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetHistogramParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetHistogramParameterxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetImageHandleARB', ctypes.CFUNCTYPE(ctypes.c_uint64, ctypes.c_uint32, ctypes.c_int32, ctypes.c_ubyte, ctypes.c_int32, ctypes.c_uint32)),
    ('GetImageHandleNV', ctypes.CFUNCTYPE(ctypes.c_uint64, ctypes.c_uint32, ctypes.c_int32, ctypes.c_ubyte, ctypes.c_int32, ctypes.c_uint32)),
    ('GetImageTransformParameterfvHP', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetImageTransformParameterivHP', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetInfoLogARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetInstrumentsSGIX', ctypes.CFUNCTYPE(ctypes.c_int32)),
    ('GetInteger64i_v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('GetInteger64v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('GetIntegerIndexedvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetIntegeri_v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetIntegerui64i_vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetIntegerui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetIntegerv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetInternalformatSampleivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('GetInternalformati64v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('GetInternalformativ', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('GetInvariantBooleanvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetInvariantFloatvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetInvariantIntegervEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetLightfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetLightiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetLightxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetListParameterfvSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetListParameterivSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetLocalConstantBooleanvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetLocalConstantFloatvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetLocalConstantIntegervEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMapAttribParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetMapAttribParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMapControlPointsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(None))),
    ('GetMapParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetMapParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMapdv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetMapfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetMapiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMapxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMaterialfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetMaterialiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMaterialxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('GetMemoryObjectDetachedResourcesuivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetMemoryObjectParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMinmax', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetMinmaxEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetMinmaxParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetMinmaxParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetMinmaxParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMinmaxParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMultiTexEnvfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetMultiTexEnvivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMultiTexGendvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetMultiTexGenfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetMultiTexGenivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMultiTexImageEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetMultiTexLevelParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetMultiTexLevelParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMultiTexParameterIivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMultiTexParameterIuivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetMultiTexParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetMultiTexParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetMultisamplefv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetMultisamplefvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetNamedBufferParameteri64v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('GetNamedBufferParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetNamedBufferParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetNamedBufferParameterui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetNamedBufferPointerv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetNamedBufferPointervEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetNamedBufferSubData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.POINTER(None))),
    ('GetNamedBufferSubDataEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.POINTER(None))),
    ('GetNamedFramebufferAttachmentParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetNamedFramebufferAttachmentParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetNamedFramebufferParameterfvAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetNamedFramebufferParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetNamedFramebufferParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetNamedProgramLocalParameterIivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetNamedProgramLocalParameterIuivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetNamedProgramLocalParameterdvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetNamedProgramLocalParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetNamedProgramStringEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetNamedProgramivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetNamedRenderbufferParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetNamedRenderbufferParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetNamedStringARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_char), ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetNamedStringivARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_char), ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetNextPerfQueryIdINTEL', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetObjectBufferfvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetObjectBufferivATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetObjectLabel', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetObjectLabelEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetObjectParameterfvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetObjectParameterivAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetObjectParameterivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetObjectPtrLabel', ctypes.CFUNCTYPE(None, ctypes.POINTER(None), ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetOcclusionQueryivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetOcclusionQueryuivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetPathColorGenfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetPathColorGenivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetPathCommandsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetPathCoordsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetPathDashArrayNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetPathLengthNV', ctypes.CFUNCTYPE(ctypes.c_float, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('GetPathMetricRangeNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetPathMetricsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetPathParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetPathParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetPathSpacingNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetPathTexGenfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetPathTexGenivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetPerfCounterInfoINTEL', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char), ctypes.c_uint32, ctypes.POINTER(ctypes.c_char), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint64))),
    ('GetPerfMonitorCounterDataAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_int32))),
    ('GetPerfMonitorCounterInfoAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetPerfMonitorCounterStringAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetPerfMonitorCountersAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetPerfMonitorGroupStringAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetPerfMonitorGroupsAMD', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32), ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetPerfQueryDataINTEL', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None), ctypes.POINTER(ctypes.c_uint32))),
    ('GetPerfQueryIdByNameINTEL', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_char), ctypes.POINTER(ctypes.c_uint32))),
    ('GetPerfQueryInfoINTEL', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32))),
    ('GetPixelMapfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetPixelMapuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetPixelMapusv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('GetPixelMapxv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('GetPixelTexGenParameterfvSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetPixelTexGenParameterivSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetPixelTransformParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetPixelTransformParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetPointerIndexedvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetPointeri_vEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetPointerv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetPointervEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetPolygonStipple', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetProgramBinary', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(None))),
    ('GetProgramEnvParameterIivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetProgramEnvParameterIuivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetProgramEnvParameterdvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetProgramEnvParameterfvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetProgramInfoLog', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetProgramInterfaceiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetProgramLocalParameterIivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetProgramLocalParameterIuivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetProgramLocalParameterdvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetProgramLocalParameterfvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetProgramNamedParameterdvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte), ctypes.POINTER(ctypes.c_double))),
    ('GetProgramNamedParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte), ctypes.POINTER(ctypes.c_float))),
    ('GetProgramParameterdvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetProgramParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetProgramPipelineInfoLog', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetProgramPipelineiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetProgramResourceIndex', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetProgramResourceLocation', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetProgramResourceLocationIndex', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetProgramResourceName', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetProgramResourcefvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_float))),
    ('GetProgramResourceiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32))),
    ('GetProgramStageiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetProgramStringARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetProgramStringNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetProgramSubroutineParameteruivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetProgramiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetProgramivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetProgramivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetQueryBufferObjecti64v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64)),
    ('GetQueryBufferObjectiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64)),
    ('GetQueryBufferObjectui64v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64)),
    ('GetQueryBufferObjectuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64)),
    ('GetQueryIndexediv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetQueryObjecti64v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('GetQueryObjecti64vEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('GetQueryObjectiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetQueryObjectivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetQueryObjectui64v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetQueryObjectui64vEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetQueryObjectuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetQueryObjectuivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetQueryiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetQueryivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetRenderbufferParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetRenderbufferParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetSamplerParameterIiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetSamplerParameterIuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetSamplerParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetSamplerParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetSemaphoreParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetSemaphoreParameterui64vEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetSeparableFilter', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.POINTER(None), ctypes.POINTER(None))),
    ('GetSeparableFilterEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.POINTER(None), ctypes.POINTER(None))),
    ('GetShaderInfoLog', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetShaderPrecisionFormat', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32))),
    ('GetShaderSource', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetShaderSourceARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_char))),
    ('GetShaderiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetShadingRateImagePaletteNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetShadingRateSampleLocationivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetSharpenTexFuncSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetStageIndexNV', ctypes.CFUNCTYPE(ctypes.c_uint16, ctypes.c_uint32)),
    ('GetString', ctypes.CFUNCTYPE(ctypes.POINTER(ctypes.c_ubyte), ctypes.c_uint32)),
    ('GetStringi', ctypes.CFUNCTYPE(ctypes.POINTER(ctypes.c_ubyte), ctypes.c_uint32, ctypes.c_uint32)),
    ('GetSubroutineIndex', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetSubroutineUniformLocation', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetSynciv', ctypes.CFUNCTYPE(None, ctypes.POINTER(struct___GLsync), ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32))),
    ('GetTexBumpParameterfvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetTexBumpParameterivATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTexEnvfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetTexEnviv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTexEnvxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTexFilterFuncSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetTexGendv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetTexGenfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetTexGeniv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTexGenxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTexImage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetTexLevelParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetTexLevelParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTexLevelParameterxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTexParameterIiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTexParameterIivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTexParameterIuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetTexParameterIuivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetTexParameterPointervAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetTexParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetTexParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTexParameterxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTextureHandleARB', ctypes.CFUNCTYPE(ctypes.c_uint64, ctypes.c_uint32)),
    ('GetTextureHandleNV', ctypes.CFUNCTYPE(ctypes.c_uint64, ctypes.c_uint32)),
    ('GetTextureImage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetTextureImageEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('GetTextureLevelParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetTextureLevelParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetTextureLevelParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTextureLevelParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTextureParameterIiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTextureParameterIivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTextureParameterIuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetTextureParameterIuivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetTextureParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetTextureParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetTextureParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTextureParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTextureSamplerHandleARB', ctypes.CFUNCTYPE(ctypes.c_uint64, ctypes.c_uint32, ctypes.c_uint32)),
    ('GetTextureSamplerHandleNV', ctypes.CFUNCTYPE(ctypes.c_uint64, ctypes.c_uint32, ctypes.c_uint32)),
    ('GetTextureSubImage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetTrackMatrixivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTransformFeedbackVarying', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_char))),
    ('GetTransformFeedbackVaryingEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_char))),
    ('GetTransformFeedbackVaryingNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTransformFeedbacki64_v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('GetTransformFeedbacki_v', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetTransformFeedbackiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetUniformBlockIndex', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetUniformBufferSizeEXT', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32)),
    ('GetUniformIndices', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(ctypes.c_char)), ctypes.POINTER(ctypes.c_uint32))),
    ('GetUniformLocation', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetUniformLocationARB', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetUniformOffsetEXT', ctypes.CFUNCTYPE(ctypes.c_int64, ctypes.c_uint32, ctypes.c_int32)),
    ('GetUniformSubroutineuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetUniformdv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('GetUniformfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetUniformfvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetUniformi64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('GetUniformi64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('GetUniformiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('GetUniformivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('GetUniformui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetUniformui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetUniformuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetUniformuivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetUnsignedBytei_vEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetUnsignedBytevEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetVariantArrayObjectfvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetVariantArrayObjectivATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVariantBooleanvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetVariantFloatvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetVariantIntegervEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVariantPointervEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetVaryingLocationNV', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char))),
    ('GetVertexArrayIndexed64iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('GetVertexArrayIndexediv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVertexArrayIntegeri_vEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVertexArrayIntegervEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVertexArrayPointeri_vEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetVertexArrayPointervEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetVertexArrayiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVertexAttribArrayObjectfvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetVertexAttribArrayObjectivATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVertexAttribIiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVertexAttribIivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVertexAttribIuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetVertexAttribIuivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetVertexAttribLdv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetVertexAttribLdvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetVertexAttribLi64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('GetVertexAttribLui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetVertexAttribLui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetVertexAttribPointerv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetVertexAttribPointervARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetVertexAttribPointervNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('GetVertexAttribdv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetVertexAttribdvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetVertexAttribdvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetVertexAttribfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetVertexAttribfvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetVertexAttribfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetVertexAttribiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVertexAttribivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVertexAttribivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVideoCaptureStreamdvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('GetVideoCaptureStreamfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('GetVideoCaptureStreamivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVideoCaptureivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVideoi64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('GetVideoivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('GetVideoui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetVideouivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetVkProcAddrNV', ctypes.CFUNCTYPE(ctypes.CFUNCTYPE(None), ctypes.POINTER(ctypes.c_char))),
    ('GetnColorTable', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetnColorTableARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetnCompressedTexImage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetnCompressedTexImageARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetnConvolutionFilter', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetnConvolutionFilterARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetnHistogram', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetnHistogramARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetnMapdv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('GetnMapdvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('GetnMapfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetnMapfvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetnMapiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('GetnMapivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('GetnMinmax', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetnMinmaxARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetnPixelMapfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetnPixelMapfvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetnPixelMapuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetnPixelMapuivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetnPixelMapusv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint16))),
    ('GetnPixelMapusvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint16))),
    ('GetnPolygonStipple', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetnPolygonStippleARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte))),
    ('GetnSeparableFilter', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None), ctypes.c_int32, ctypes.POINTER(None), ctypes.POINTER(None))),
    ('GetnSeparableFilterARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None), ctypes.c_int32, ctypes.POINTER(None), ctypes.POINTER(None))),
    ('GetnTexImage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetnTexImageARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('GetnUniformdv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('GetnUniformdvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('GetnUniformfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetnUniformfvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('GetnUniformi64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('GetnUniformiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('GetnUniformivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('GetnUniformui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('GetnUniformuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GetnUniformuivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('GlobalAlphaFactorbSUN', ctypes.CFUNCTYPE(None, ctypes.c_byte)),
    ('GlobalAlphaFactordSUN', ctypes.CFUNCTYPE(None, ctypes.c_double)),
    ('GlobalAlphaFactorfSUN', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('GlobalAlphaFactoriSUN', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('GlobalAlphaFactorsSUN', ctypes.CFUNCTYPE(None, ctypes.c_int16)),
    ('GlobalAlphaFactorubSUN', ctypes.CFUNCTYPE(None, ctypes.c_ubyte)),
    ('GlobalAlphaFactoruiSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('GlobalAlphaFactorusSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint16)),
    ('Hint', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('HintPGI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('Histogram', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_ubyte)),
    ('HistogramEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_ubyte)),
    ('IglooInterfaceSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ImageTransformParameterfHP', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('ImageTransformParameterfvHP', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ImageTransformParameteriHP', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('ImageTransformParameterivHP', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('ImportMemoryFdEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_uint32, ctypes.c_int32)),
    ('ImportMemoryWin32HandleEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ImportMemoryWin32NameEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ImportSemaphoreFdEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('ImportSemaphoreWin32HandleEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ImportSemaphoreWin32NameEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ImportSyncEXT', ctypes.CFUNCTYPE(ctypes.POINTER(struct___GLsync), ctypes.c_uint32, ctypes.c_int64, ctypes.c_uint32)),
    ('IndexFormatNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('IndexFuncEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('IndexMask', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('IndexMaterialEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('IndexPointer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('IndexPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('IndexPointerListIBM', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(None)), ctypes.c_int32)),
    ('Indexd', ctypes.CFUNCTYPE(None, ctypes.c_double)),
    ('Indexdv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('Indexf', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('Indexfv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('Indexi', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('Indexiv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('Indexs', ctypes.CFUNCTYPE(None, ctypes.c_int16)),
    ('Indexsv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('Indexub', ctypes.CFUNCTYPE(None, ctypes.c_ubyte)),
    ('Indexubv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_ubyte))),
    ('IndexxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('IndexxvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('InitNames', ctypes.CFUNCTYPE(None)),
    ('InsertComponentEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('InsertEventMarkerEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('InstrumentsBufferSGIX', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('InterleavedArrays', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('InterpolatePathsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('InvalidateBufferData', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('InvalidateBufferSubData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('InvalidateFramebuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('InvalidateNamedFramebufferData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('InvalidateNamedFramebufferSubData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('InvalidateSubFramebuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('InvalidateTexImage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('InvalidateTexSubImage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('IsAsyncMarkerSGIX', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsBuffer', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsBufferARB', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsBufferResidentNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsCommandListNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsEnabled', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsEnabledIndexedEXT', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32)),
    ('IsEnabledi', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32)),
    ('IsFenceAPPLE', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsFenceNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsFramebuffer', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsFramebufferEXT', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsImageHandleResidentARB', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint64)),
    ('IsImageHandleResidentNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint64)),
    ('IsList', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsMemoryObjectEXT', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsNameAMD', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32)),
    ('IsNamedBufferResidentNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsNamedStringARB', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('IsObjectBufferATI', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsOcclusionQueryNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsPathNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsPointInFillPathNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float, ctypes.c_float)),
    ('IsPointInStrokePathNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_float, ctypes.c_float)),
    ('IsProgram', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsProgramARB', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsProgramNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsProgramPipeline', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsQuery', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsQueryARB', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsRenderbuffer', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsRenderbufferEXT', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsSampler', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsSemaphoreEXT', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsShader', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsStateNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsSync', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.POINTER(struct___GLsync))),
    ('IsTexture', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsTextureEXT', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsTextureHandleResidentARB', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint64)),
    ('IsTextureHandleResidentNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint64)),
    ('IsTransformFeedback', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsTransformFeedbackNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsVariantEnabledEXT', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32)),
    ('IsVertexArray', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsVertexArrayAPPLE', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('IsVertexAttribEnabledAPPLE', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32)),
    ('LGPUCopyImageSubDataNVX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('LGPUInterlockNVX', ctypes.CFUNCTYPE(None)),
    ('LGPUNamedBufferSubDataNVX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.POINTER(None))),
    ('LabelObjectEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('LightEnviSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('LightModelf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('LightModelfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('LightModeli', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('LightModeliv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('LightModelxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('LightModelxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('Lightf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('Lightfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('Lighti', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('Lightiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('LightxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('LightxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('LineStipple', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint16)),
    ('LineWidth', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('LineWidthxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('LinkProgram', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('LinkProgramARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ListBase', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ListDrawCommandsStatesClientNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32), ctypes.c_uint32)),
    ('ListParameterfSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('ListParameterfvSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ListParameteriSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('ListParameterivSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('LoadIdentity', ctypes.CFUNCTYPE(None)),
    ('LoadIdentityDeformationMapSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('LoadMatrixd', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('LoadMatrixf', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('LoadMatrixxOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('LoadName', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('LoadProgramNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte))),
    ('LoadTransposeMatrixd', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('LoadTransposeMatrixdARB', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('LoadTransposeMatrixf', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('LoadTransposeMatrixfARB', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('LoadTransposeMatrixxOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('LockArraysEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('LogicOp', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('MakeBufferNonResidentNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('MakeBufferResidentNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('MakeImageHandleNonResidentARB', ctypes.CFUNCTYPE(None, ctypes.c_uint64)),
    ('MakeImageHandleNonResidentNV', ctypes.CFUNCTYPE(None, ctypes.c_uint64)),
    ('MakeImageHandleResidentARB', ctypes.CFUNCTYPE(None, ctypes.c_uint64, ctypes.c_uint32)),
    ('MakeImageHandleResidentNV', ctypes.CFUNCTYPE(None, ctypes.c_uint64, ctypes.c_uint32)),
    ('MakeNamedBufferNonResidentNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('MakeNamedBufferResidentNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('MakeTextureHandleNonResidentARB', ctypes.CFUNCTYPE(None, ctypes.c_uint64)),
    ('MakeTextureHandleNonResidentNV', ctypes.CFUNCTYPE(None, ctypes.c_uint64)),
    ('MakeTextureHandleResidentARB', ctypes.CFUNCTYPE(None, ctypes.c_uint64)),
    ('MakeTextureHandleResidentNV', ctypes.CFUNCTYPE(None, ctypes.c_uint64)),
    ('Map1d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('Map1f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Map1xOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Map2d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_int32, ctypes.c_int32, ctypes.c_double, ctypes.c_double, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('Map2f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_int32, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Map2xOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MapBuffer', ctypes.CFUNCTYPE(ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_uint32)),
    ('MapBufferARB', ctypes.CFUNCTYPE(ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_uint32)),
    ('MapBufferRange', ctypes.CFUNCTYPE(ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_uint32)),
    ('MapControlPointsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(None))),
    ('MapGrid1d', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_double, ctypes.c_double)),
    ('MapGrid1f', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_float, ctypes.c_float)),
    ('MapGrid1xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MapGrid2d', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_double, ctypes.c_double, ctypes.c_int32, ctypes.c_double, ctypes.c_double)),
    ('MapGrid2f', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_int32, ctypes.c_float, ctypes.c_float)),
    ('MapGrid2xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MapNamedBuffer', ctypes.CFUNCTYPE(ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_uint32)),
    ('MapNamedBufferEXT', ctypes.CFUNCTYPE(ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_uint32)),
    ('MapNamedBufferRange', ctypes.CFUNCTYPE(ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_uint32)),
    ('MapNamedBufferRangeEXT', ctypes.CFUNCTYPE(ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_uint32)),
    ('MapObjectBufferATI', ctypes.CFUNCTYPE(ctypes.POINTER(None), ctypes.c_uint32)),
    ('MapParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MapParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MapTexture2DINTEL', ctypes.CFUNCTYPE(ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_uint32))),
    ('MapVertexAttrib1dAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('MapVertexAttrib1fAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('MapVertexAttrib2dAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_int32, ctypes.c_int32, ctypes.c_double, ctypes.c_double, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('MapVertexAttrib2fAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_int32, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Materialf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('Materialfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('Materiali', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('Materialiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MaterialxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('MaterialxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MatrixFrustumEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('MatrixIndexPointerARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('MatrixIndexubvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte))),
    ('MatrixIndexuivARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('MatrixIndexusvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint16))),
    ('MatrixLoad3x2fNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MatrixLoad3x3fNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MatrixLoadIdentityEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('MatrixLoadTranspose3x3fNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MatrixLoadTransposedEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MatrixLoadTransposefEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MatrixLoaddEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MatrixLoadfEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MatrixMode', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('MatrixMult3x2fNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MatrixMult3x3fNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MatrixMultTranspose3x3fNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MatrixMultTransposedEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MatrixMultTransposefEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MatrixMultdEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MatrixMultfEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MatrixOrthoEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('MatrixPopEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('MatrixPushEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('MatrixRotatedEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('MatrixRotatefEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('MatrixScaledEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('MatrixScalefEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('MatrixTranslatedEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('MatrixTranslatefEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('MaxShaderCompilerThreadsARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('MaxShaderCompilerThreadsKHR', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('MemoryBarrier', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('MemoryBarrierByRegion', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('MemoryBarrierEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('MemoryObjectParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MinSampleShading', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('MinSampleShadingARB', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('Minmax', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_ubyte)),
    ('MinmaxEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_ubyte)),
    ('MultMatrixd', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('MultMatrixf', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('MultMatrixxOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('MultTransposeMatrixd', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('MultTransposeMatrixdARB', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('MultTransposeMatrixf', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('MultTransposeMatrixfARB', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('MultTransposeMatrixxOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('MultiDrawArrays', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.c_int32)),
    ('MultiDrawArraysEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.c_int32)),
    ('MultiDrawArraysIndirect', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawArraysIndirectAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawArraysIndirectBindlessCountNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawArraysIndirectBindlessNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawArraysIndirectCount', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int64, ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawArraysIndirectCountARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int64, ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawElementArrayAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.c_int32)),
    ('MultiDrawElements', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32), ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)), ctypes.c_int32)),
    ('MultiDrawElementsBaseVertex', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32), ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)), ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiDrawElementsEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32), ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)), ctypes.c_int32)),
    ('MultiDrawElementsIndirect', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawElementsIndirectAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawElementsIndirectBindlessCountNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawElementsIndirectBindlessNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawElementsIndirectCount', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int64, ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawElementsIndirectCountARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int64, ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawMeshTasksIndirectCountNV', ctypes.CFUNCTYPE(None, ctypes.c_int64, ctypes.c_int64, ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawMeshTasksIndirectNV', ctypes.CFUNCTYPE(None, ctypes.c_int64, ctypes.c_int32, ctypes.c_int32)),
    ('MultiDrawRangeElementArrayAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.c_int32)),
    ('MultiModeDrawArraysIBM', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32), ctypes.c_int32, ctypes.c_int32)),
    ('MultiModeDrawElementsIBM', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_int32), ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)), ctypes.c_int32, ctypes.c_int32)),
    ('MultiTexBufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('MultiTexCoord1bOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_byte)),
    ('MultiTexCoord1bvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_byte))),
    ('MultiTexCoord1d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double)),
    ('MultiTexCoord1dARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double)),
    ('MultiTexCoord1dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MultiTexCoord1dvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MultiTexCoord1f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('MultiTexCoord1fARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('MultiTexCoord1fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MultiTexCoord1fvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MultiTexCoord1hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint16)),
    ('MultiTexCoord1hvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('MultiTexCoord1i', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('MultiTexCoord1iARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('MultiTexCoord1iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexCoord1ivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexCoord1s', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16)),
    ('MultiTexCoord1sARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16)),
    ('MultiTexCoord1sv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('MultiTexCoord1svARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('MultiTexCoord1xOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('MultiTexCoord1xvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexCoord2bOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_byte, ctypes.c_byte)),
    ('MultiTexCoord2bvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_byte))),
    ('MultiTexCoord2d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double)),
    ('MultiTexCoord2dARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double)),
    ('MultiTexCoord2dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MultiTexCoord2dvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MultiTexCoord2f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float)),
    ('MultiTexCoord2fARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float)),
    ('MultiTexCoord2fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MultiTexCoord2fvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MultiTexCoord2hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint16, ctypes.c_uint16)),
    ('MultiTexCoord2hvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('MultiTexCoord2i', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiTexCoord2iARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiTexCoord2iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexCoord2ivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexCoord2s', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16)),
    ('MultiTexCoord2sARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16)),
    ('MultiTexCoord2sv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('MultiTexCoord2svARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('MultiTexCoord2xOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiTexCoord2xvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexCoord3bOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('MultiTexCoord3bvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_byte))),
    ('MultiTexCoord3d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('MultiTexCoord3dARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('MultiTexCoord3dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MultiTexCoord3dvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MultiTexCoord3f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('MultiTexCoord3fARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('MultiTexCoord3fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MultiTexCoord3fvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MultiTexCoord3hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('MultiTexCoord3hvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('MultiTexCoord3i', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiTexCoord3iARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiTexCoord3iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexCoord3ivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexCoord3s', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('MultiTexCoord3sARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('MultiTexCoord3sv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('MultiTexCoord3svARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('MultiTexCoord3xOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiTexCoord3xvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexCoord4bOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('MultiTexCoord4bvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_byte))),
    ('MultiTexCoord4d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('MultiTexCoord4dARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('MultiTexCoord4dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MultiTexCoord4dvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MultiTexCoord4f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('MultiTexCoord4fARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('MultiTexCoord4fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MultiTexCoord4fvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MultiTexCoord4hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('MultiTexCoord4hvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('MultiTexCoord4i', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiTexCoord4iARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiTexCoord4iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexCoord4ivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexCoord4s', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('MultiTexCoord4sARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('MultiTexCoord4sv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('MultiTexCoord4svARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('MultiTexCoord4xOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MultiTexCoord4xvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexCoordP1ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('MultiTexCoordP1uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('MultiTexCoordP2ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('MultiTexCoordP2uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('MultiTexCoordP3ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('MultiTexCoordP3uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('MultiTexCoordP4ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('MultiTexCoordP4uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('MultiTexCoordPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('MultiTexEnvfEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('MultiTexEnvfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MultiTexEnviEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('MultiTexEnvivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexGendEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_double)),
    ('MultiTexGendvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('MultiTexGenfEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('MultiTexGenfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MultiTexGeniEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('MultiTexGenivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('MultiTexImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('MultiTexImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('MultiTexParameterIivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexParameterIuivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('MultiTexParameterfEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('MultiTexParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('MultiTexParameteriEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('MultiTexParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MultiTexRenderbufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('MultiTexSubImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('MultiTexSubImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('MultiTexSubImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('MulticastBarrierNV', ctypes.CFUNCTYPE(None)),
    ('MulticastBlitFramebufferNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('MulticastBufferSubDataNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.POINTER(None))),
    ('MulticastCopyBufferSubDataNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('MulticastCopyImageSubDataNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('MulticastFramebufferSampleLocationsfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('MulticastGetQueryObjecti64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('MulticastGetQueryObjectivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('MulticastGetQueryObjectui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('MulticastGetQueryObjectuivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('MulticastScissorArrayvNVX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('MulticastViewportArrayvNVX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('MulticastViewportPositionWScaleNVX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float, ctypes.c_float)),
    ('MulticastWaitSyncNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('NamedBufferAttachMemoryNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint64)),
    ('NamedBufferData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.POINTER(None), ctypes.c_uint32)),
    ('NamedBufferDataEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.POINTER(None), ctypes.c_uint32)),
    ('NamedBufferPageCommitmentARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_ubyte)),
    ('NamedBufferPageCommitmentEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_ubyte)),
    ('NamedBufferPageCommitmentMemNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_ubyte)),
    ('NamedBufferStorage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.POINTER(None), ctypes.c_uint32)),
    ('NamedBufferStorageEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.POINTER(None), ctypes.c_uint32)),
    ('NamedBufferStorageExternalEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.POINTER(None), ctypes.c_uint32)),
    ('NamedBufferStorageMemEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_uint32, ctypes.c_uint64)),
    ('NamedBufferSubData', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.POINTER(None))),
    ('NamedBufferSubDataEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.POINTER(None))),
    ('NamedCopyBufferSubDataEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('NamedFramebufferDrawBuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('NamedFramebufferDrawBuffers', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('NamedFramebufferParameteri', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('NamedFramebufferParameteriEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('NamedFramebufferReadBuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('NamedFramebufferRenderbuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('NamedFramebufferRenderbufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('NamedFramebufferSampleLocationsfvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('NamedFramebufferSampleLocationsfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('NamedFramebufferSamplePositionsfvAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('NamedFramebufferTexture', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('NamedFramebufferTexture1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('NamedFramebufferTexture2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('NamedFramebufferTexture3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('NamedFramebufferTextureEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('NamedFramebufferTextureFaceEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32)),
    ('NamedFramebufferTextureLayer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('NamedFramebufferTextureLayerEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('NamedProgramLocalParameter4dEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('NamedProgramLocalParameter4dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('NamedProgramLocalParameter4fEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('NamedProgramLocalParameter4fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('NamedProgramLocalParameterI4iEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('NamedProgramLocalParameterI4ivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('NamedProgramLocalParameterI4uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('NamedProgramLocalParameterI4uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('NamedProgramLocalParameters4fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('NamedProgramLocalParametersI4ivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('NamedProgramLocalParametersI4uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('NamedProgramStringEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('NamedRenderbufferStorage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('NamedRenderbufferStorageEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('NamedRenderbufferStorageMultisample', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('NamedRenderbufferStorageMultisampleAdvancedAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('NamedRenderbufferStorageMultisampleCoverageEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('NamedRenderbufferStorageMultisampleEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('NamedStringARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_char), ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('NewList', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('NewObjectBufferATI', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None), ctypes.c_uint32)),
    ('Normal3b', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('Normal3bv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('Normal3d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Normal3dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('Normal3f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Normal3fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Normal3fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('Normal3fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('Normal3hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('Normal3hvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('Normal3i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Normal3iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('Normal3s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('Normal3sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('Normal3xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Normal3xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('NormalFormatNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('NormalP3ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('NormalP3uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('NormalPointer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('NormalPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('NormalPointerListIBM', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(None)), ctypes.c_int32)),
    ('NormalPointervINTEL', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('NormalStream3bATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('NormalStream3bvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_byte))),
    ('NormalStream3dATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('NormalStream3dvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('NormalStream3fATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('NormalStream3fvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('NormalStream3iATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('NormalStream3ivATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('NormalStream3sATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('NormalStream3svATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('ObjectLabel', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('ObjectPtrLabel', ctypes.CFUNCTYPE(None, ctypes.POINTER(None), ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('ObjectPurgeableAPPLE', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ObjectUnpurgeableAPPLE', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('Ortho', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('OrthofOES', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('OrthoxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('PNTrianglesfATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('PNTrianglesiATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('PassTexCoordATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('PassThrough', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('PassThroughxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('PatchParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('PatchParameteri', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('PathColorGenNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('PathCommandsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte), ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('PathCoordsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('PathCoverDepthFuncNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('PathDashArrayNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('PathFogGenNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('PathGlyphIndexArrayNV', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_float)),
    ('PathGlyphIndexRangeNV', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float, ctypes.POINTER(ctypes.c_uint32))),
    ('PathGlyphRangeNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('PathGlyphsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('PathMemoryGlyphIndexArrayNV', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.POINTER(None), ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_float)),
    ('PathParameterfNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('PathParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('PathParameteriNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('PathParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('PathStencilDepthOffsetNV', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('PathStencilFuncNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32)),
    ('PathStringNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('PathSubCommandsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte), ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('PathSubCoordsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('PathTexGenNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('PauseTransformFeedback', ctypes.CFUNCTYPE(None)),
    ('PauseTransformFeedbackNV', ctypes.CFUNCTYPE(None)),
    ('PixelDataRangeNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('PixelMapfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('PixelMapuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('PixelMapusv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint16))),
    ('PixelMapx', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('PixelStoref', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('PixelStorei', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('PixelStorex', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('PixelTexGenParameterfSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('PixelTexGenParameterfvSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('PixelTexGenParameteriSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('PixelTexGenParameterivSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('PixelTexGenSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('PixelTransferf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('PixelTransferi', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('PixelTransferxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('PixelTransformParameterfEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('PixelTransformParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('PixelTransformParameteriEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('PixelTransformParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('PixelZoom', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('PixelZoomxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('PointAlongPathNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_float, ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('PointParameterf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('PointParameterfARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('PointParameterfEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('PointParameterfSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('PointParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('PointParameterfvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('PointParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('PointParameterfvSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('PointParameteri', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('PointParameteriNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('PointParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('PointParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('PointParameterxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('PointSize', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('PointSizexOES', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('PollAsyncSGIX', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('PollInstrumentsSGIX', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('PolygonMode', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('PolygonOffset', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('PolygonOffsetClamp', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('PolygonOffsetClampEXT', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('PolygonOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('PolygonOffsetxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('PolygonStipple', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_ubyte))),
    ('PopAttrib', ctypes.CFUNCTYPE(None)),
    ('PopClientAttrib', ctypes.CFUNCTYPE(None)),
    ('PopDebugGroup', ctypes.CFUNCTYPE(None)),
    ('PopGroupMarkerEXT', ctypes.CFUNCTYPE(None)),
    ('PopMatrix', ctypes.CFUNCTYPE(None)),
    ('PopName', ctypes.CFUNCTYPE(None)),
    ('PresentFrameDualFillNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('PresentFrameKeyedNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('PrimitiveBoundingBoxARB', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('PrimitiveRestartIndex', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('PrimitiveRestartIndexNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('PrimitiveRestartNV', ctypes.CFUNCTYPE(None)),
    ('PrioritizeTextures', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_float))),
    ('PrioritizeTexturesEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_float))),
    ('PrioritizeTexturesxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_int32))),
    ('ProgramBinary', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32)),
    ('ProgramBufferParametersIivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramBufferParametersIuivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramBufferParametersfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramEnvParameter4dARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('ProgramEnvParameter4dvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('ProgramEnvParameter4fARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ProgramEnvParameter4fvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramEnvParameterI4iNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ProgramEnvParameterI4ivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramEnvParameterI4uiNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ProgramEnvParameterI4uivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramEnvParameters4fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramEnvParametersI4ivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramEnvParametersI4uivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramLocalParameter4dARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('ProgramLocalParameter4dvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('ProgramLocalParameter4fARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ProgramLocalParameter4fvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramLocalParameterI4iNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ProgramLocalParameterI4ivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramLocalParameterI4uiNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ProgramLocalParameterI4uivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramLocalParameters4fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramLocalParametersI4ivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramLocalParametersI4uivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramNamedParameter4dNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte), ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('ProgramNamedParameter4dvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte), ctypes.POINTER(ctypes.c_double))),
    ('ProgramNamedParameter4fNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte), ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ProgramNamedParameter4fvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte), ctypes.POINTER(ctypes.c_float))),
    ('ProgramParameter4dNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('ProgramParameter4dvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('ProgramParameter4fNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ProgramParameter4fvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramParameteri', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('ProgramParameteriARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('ProgramParameteriEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('ProgramParameters4dvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('ProgramParameters4fvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramPathFragmentInputGenNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramStringARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('ProgramSubroutineParametersuivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramUniform1d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_double)),
    ('ProgramUniform1dEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_double)),
    ('ProgramUniform1dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniform1dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniform1f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_float)),
    ('ProgramUniform1fEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_float)),
    ('ProgramUniform1fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniform1fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniform1i', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('ProgramUniform1i64ARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('ProgramUniform1i64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('ProgramUniform1i64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('ProgramUniform1i64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('ProgramUniform1iEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('ProgramUniform1iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramUniform1ivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramUniform1ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32)),
    ('ProgramUniform1ui64ARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint64)),
    ('ProgramUniform1ui64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint64)),
    ('ProgramUniform1ui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('ProgramUniform1ui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('ProgramUniform1uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32)),
    ('ProgramUniform1uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramUniform1uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramUniform2d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_double, ctypes.c_double)),
    ('ProgramUniform2dEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_double, ctypes.c_double)),
    ('ProgramUniform2dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniform2dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniform2f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_float, ctypes.c_float)),
    ('ProgramUniform2fEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_float, ctypes.c_float)),
    ('ProgramUniform2fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniform2fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniform2i', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ProgramUniform2i64ARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64, ctypes.c_int64)),
    ('ProgramUniform2i64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64, ctypes.c_int64)),
    ('ProgramUniform2i64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('ProgramUniform2i64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('ProgramUniform2iEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ProgramUniform2iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramUniform2ivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramUniform2ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ProgramUniform2ui64ARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint64, ctypes.c_uint64)),
    ('ProgramUniform2ui64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint64, ctypes.c_uint64)),
    ('ProgramUniform2ui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('ProgramUniform2ui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('ProgramUniform2uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ProgramUniform2uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramUniform2uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramUniform3d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('ProgramUniform3dEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('ProgramUniform3dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniform3dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniform3f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ProgramUniform3fEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ProgramUniform3fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniform3fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniform3i', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ProgramUniform3i64ARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('ProgramUniform3i64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('ProgramUniform3i64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('ProgramUniform3i64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('ProgramUniform3iEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ProgramUniform3iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramUniform3ivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramUniform3ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ProgramUniform3ui64ARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64)),
    ('ProgramUniform3ui64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64)),
    ('ProgramUniform3ui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('ProgramUniform3ui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('ProgramUniform3uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ProgramUniform3uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramUniform3uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramUniform4d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('ProgramUniform4dEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('ProgramUniform4dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniform4dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniform4f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ProgramUniform4fEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ProgramUniform4fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniform4fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniform4i', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ProgramUniform4i64ARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('ProgramUniform4i64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('ProgramUniform4i64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('ProgramUniform4i64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('ProgramUniform4iEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ProgramUniform4iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramUniform4ivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ProgramUniform4ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ProgramUniform4ui64ARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64)),
    ('ProgramUniform4ui64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64)),
    ('ProgramUniform4ui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('ProgramUniform4ui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('ProgramUniform4uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ProgramUniform4uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramUniform4uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ProgramUniformHandleui64ARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint64)),
    ('ProgramUniformHandleui64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint64)),
    ('ProgramUniformHandleui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('ProgramUniformHandleui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('ProgramUniformMatrix2dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix2dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix2fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix2fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix2x3dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix2x3dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix2x3fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix2x3fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix2x4dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix2x4dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix2x4fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix2x4fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix3dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix3dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix3fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix3fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix3x2dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix3x2dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix3x2fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix3x2fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix3x4dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix3x4dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix3x4fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix3x4fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix4dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix4dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix4fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix4fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix4x2dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix4x2dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix4x2fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix4x2fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix4x3dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix4x3dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('ProgramUniformMatrix4x3fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformMatrix4x3fvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('ProgramUniformui64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint64)),
    ('ProgramUniformui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('ProgramVertexLimitNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('ProvokingVertex', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ProvokingVertexEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('PushAttrib', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('PushClientAttrib', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('PushClientAttribDefaultEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('PushDebugGroup', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('PushGroupMarkerEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('PushMatrix', ctypes.CFUNCTYPE(None)),
    ('PushName', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('QueryCounter', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('QueryMatrixxOES', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32))),
    ('QueryObjectParameteruiAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('QueryResourceNV', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('QueryResourceTagNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_char))),
    ('RasterPos2d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double)),
    ('RasterPos2dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('RasterPos2f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('RasterPos2fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('RasterPos2i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('RasterPos2iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('RasterPos2s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16)),
    ('RasterPos2sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('RasterPos2xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('RasterPos2xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('RasterPos3d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('RasterPos3dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('RasterPos3f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('RasterPos3fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('RasterPos3i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('RasterPos3iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('RasterPos3s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('RasterPos3sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('RasterPos3xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('RasterPos3xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('RasterPos4d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('RasterPos4dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('RasterPos4f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('RasterPos4fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('RasterPos4i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('RasterPos4iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('RasterPos4s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('RasterPos4sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('RasterPos4xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('RasterPos4xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('RasterSamplesEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte)),
    ('ReadBuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ReadInstrumentsSGIX', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('ReadPixels', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('ReadnPixels', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('ReadnPixelsARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('Rectd', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Rectdv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double), ctypes.POINTER(ctypes.c_double))),
    ('Rectf', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Rectfv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('Recti', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Rectiv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32))),
    ('Rects', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('Rectsv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16), ctypes.POINTER(ctypes.c_int16))),
    ('RectxOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('RectxvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32))),
    ('ReferencePlaneSGIX', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('ReleaseKeyedMutexWin32EXT', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint64)),
    ('ReleaseShaderCompiler', ctypes.CFUNCTYPE(None)),
    ('RenderGpuMaskNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('RenderMode', ctypes.CFUNCTYPE(ctypes.c_int32, ctypes.c_uint32)),
    ('RenderbufferStorage', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('RenderbufferStorageEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('RenderbufferStorageMultisample', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('RenderbufferStorageMultisampleAdvancedAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('RenderbufferStorageMultisampleCoverageNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('RenderbufferStorageMultisampleEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('ReplacementCodePointerSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('ReplacementCodeubSUN', ctypes.CFUNCTYPE(None, ctypes.c_ubyte)),
    ('ReplacementCodeubvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_ubyte))),
    ('ReplacementCodeuiColor3fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ReplacementCodeuiColor3fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('ReplacementCodeuiColor4fNormal3fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ReplacementCodeuiColor4fNormal3fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('ReplacementCodeuiColor4ubVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ReplacementCodeuiColor4ubVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_ubyte), ctypes.POINTER(ctypes.c_float))),
    ('ReplacementCodeuiNormal3fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ReplacementCodeuiNormal3fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('ReplacementCodeuiSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('ReplacementCodeuiTexCoord2fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ReplacementCodeuiTexCoord2fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('ReplacementCodeuiVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ReplacementCodeuiVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_float))),
    ('ReplacementCodeuivSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32))),
    ('ReplacementCodeusSUN', ctypes.CFUNCTYPE(None, ctypes.c_uint16)),
    ('ReplacementCodeusvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('RequestResidentProgramsNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ResetHistogram', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ResetHistogramEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ResetMemoryObjectParameterNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('ResetMinmax', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ResetMinmaxEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ResizeBuffersMESA', ctypes.CFUNCTYPE(None)),
    ('ResolveDepthValuesNV', ctypes.CFUNCTYPE(None)),
    ('ResumeTransformFeedback', ctypes.CFUNCTYPE(None)),
    ('ResumeTransformFeedbackNV', ctypes.CFUNCTYPE(None)),
    ('Rotated', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Rotatef', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('RotatexOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('SampleCoverage', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_ubyte)),
    ('SampleCoverageARB', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_ubyte)),
    ('SampleMapATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('SampleMaskEXT', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_ubyte)),
    ('SampleMaskIndexedNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('SampleMaskSGIS', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_ubyte)),
    ('SampleMaski', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('SamplePatternEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('SamplePatternSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('SamplerParameterIiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('SamplerParameterIuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('SamplerParameterf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('SamplerParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('SamplerParameteri', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('SamplerParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('Scaled', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Scalef', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ScalexOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Scissor', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ScissorArrayv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ScissorExclusiveArrayvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('ScissorExclusiveNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ScissorIndexed', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ScissorIndexedv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('SecondaryColor3b', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('SecondaryColor3bEXT', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('SecondaryColor3bv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('SecondaryColor3bvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('SecondaryColor3d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('SecondaryColor3dEXT', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('SecondaryColor3dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('SecondaryColor3dvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('SecondaryColor3f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('SecondaryColor3fEXT', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('SecondaryColor3fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('SecondaryColor3fvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('SecondaryColor3hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('SecondaryColor3hvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('SecondaryColor3i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('SecondaryColor3iEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('SecondaryColor3iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('SecondaryColor3ivEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('SecondaryColor3s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('SecondaryColor3sEXT', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('SecondaryColor3sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('SecondaryColor3svEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('SecondaryColor3ub', ctypes.CFUNCTYPE(None, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte)),
    ('SecondaryColor3ubEXT', ctypes.CFUNCTYPE(None, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte)),
    ('SecondaryColor3ubv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_ubyte))),
    ('SecondaryColor3ubvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_ubyte))),
    ('SecondaryColor3ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('SecondaryColor3uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('SecondaryColor3uiv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32))),
    ('SecondaryColor3uivEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint32))),
    ('SecondaryColor3us', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('SecondaryColor3usEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('SecondaryColor3usv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('SecondaryColor3usvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('SecondaryColorFormatNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32)),
    ('SecondaryColorP3ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('SecondaryColorP3uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('SecondaryColorPointer', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('SecondaryColorPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('SecondaryColorPointerListIBM', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(None)), ctypes.c_int32)),
    ('SelectBuffer', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('SelectPerfMonitorCountersAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('SemaphoreParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('SemaphoreParameterui64vEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('SeparableFilter2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.POINTER(None))),
    ('SeparableFilter2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.POINTER(None))),
    ('SetFenceAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('SetFenceNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('SetFragmentShaderConstantATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('SetInvariantEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('SetLocalConstantEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('SetMultisamplefvAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ShadeModel', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ShaderBinary', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_int32)),
    ('ShaderOp1EXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ShaderOp2EXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ShaderOp3EXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ShaderSource', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(ctypes.c_char)), ctypes.POINTER(ctypes.c_int32))),
    ('ShaderSourceARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(ctypes.c_char)), ctypes.POINTER(ctypes.c_int32))),
    ('ShaderStorageBlockBinding', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('ShadingRateImageBarrierNV', ctypes.CFUNCTYPE(None, ctypes.c_ubyte)),
    ('ShadingRateImagePaletteNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('ShadingRateSampleOrderCustomNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('ShadingRateSampleOrderNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('SharpenTexFuncSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('SignalSemaphoreEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32), ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32))),
    ('SignalSemaphoreui64NVX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint64))),
    ('SignalVkFenceNV', ctypes.CFUNCTYPE(None, ctypes.c_uint64)),
    ('SignalVkSemaphoreNV', ctypes.CFUNCTYPE(None, ctypes.c_uint64)),
    ('SpecializeShader', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char), ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32))),
    ('SpecializeShaderARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_char), ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32))),
    ('SpriteParameterfSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('SpriteParameterfvSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('SpriteParameteriSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('SpriteParameterivSGIX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('StartInstrumentsSGIX', ctypes.CFUNCTYPE(None)),
    ('StateCaptureNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('StencilClearTagEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32)),
    ('StencilFillPathInstancedNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('StencilFillPathNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('StencilFunc', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32)),
    ('StencilFuncSeparate', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32)),
    ('StencilFuncSeparateATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32)),
    ('StencilMask', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('StencilMaskSeparate', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('StencilOp', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('StencilOpSeparate', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('StencilOpSeparateATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('StencilOpValueAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('StencilStrokePathInstancedNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('StencilStrokePathNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32)),
    ('StencilThenCoverFillPathInstancedNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('StencilThenCoverFillPathNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('StencilThenCoverStrokePathInstancedNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('StencilThenCoverStrokePathNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('StopInstrumentsSGIX', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('StringMarkerGREMEDY', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(None))),
    ('SubpixelPrecisionBiasNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('SwizzleEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('SyncTextureINTEL', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('TagSampleBufferSGIX', ctypes.CFUNCTYPE(None)),
    ('Tangent3bEXT', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('Tangent3bvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('Tangent3dEXT', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Tangent3dvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('Tangent3fEXT', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Tangent3fvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('Tangent3iEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Tangent3ivEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('Tangent3sEXT', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('Tangent3svEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('TangentPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('TbufferMask3DFX', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('TessellationFactorAMD', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('TessellationModeAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('TestFenceAPPLE', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('TestFenceNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('TestObjectAPPLE', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint32)),
    ('TexAttachMemoryNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint64)),
    ('TexBuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('TexBufferARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('TexBufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('TexBufferRange', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('TexBumpParameterfvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('TexBumpParameterivATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TexCoord1bOES', ctypes.CFUNCTYPE(None, ctypes.c_byte)),
    ('TexCoord1bvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('TexCoord1d', ctypes.CFUNCTYPE(None, ctypes.c_double)),
    ('TexCoord1dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('TexCoord1f', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('TexCoord1fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('TexCoord1hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16)),
    ('TexCoord1hvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('TexCoord1i', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('TexCoord1iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('TexCoord1s', ctypes.CFUNCTYPE(None, ctypes.c_int16)),
    ('TexCoord1sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('TexCoord1xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('TexCoord1xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('TexCoord2bOES', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte)),
    ('TexCoord2bvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('TexCoord2d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double)),
    ('TexCoord2dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('TexCoord2f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('TexCoord2fColor3fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('TexCoord2fColor3fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('TexCoord2fColor4fNormal3fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('TexCoord2fColor4fNormal3fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('TexCoord2fColor4ubVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('TexCoord2fColor4ubVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_ubyte), ctypes.POINTER(ctypes.c_float))),
    ('TexCoord2fNormal3fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('TexCoord2fNormal3fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('TexCoord2fVertex3fSUN', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('TexCoord2fVertex3fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('TexCoord2fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('TexCoord2hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16)),
    ('TexCoord2hvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('TexCoord2i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('TexCoord2iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('TexCoord2s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16)),
    ('TexCoord2sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('TexCoord2xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('TexCoord2xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('TexCoord3bOES', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('TexCoord3bvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('TexCoord3d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('TexCoord3dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('TexCoord3f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('TexCoord3fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('TexCoord3hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('TexCoord3hvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('TexCoord3i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('TexCoord3iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('TexCoord3s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('TexCoord3sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('TexCoord3xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('TexCoord3xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('TexCoord4bOES', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('TexCoord4bvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('TexCoord4d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('TexCoord4dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('TexCoord4f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('TexCoord4fColor4fNormal3fVertex4fSUN', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('TexCoord4fColor4fNormal3fVertex4fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('TexCoord4fVertex4fSUN', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('TexCoord4fVertex4fvSUN', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float), ctypes.POINTER(ctypes.c_float))),
    ('TexCoord4fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('TexCoord4hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('TexCoord4hvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('TexCoord4i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('TexCoord4iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('TexCoord4s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('TexCoord4sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('TexCoord4xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('TexCoord4xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('TexCoordFormatNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32)),
    ('TexCoordP1ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('TexCoordP1uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('TexCoordP2ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('TexCoordP2uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('TexCoordP3ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('TexCoordP3uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('TexCoordP4ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('TexCoordP4uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('TexCoordPointer', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('TexCoordPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('TexCoordPointerListIBM', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(None)), ctypes.c_int32)),
    ('TexCoordPointervINTEL', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('TexEnvf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('TexEnvfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('TexEnvi', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('TexEnviv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TexEnvxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('TexEnvxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TexFilterFuncSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('TexGend', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_double)),
    ('TexGendv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('TexGenf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('TexGenfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('TexGeni', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('TexGeniv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TexGenxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('TexGenxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TexImage1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TexImage2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TexImage2DMultisample', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TexImage2DMultisampleCoverageNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TexImage3D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TexImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TexImage3DMultisample', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TexImage3DMultisampleCoverageNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TexImage4DSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TexPageCommitmentARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TexPageCommitmentMemNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_ubyte)),
    ('TexParameterIiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TexParameterIivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TexParameterIuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('TexParameterIuivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('TexParameterf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('TexParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('TexParameteri', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('TexParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TexParameterxOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('TexParameterxvOES', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TexRenderbufferNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('TexStorage1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32)),
    ('TexStorage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32)),
    ('TexStorage2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('TexStorage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('TexStorage2DMultisample', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TexStorage3D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('TexStorage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('TexStorage3DMultisample', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TexStorageMem1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint64)),
    ('TexStorageMem2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint64)),
    ('TexStorageMem2DMultisampleEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint64)),
    ('TexStorageMem3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint64)),
    ('TexStorageMem3DMultisampleEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint64)),
    ('TexStorageSparseAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32)),
    ('TexSubImage1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TexSubImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TexSubImage2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TexSubImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TexSubImage3D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TexSubImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TexSubImage4DSGIS', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TextureAttachMemoryNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint64)),
    ('TextureBarrier', ctypes.CFUNCTYPE(None)),
    ('TextureBarrierNV', ctypes.CFUNCTYPE(None)),
    ('TextureBuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('TextureBufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('TextureBufferRange', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('TextureBufferRangeEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('TextureColorMaskSGIS', ctypes.CFUNCTYPE(None, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte)),
    ('TextureImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TextureImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TextureImage2DMultisampleCoverageNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TextureImage2DMultisampleNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TextureImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TextureImage3DMultisampleCoverageNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TextureImage3DMultisampleNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TextureLightEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('TextureMaterialEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('TextureNormalEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('TexturePageCommitmentEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TexturePageCommitmentMemNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_ubyte)),
    ('TextureParameterIiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TextureParameterIivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TextureParameterIuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('TextureParameterIuivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('TextureParameterf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('TextureParameterfEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_float)),
    ('TextureParameterfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('TextureParameterfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('TextureParameteri', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('TextureParameteriEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('TextureParameteriv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TextureParameterivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('TextureRangeAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('TextureRenderbufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('TextureStorage1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32)),
    ('TextureStorage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32)),
    ('TextureStorage2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('TextureStorage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('TextureStorage2DMultisample', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TextureStorage2DMultisampleEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TextureStorage3D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('TextureStorage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('TextureStorage3DMultisample', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TextureStorage3DMultisampleEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte)),
    ('TextureStorageMem1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint64)),
    ('TextureStorageMem2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint64)),
    ('TextureStorageMem2DMultisampleEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint64)),
    ('TextureStorageMem3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint64)),
    ('TextureStorageMem3DMultisampleEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.c_uint32, ctypes.c_uint64)),
    ('TextureStorageSparseAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32)),
    ('TextureSubImage1D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TextureSubImage1DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TextureSubImage2D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TextureSubImage2DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TextureSubImage3D', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TextureSubImage3DEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('TextureView', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('TrackMatrixNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('TransformFeedbackAttribsNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.c_uint32)),
    ('TransformFeedbackBufferBase', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('TransformFeedbackBufferRange', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('TransformFeedbackStreamAttribsNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.c_uint32)),
    ('TransformFeedbackVaryings', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(ctypes.c_char)), ctypes.c_uint32)),
    ('TransformFeedbackVaryingsEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(ctypes.c_char)), ctypes.c_uint32)),
    ('TransformFeedbackVaryingsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.c_uint32)),
    ('TransformPathNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('Translated', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Translatef', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('TranslatexOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Uniform1d', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_double)),
    ('Uniform1dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('Uniform1f', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_float)),
    ('Uniform1fARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_float)),
    ('Uniform1fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Uniform1fvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Uniform1i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('Uniform1i64ARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int64)),
    ('Uniform1i64NV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int64)),
    ('Uniform1i64vARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('Uniform1i64vNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('Uniform1iARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('Uniform1iv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('Uniform1ivARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('Uniform1ui', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32)),
    ('Uniform1ui64ARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint64)),
    ('Uniform1ui64NV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint64)),
    ('Uniform1ui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('Uniform1ui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('Uniform1uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32)),
    ('Uniform1uiv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('Uniform1uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('Uniform2d', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_double, ctypes.c_double)),
    ('Uniform2dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('Uniform2f', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_float, ctypes.c_float)),
    ('Uniform2fARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_float, ctypes.c_float)),
    ('Uniform2fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Uniform2fvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Uniform2i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Uniform2i64ARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int64, ctypes.c_int64)),
    ('Uniform2i64NV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int64, ctypes.c_int64)),
    ('Uniform2i64vARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('Uniform2i64vNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('Uniform2iARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Uniform2iv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('Uniform2ivARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('Uniform2ui', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('Uniform2ui64ARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint64, ctypes.c_uint64)),
    ('Uniform2ui64NV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint64, ctypes.c_uint64)),
    ('Uniform2ui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('Uniform2ui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('Uniform2uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('Uniform2uiv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('Uniform2uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('Uniform3d', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Uniform3dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('Uniform3f', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Uniform3fARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Uniform3fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Uniform3fvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Uniform3i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Uniform3i64ARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('Uniform3i64NV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('Uniform3i64vARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('Uniform3i64vNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('Uniform3iARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Uniform3iv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('Uniform3ivARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('Uniform3ui', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('Uniform3ui64ARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64)),
    ('Uniform3ui64NV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64)),
    ('Uniform3ui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('Uniform3ui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('Uniform3uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('Uniform3uiv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('Uniform3uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('Uniform4d', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Uniform4dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('Uniform4f', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Uniform4fARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Uniform4fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Uniform4fvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('Uniform4i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Uniform4i64ARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('Uniform4i64NV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('Uniform4i64vARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('Uniform4i64vNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('Uniform4iARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Uniform4iv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('Uniform4ivARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('Uniform4ui', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('Uniform4ui64ARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64)),
    ('Uniform4ui64NV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64)),
    ('Uniform4ui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('Uniform4ui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('Uniform4uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('Uniform4uiv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('Uniform4uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('UniformBlockBinding', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('UniformBufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32)),
    ('UniformHandleui64ARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint64)),
    ('UniformHandleui64NV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint64)),
    ('UniformHandleui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('UniformHandleui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('UniformMatrix2dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('UniformMatrix2fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('UniformMatrix2fvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('UniformMatrix2x3dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('UniformMatrix2x3fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('UniformMatrix2x4dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('UniformMatrix2x4fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('UniformMatrix3dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('UniformMatrix3fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('UniformMatrix3fvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('UniformMatrix3x2dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('UniformMatrix3x2fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('UniformMatrix3x4dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('UniformMatrix3x4fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('UniformMatrix4dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('UniformMatrix4fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('UniformMatrix4fvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('UniformMatrix4x2dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('UniformMatrix4x2fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('UniformMatrix4x3dv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_double))),
    ('UniformMatrix4x3fv', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_float))),
    ('UniformSubroutinesuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('Uniformui64NV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint64)),
    ('Uniformui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint64))),
    ('UnlockArraysEXT', ctypes.CFUNCTYPE(None)),
    ('UnmapBuffer', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('UnmapBufferARB', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('UnmapNamedBuffer', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('UnmapNamedBufferEXT', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_uint32)),
    ('UnmapObjectBufferATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('UnmapTexture2DINTEL', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('UpdateObjectBufferATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None), ctypes.c_uint32)),
    ('UploadGpuMaskNVX', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('UseProgram', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('UseProgramObjectARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('UseProgramStages', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('UseShaderProgramEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('VDPAUFiniNV', ctypes.CFUNCTYPE(None)),
    ('VDPAUGetSurfaceivNV', ctypes.CFUNCTYPE(None, ctypes.c_int64, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32), ctypes.POINTER(ctypes.c_int32))),
    ('VDPAUInitNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(None), ctypes.POINTER(None))),
    ('VDPAUIsSurfaceNV', ctypes.CFUNCTYPE(ctypes.c_ubyte, ctypes.c_int64)),
    ('VDPAUMapSurfacesNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('VDPAURegisterOutputSurfaceNV', ctypes.CFUNCTYPE(ctypes.c_int64, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('VDPAURegisterVideoSurfaceNV', ctypes.CFUNCTYPE(ctypes.c_int64, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('VDPAURegisterVideoSurfaceWithPictureStructureNV', ctypes.CFUNCTYPE(ctypes.c_int64, ctypes.POINTER(None), ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.c_ubyte)),
    ('VDPAUSurfaceAccessNV', ctypes.CFUNCTYPE(None, ctypes.c_int64, ctypes.c_uint32)),
    ('VDPAUUnmapSurfacesNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_int64))),
    ('VDPAUUnregisterSurfaceNV', ctypes.CFUNCTYPE(None, ctypes.c_int64)),
    ('ValidateProgram', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ValidateProgramARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('ValidateProgramPipeline', ctypes.CFUNCTYPE(None, ctypes.c_uint32)),
    ('VariantArrayObjectATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VariantPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(None))),
    ('VariantbvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_byte))),
    ('VariantdvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VariantfvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VariantivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VariantsvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VariantubvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('VariantuivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VariantusvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('Vertex2bOES', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte)),
    ('Vertex2bvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('Vertex2d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double)),
    ('Vertex2dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('Vertex2f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('Vertex2fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('Vertex2hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16)),
    ('Vertex2hvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('Vertex2i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('Vertex2iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('Vertex2s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16)),
    ('Vertex2sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('Vertex2xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('Vertex2xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('Vertex3bOES', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('Vertex3bvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('Vertex3d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Vertex3dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('Vertex3f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Vertex3fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('Vertex3hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('Vertex3hvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('Vertex3i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Vertex3iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('Vertex3s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('Vertex3sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('Vertex3xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('Vertex3xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('Vertex4bOES', ctypes.CFUNCTYPE(None, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte, ctypes.c_byte)),
    ('Vertex4bvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_byte))),
    ('Vertex4d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('Vertex4dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('Vertex4f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('Vertex4fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('Vertex4hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('Vertex4hvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('Vertex4i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Vertex4iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('Vertex4s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('Vertex4sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('Vertex4xOES', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('Vertex4xvOES', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('VertexArrayAttribBinding', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexArrayAttribFormat', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32)),
    ('VertexArrayAttribIFormat', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexArrayAttribLFormat', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexArrayBindVertexBufferEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int32)),
    ('VertexArrayBindingDivisor', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexArrayColorOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('VertexArrayEdgeFlagOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('VertexArrayElementBuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexArrayFogCoordOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('VertexArrayIndexOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('VertexArrayMultiTexCoordOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('VertexArrayNormalOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('VertexArrayParameteriAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('VertexArrayRangeAPPLE', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(None))),
    ('VertexArrayRangeNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(None))),
    ('VertexArraySecondaryColorOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('VertexArrayTexCoordOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('VertexArrayVertexAttribBindingEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexArrayVertexAttribDivisorEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexArrayVertexAttribFormatEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32)),
    ('VertexArrayVertexAttribIFormatEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexArrayVertexAttribIOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('VertexArrayVertexAttribLFormatEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexArrayVertexAttribLOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('VertexArrayVertexAttribOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_int32, ctypes.c_int64)),
    ('VertexArrayVertexBindingDivisorEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexArrayVertexBuffer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int32)),
    ('VertexArrayVertexBuffers', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_int64), ctypes.POINTER(ctypes.c_int32))),
    ('VertexArrayVertexOffsetEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int64)),
    ('VertexAttrib1d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double)),
    ('VertexAttrib1dARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double)),
    ('VertexAttrib1dNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double)),
    ('VertexAttrib1dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttrib1dvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttrib1dvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttrib1f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('VertexAttrib1fARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('VertexAttrib1fNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('VertexAttrib1fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttrib1fvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttrib1fvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttrib1hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint16)),
    ('VertexAttrib1hvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttrib1s', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16)),
    ('VertexAttrib1sARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16)),
    ('VertexAttrib1sNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16)),
    ('VertexAttrib1sv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib1svARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib1svNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib2d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double)),
    ('VertexAttrib2dARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double)),
    ('VertexAttrib2dNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double)),
    ('VertexAttrib2dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttrib2dvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttrib2dvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttrib2f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float)),
    ('VertexAttrib2fARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float)),
    ('VertexAttrib2fNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float)),
    ('VertexAttrib2fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttrib2fvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttrib2fvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttrib2hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint16, ctypes.c_uint16)),
    ('VertexAttrib2hvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttrib2s', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16)),
    ('VertexAttrib2sARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16)),
    ('VertexAttrib2sNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16)),
    ('VertexAttrib2sv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib2svARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib2svNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib3d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('VertexAttrib3dARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('VertexAttrib3dNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('VertexAttrib3dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttrib3dvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttrib3dvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttrib3f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('VertexAttrib3fARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('VertexAttrib3fNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('VertexAttrib3fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttrib3fvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttrib3fvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttrib3hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('VertexAttrib3hvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttrib3s', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('VertexAttrib3sARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('VertexAttrib3sNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('VertexAttrib3sv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib3svARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib3svNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib4Nbv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_byte))),
    ('VertexAttrib4NbvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_byte))),
    ('VertexAttrib4Niv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexAttrib4NivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexAttrib4Nsv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib4NsvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib4Nub', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte)),
    ('VertexAttrib4NubARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte)),
    ('VertexAttrib4Nubv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('VertexAttrib4NubvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('VertexAttrib4Nuiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttrib4NuivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttrib4Nusv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttrib4NusvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttrib4bv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_byte))),
    ('VertexAttrib4bvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_byte))),
    ('VertexAttrib4d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('VertexAttrib4dARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('VertexAttrib4dNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('VertexAttrib4dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttrib4dvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttrib4dvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttrib4f', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('VertexAttrib4fARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('VertexAttrib4fNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('VertexAttrib4fv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttrib4fvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttrib4fvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttrib4hNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16, ctypes.c_uint16)),
    ('VertexAttrib4hvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttrib4iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexAttrib4ivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexAttrib4s', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('VertexAttrib4sARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('VertexAttrib4sNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('VertexAttrib4sv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib4svARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib4svNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttrib4ubNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte, ctypes.c_ubyte)),
    ('VertexAttrib4ubv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('VertexAttrib4ubvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('VertexAttrib4ubvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('VertexAttrib4uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttrib4uivARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttrib4usv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttrib4usvARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttribArrayObjectATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribBinding', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribDivisor', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribDivisorARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribFormat', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32)),
    ('VertexAttribFormatNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_int32)),
    ('VertexAttribI1i', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('VertexAttribI1iEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('VertexAttribI1iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexAttribI1ivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexAttribI1ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribI1uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribI1uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttribI1uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttribI2i', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('VertexAttribI2iEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('VertexAttribI2iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexAttribI2ivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexAttribI2ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribI2uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribI2uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttribI2uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttribI3i', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('VertexAttribI3iEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('VertexAttribI3iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexAttribI3ivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexAttribI3ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribI3uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribI3uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttribI3uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttribI4bv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_byte))),
    ('VertexAttribI4bvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_byte))),
    ('VertexAttribI4i', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('VertexAttribI4iEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('VertexAttribI4iv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexAttribI4ivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexAttribI4sv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttribI4svEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttribI4ubv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('VertexAttribI4ubvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_ubyte))),
    ('VertexAttribI4ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribI4uiEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribI4uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttribI4uivEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttribI4usv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttribI4usvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttribIFormat', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribIFormatNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32)),
    ('VertexAttribIPointer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('VertexAttribIPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('VertexAttribL1d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double)),
    ('VertexAttribL1dEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double)),
    ('VertexAttribL1dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttribL1dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttribL1i64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64)),
    ('VertexAttribL1i64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('VertexAttribL1ui64ARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint64)),
    ('VertexAttribL1ui64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint64)),
    ('VertexAttribL1ui64vARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('VertexAttribL1ui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('VertexAttribL2d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double)),
    ('VertexAttribL2dEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double)),
    ('VertexAttribL2dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttribL2dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttribL2i64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64)),
    ('VertexAttribL2i64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('VertexAttribL2ui64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_uint64)),
    ('VertexAttribL2ui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('VertexAttribL3d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('VertexAttribL3dEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('VertexAttribL3dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttribL3dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttribL3i64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('VertexAttribL3i64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('VertexAttribL3ui64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64)),
    ('VertexAttribL3ui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('VertexAttribL4d', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('VertexAttribL4dEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('VertexAttribL4dv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttribL4dvEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttribL4i64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64, ctypes.c_int64)),
    ('VertexAttribL4i64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int64))),
    ('VertexAttribL4ui64NV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64, ctypes.c_uint64)),
    ('VertexAttribL4ui64vNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint64))),
    ('VertexAttribLFormat', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexAttribLFormatNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32)),
    ('VertexAttribLPointer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('VertexAttribLPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('VertexAttribP1ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32)),
    ('VertexAttribP1uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttribP2ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32)),
    ('VertexAttribP2uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttribP3ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32)),
    ('VertexAttribP3uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttribP4ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_uint32)),
    ('VertexAttribP4uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexAttribParameteriAMD', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_int32)),
    ('VertexAttribPointer', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_int32, ctypes.POINTER(None))),
    ('VertexAttribPointerARB', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_ubyte, ctypes.c_int32, ctypes.POINTER(None))),
    ('VertexAttribPointerNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('VertexAttribs1dvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttribs1fvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttribs1hvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttribs1svNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttribs2dvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttribs2fvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttribs2hvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttribs2svNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttribs3dvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttribs3fvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttribs3hvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttribs3svNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttribs4dvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('VertexAttribs4fvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('VertexAttribs4hvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint16))),
    ('VertexAttribs4svNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexAttribs4ubvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte))),
    ('VertexBindingDivisor', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexBlendARB', ctypes.CFUNCTYPE(None, ctypes.c_int32)),
    ('VertexBlendEnvfATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('VertexBlendEnviATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('VertexFormatNV', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32)),
    ('VertexP2ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexP2uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexP3ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexP3uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexP4ui', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32)),
    ('VertexP4uiv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32))),
    ('VertexPointer', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('VertexPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.POINTER(None))),
    ('VertexPointerListIBM', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.POINTER(None)), ctypes.c_int32)),
    ('VertexPointervINTEL', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.POINTER(ctypes.POINTER(None)))),
    ('VertexStream1dATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double)),
    ('VertexStream1dvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexStream1fATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float)),
    ('VertexStream1fvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexStream1iATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32)),
    ('VertexStream1ivATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexStream1sATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16)),
    ('VertexStream1svATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexStream2dATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double)),
    ('VertexStream2dvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexStream2fATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float)),
    ('VertexStream2fvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexStream2iATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32)),
    ('VertexStream2ivATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexStream2sATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16)),
    ('VertexStream2svATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexStream3dATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('VertexStream3dvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexStream3fATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('VertexStream3fvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexStream3iATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('VertexStream3ivATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexStream3sATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('VertexStream3svATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexStream4dATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('VertexStream4dvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VertexStream4fATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('VertexStream4fvATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VertexStream4iATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('VertexStream4ivATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('VertexStream4sATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('VertexStream4svATI', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int16))),
    ('VertexWeightPointerEXT', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('VertexWeightfEXT', ctypes.CFUNCTYPE(None, ctypes.c_float)),
    ('VertexWeightfvEXT', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('VertexWeighthNV', ctypes.CFUNCTYPE(None, ctypes.c_uint16)),
    ('VertexWeighthvNV', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_uint16))),
    ('VideoCaptureNV', ctypes.CFUNCTYPE(ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint64))),
    ('VideoCaptureStreamParameterdvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_double))),
    ('VideoCaptureStreamParameterfvNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('VideoCaptureStreamParameterivNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_int32))),
    ('Viewport', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('ViewportArrayv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('ViewportIndexedf', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('ViewportIndexedfv', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.POINTER(ctypes.c_float))),
    ('ViewportPositionWScaleNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_float, ctypes.c_float)),
    ('ViewportSwizzleNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('WaitSemaphoreEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32), ctypes.c_uint32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint32))),
    ('WaitSemaphoreui64NVX', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_uint64))),
    ('WaitSync', ctypes.CFUNCTYPE(None, ctypes.POINTER(struct___GLsync), ctypes.c_uint32, ctypes.c_uint64)),
    ('WaitVkSemaphoreNV', ctypes.CFUNCTYPE(None, ctypes.c_uint64)),
    ('WeightPathsNV', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32), ctypes.POINTER(ctypes.c_float))),
    ('WeightPointerARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(None))),
    ('WeightbvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_byte))),
    ('WeightdvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_double))),
    ('WeightfvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_float))),
    ('WeightivARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('WeightsvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_int16))),
    ('WeightubvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_ubyte))),
    ('WeightuivARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint32))),
    ('WeightusvARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.POINTER(ctypes.c_uint16))),
    ('WindowPos2d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double)),
    ('WindowPos2dARB', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double)),
    ('WindowPos2dMESA', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double)),
    ('WindowPos2dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('WindowPos2dvARB', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('WindowPos2dvMESA', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('WindowPos2f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('WindowPos2fARB', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('WindowPos2fMESA', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float)),
    ('WindowPos2fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('WindowPos2fvARB', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('WindowPos2fvMESA', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('WindowPos2i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('WindowPos2iARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('WindowPos2iMESA', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32)),
    ('WindowPos2iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('WindowPos2ivARB', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('WindowPos2ivMESA', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('WindowPos2s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16)),
    ('WindowPos2sARB', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16)),
    ('WindowPos2sMESA', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16)),
    ('WindowPos2sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('WindowPos2svARB', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('WindowPos2svMESA', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('WindowPos3d', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('WindowPos3dARB', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('WindowPos3dMESA', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('WindowPos3dv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('WindowPos3dvARB', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('WindowPos3dvMESA', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('WindowPos3f', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('WindowPos3fARB', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('WindowPos3fMESA', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('WindowPos3fv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('WindowPos3fvARB', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('WindowPos3fvMESA', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('WindowPos3i', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('WindowPos3iARB', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('WindowPos3iMESA', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('WindowPos3iv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('WindowPos3ivARB', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('WindowPos3ivMESA', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('WindowPos3s', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('WindowPos3sARB', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('WindowPos3sMESA', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('WindowPos3sv', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('WindowPos3svARB', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('WindowPos3svMESA', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('WindowPos4dMESA', ctypes.CFUNCTYPE(None, ctypes.c_double, ctypes.c_double, ctypes.c_double, ctypes.c_double)),
    ('WindowPos4dvMESA', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_double))),
    ('WindowPos4fMESA', ctypes.CFUNCTYPE(None, ctypes.c_float, ctypes.c_float, ctypes.c_float, ctypes.c_float)),
    ('WindowPos4fvMESA', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_float))),
    ('WindowPos4iMESA', ctypes.CFUNCTYPE(None, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32, ctypes.c_int32)),
    ('WindowPos4ivMESA', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int32))),
    ('WindowPos4sMESA', ctypes.CFUNCTYPE(None, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16, ctypes.c_int16)),
    ('WindowPos4svMESA', ctypes.CFUNCTYPE(None, ctypes.POINTER(ctypes.c_int16))),
    ('WindowRectanglesEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_int32, ctypes.POINTER(ctypes.c_int32))),
    ('WriteMaskEXT', ctypes.CFUNCTYPE(None, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32, ctypes.c_uint32)),
    ('glad_loader_handle', ctypes.POINTER(None)),
]

__all__ = \
    ['GLAD_API_PTR', 'GLAD_GENERATOR_VERSION', 'GLAD_GL',
    'GLAD_GL_H_', 'GLAD_OPTION_GL_ALIAS', 'GLAD_OPTION_GL_LOADER',
    'GLAD_OPTION_GL_MX', 'GLAD_PLATFORM_APPLE',
    'GLAD_PLATFORM_EMSCRIPTEN', 'GLAD_PLATFORM_H_',
    'GLAD_PLATFORM_UWP', 'GLAD_PLATFORM_WIN32', 'GLAPIENTRY',
    'GL_1PASS_EXT', 'GL_1PASS_SGIS', 'GL_2D', 'GL_2PASS_0_EXT',
    'GL_2PASS_0_SGIS', 'GL_2PASS_1_EXT', 'GL_2PASS_1_SGIS',
    'GL_2X_BIT_ATI', 'GL_2_BYTES', 'GL_2_BYTES_NV', 'GL_3D',
    'GL_3DFX_multisample', 'GL_3DFX_tbuffer',
    'GL_3DFX_texture_compression_FXT1', 'GL_3D_COLOR',
    'GL_3D_COLOR_TEXTURE', 'GL_3_BYTES', 'GL_3_BYTES_NV',
    'GL_422_AVERAGE_EXT', 'GL_422_EXT', 'GL_422_REV_AVERAGE_EXT',
    'GL_422_REV_EXT', 'GL_4D_COLOR_TEXTURE', 'GL_4PASS_0_EXT',
    'GL_4PASS_0_SGIS', 'GL_4PASS_1_EXT', 'GL_4PASS_1_SGIS',
    'GL_4PASS_2_EXT', 'GL_4PASS_2_SGIS', 'GL_4PASS_3_EXT',
    'GL_4PASS_3_SGIS', 'GL_4X_BIT_ATI', 'GL_4_BYTES', 'GL_4_BYTES_NV',
    'GL_8X_BIT_ATI', 'GL_ABGR_EXT', 'GL_ACCUM',
    'GL_ACCUM_ADJACENT_PAIRS_NV', 'GL_ACCUM_ALPHA_BITS',
    'GL_ACCUM_BLUE_BITS', 'GL_ACCUM_BUFFER_BIT',
    'GL_ACCUM_CLEAR_VALUE', 'GL_ACCUM_GREEN_BITS',
    'GL_ACCUM_RED_BITS', 'GL_ACTIVE_ATOMIC_COUNTER_BUFFERS',
    'GL_ACTIVE_ATTRIBUTES', 'GL_ACTIVE_ATTRIBUTE_MAX_LENGTH',
    'GL_ACTIVE_PROGRAM', 'GL_ACTIVE_PROGRAM_EXT',
    'GL_ACTIVE_RESOURCES', 'GL_ACTIVE_STENCIL_FACE_EXT',
    'GL_ACTIVE_SUBROUTINES', 'GL_ACTIVE_SUBROUTINE_MAX_LENGTH',
    'GL_ACTIVE_SUBROUTINE_UNIFORMS',
    'GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS',
    'GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH', 'GL_ACTIVE_TEXTURE',
    'GL_ACTIVE_TEXTURE_ARB', 'GL_ACTIVE_UNIFORMS',
    'GL_ACTIVE_UNIFORM_BLOCKS',
    'GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH',
    'GL_ACTIVE_UNIFORM_MAX_LENGTH', 'GL_ACTIVE_VARIABLES',
    'GL_ACTIVE_VARYINGS_NV', 'GL_ACTIVE_VARYING_MAX_LENGTH_NV',
    'GL_ACTIVE_VERTEX_UNITS_ARB', 'GL_ADD', 'GL_ADD_ATI',
    'GL_ADD_SIGNED', 'GL_ADD_SIGNED_ARB', 'GL_ADD_SIGNED_EXT',
    'GL_ADJACENT_PAIRS_NV', 'GL_AFFINE_2D_NV', 'GL_AFFINE_3D_NV',
    'GL_ALIASED_LINE_WIDTH_RANGE', 'GL_ALIASED_POINT_SIZE_RANGE',
    'GL_ALLOW_DRAW_FRG_HINT_PGI', 'GL_ALLOW_DRAW_MEM_HINT_PGI',
    'GL_ALLOW_DRAW_OBJ_HINT_PGI', 'GL_ALLOW_DRAW_WIN_HINT_PGI',
    'GL_ALL_ATTRIB_BITS', 'GL_ALL_BARRIER_BITS',
    'GL_ALL_BARRIER_BITS_EXT', 'GL_ALL_COMPLETED_NV',
    'GL_ALL_PIXELS_AMD', 'GL_ALL_SHADER_BITS',
    'GL_ALL_STATIC_DATA_IBM', 'GL_ALPHA', 'GL_ALPHA12',
    'GL_ALPHA12_EXT', 'GL_ALPHA16', 'GL_ALPHA16F_ARB',
    'GL_ALPHA16F_EXT', 'GL_ALPHA16I_EXT', 'GL_ALPHA16UI_EXT',
    'GL_ALPHA16_EXT', 'GL_ALPHA16_SNORM', 'GL_ALPHA32F_ARB',
    'GL_ALPHA32F_EXT', 'GL_ALPHA32I_EXT', 'GL_ALPHA32UI_EXT',
    'GL_ALPHA4', 'GL_ALPHA4_EXT', 'GL_ALPHA8', 'GL_ALPHA8I_EXT',
    'GL_ALPHA8UI_EXT', 'GL_ALPHA8_EXT', 'GL_ALPHA8_SNORM',
    'GL_ALPHA_BIAS', 'GL_ALPHA_BITS', 'GL_ALPHA_FLOAT16_APPLE',
    'GL_ALPHA_FLOAT16_ATI', 'GL_ALPHA_FLOAT32_APPLE',
    'GL_ALPHA_FLOAT32_ATI', 'GL_ALPHA_INTEGER',
    'GL_ALPHA_INTEGER_EXT', 'GL_ALPHA_MAX_CLAMP_INGR',
    'GL_ALPHA_MAX_SGIX', 'GL_ALPHA_MIN_CLAMP_INGR',
    'GL_ALPHA_MIN_SGIX', 'GL_ALPHA_REF_COMMAND_NV', 'GL_ALPHA_SCALE',
    'GL_ALPHA_SNORM', 'GL_ALPHA_TEST', 'GL_ALPHA_TEST_FUNC',
    'GL_ALPHA_TEST_REF', 'GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV',
    'GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV',
    'GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV',
    'GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV', 'GL_ALREADY_SIGNALED',
    'GL_ALWAYS', 'GL_ALWAYS_FAST_HINT_PGI', 'GL_ALWAYS_SOFT_HINT_PGI',
    'GL_AMBIENT', 'GL_AMBIENT_AND_DIFFUSE',
    'GL_AMD_blend_minmax_factor', 'GL_AMD_conservative_depth',
    'GL_AMD_debug_output', 'GL_AMD_depth_clamp_separate',
    'GL_AMD_draw_buffers_blend',
    'GL_AMD_framebuffer_multisample_advanced',
    'GL_AMD_framebuffer_sample_positions', 'GL_AMD_gcn_shader',
    'GL_AMD_gpu_shader_half_float', 'GL_AMD_gpu_shader_int16',
    'GL_AMD_gpu_shader_int64', 'GL_AMD_interleaved_elements',
    'GL_AMD_multi_draw_indirect', 'GL_AMD_name_gen_delete',
    'GL_AMD_occlusion_query_event', 'GL_AMD_performance_monitor',
    'GL_AMD_pinned_memory', 'GL_AMD_query_buffer_object',
    'GL_AMD_sample_positions', 'GL_AMD_seamless_cubemap_per_texture',
    'GL_AMD_shader_atomic_counter_ops', 'GL_AMD_shader_ballot',
    'GL_AMD_shader_explicit_vertex_parameter',
    'GL_AMD_shader_gpu_shader_half_float_fetch',
    'GL_AMD_shader_image_load_store_lod',
    'GL_AMD_shader_stencil_export', 'GL_AMD_shader_trinary_minmax',
    'GL_AMD_sparse_texture', 'GL_AMD_stencil_operation_extended',
    'GL_AMD_texture_gather_bias_lod', 'GL_AMD_texture_texture4',
    'GL_AMD_transform_feedback3_lines_triangles',
    'GL_AMD_transform_feedback4', 'GL_AMD_vertex_shader_layer',
    'GL_AMD_vertex_shader_tessellator',
    'GL_AMD_vertex_shader_viewport_index', 'GL_AND',
    'GL_AND_INVERTED', 'GL_AND_REVERSE', 'GL_ANY_SAMPLES_PASSED',
    'GL_ANY_SAMPLES_PASSED_CONSERVATIVE',
    'GL_APPLE_aux_depth_stencil', 'GL_APPLE_client_storage',
    'GL_APPLE_element_array', 'GL_APPLE_fence',
    'GL_APPLE_float_pixels', 'GL_APPLE_flush_buffer_range',
    'GL_APPLE_object_purgeable', 'GL_APPLE_rgb_422',
    'GL_APPLE_row_bytes', 'GL_APPLE_specular_vector',
    'GL_APPLE_texture_range', 'GL_APPLE_transform_hint',
    'GL_APPLE_vertex_array_object', 'GL_APPLE_vertex_array_range',
    'GL_APPLE_vertex_program_evaluators', 'GL_APPLE_ycbcr_422',
    'GL_ARB_ES2_compatibility', 'GL_ARB_ES3_1_compatibility',
    'GL_ARB_ES3_2_compatibility', 'GL_ARB_ES3_compatibility',
    'GL_ARB_arrays_of_arrays', 'GL_ARB_base_instance',
    'GL_ARB_bindless_texture', 'GL_ARB_blend_func_extended',
    'GL_ARB_buffer_storage', 'GL_ARB_cl_event',
    'GL_ARB_clear_buffer_object', 'GL_ARB_clear_texture',
    'GL_ARB_clip_control', 'GL_ARB_color_buffer_float',
    'GL_ARB_compatibility', 'GL_ARB_compressed_texture_pixel_storage',
    'GL_ARB_compute_shader', 'GL_ARB_compute_variable_group_size',
    'GL_ARB_conditional_render_inverted', 'GL_ARB_conservative_depth',
    'GL_ARB_copy_buffer', 'GL_ARB_copy_image', 'GL_ARB_cull_distance',
    'GL_ARB_debug_output', 'GL_ARB_depth_buffer_float',
    'GL_ARB_depth_clamp', 'GL_ARB_depth_texture',
    'GL_ARB_derivative_control', 'GL_ARB_direct_state_access',
    'GL_ARB_draw_buffers', 'GL_ARB_draw_buffers_blend',
    'GL_ARB_draw_elements_base_vertex', 'GL_ARB_draw_indirect',
    'GL_ARB_draw_instanced', 'GL_ARB_enhanced_layouts',
    'GL_ARB_explicit_attrib_location',
    'GL_ARB_explicit_uniform_location',
    'GL_ARB_fragment_coord_conventions',
    'GL_ARB_fragment_layer_viewport', 'GL_ARB_fragment_program',
    'GL_ARB_fragment_program_shadow', 'GL_ARB_fragment_shader',
    'GL_ARB_fragment_shader_interlock',
    'GL_ARB_framebuffer_no_attachments', 'GL_ARB_framebuffer_object',
    'GL_ARB_framebuffer_sRGB', 'GL_ARB_geometry_shader4',
    'GL_ARB_get_program_binary', 'GL_ARB_get_texture_sub_image',
    'GL_ARB_gl_spirv', 'GL_ARB_gpu_shader5', 'GL_ARB_gpu_shader_fp64',
    'GL_ARB_gpu_shader_int64', 'GL_ARB_half_float_pixel',
    'GL_ARB_half_float_vertex', 'GL_ARB_imaging',
    'GL_ARB_indirect_parameters', 'GL_ARB_instanced_arrays',
    'GL_ARB_internalformat_query', 'GL_ARB_internalformat_query2',
    'GL_ARB_invalidate_subdata', 'GL_ARB_map_buffer_alignment',
    'GL_ARB_map_buffer_range', 'GL_ARB_matrix_palette',
    'GL_ARB_multi_bind', 'GL_ARB_multi_draw_indirect',
    'GL_ARB_multisample', 'GL_ARB_multitexture',
    'GL_ARB_occlusion_query', 'GL_ARB_occlusion_query2',
    'GL_ARB_parallel_shader_compile',
    'GL_ARB_pipeline_statistics_query', 'GL_ARB_pixel_buffer_object',
    'GL_ARB_point_parameters', 'GL_ARB_point_sprite',
    'GL_ARB_polygon_offset_clamp', 'GL_ARB_post_depth_coverage',
    'GL_ARB_program_interface_query', 'GL_ARB_provoking_vertex',
    'GL_ARB_query_buffer_object',
    'GL_ARB_robust_buffer_access_behavior', 'GL_ARB_robustness',
    'GL_ARB_robustness_isolation', 'GL_ARB_sample_locations',
    'GL_ARB_sample_shading', 'GL_ARB_sampler_objects',
    'GL_ARB_seamless_cube_map', 'GL_ARB_seamless_cubemap_per_texture',
    'GL_ARB_separate_shader_objects',
    'GL_ARB_shader_atomic_counter_ops',
    'GL_ARB_shader_atomic_counters', 'GL_ARB_shader_ballot',
    'GL_ARB_shader_bit_encoding', 'GL_ARB_shader_clock',
    'GL_ARB_shader_draw_parameters', 'GL_ARB_shader_group_vote',
    'GL_ARB_shader_image_load_store', 'GL_ARB_shader_image_size',
    'GL_ARB_shader_objects', 'GL_ARB_shader_precision',
    'GL_ARB_shader_stencil_export',
    'GL_ARB_shader_storage_buffer_object', 'GL_ARB_shader_subroutine',
    'GL_ARB_shader_texture_image_samples',
    'GL_ARB_shader_texture_lod', 'GL_ARB_shader_viewport_layer_array',
    'GL_ARB_shading_language_100', 'GL_ARB_shading_language_420pack',
    'GL_ARB_shading_language_include',
    'GL_ARB_shading_language_packing', 'GL_ARB_shadow',
    'GL_ARB_shadow_ambient', 'GL_ARB_sparse_buffer',
    'GL_ARB_sparse_texture', 'GL_ARB_sparse_texture2',
    'GL_ARB_sparse_texture_clamp', 'GL_ARB_spirv_extensions',
    'GL_ARB_stencil_texturing', 'GL_ARB_sync',
    'GL_ARB_tessellation_shader', 'GL_ARB_texture_barrier',
    'GL_ARB_texture_border_clamp', 'GL_ARB_texture_buffer_object',
    'GL_ARB_texture_buffer_object_rgb32',
    'GL_ARB_texture_buffer_range', 'GL_ARB_texture_compression',
    'GL_ARB_texture_compression_bptc',
    'GL_ARB_texture_compression_rgtc', 'GL_ARB_texture_cube_map',
    'GL_ARB_texture_cube_map_array', 'GL_ARB_texture_env_add',
    'GL_ARB_texture_env_combine', 'GL_ARB_texture_env_crossbar',
    'GL_ARB_texture_env_dot3', 'GL_ARB_texture_filter_anisotropic',
    'GL_ARB_texture_filter_minmax', 'GL_ARB_texture_float',
    'GL_ARB_texture_gather', 'GL_ARB_texture_mirror_clamp_to_edge',
    'GL_ARB_texture_mirrored_repeat', 'GL_ARB_texture_multisample',
    'GL_ARB_texture_non_power_of_two', 'GL_ARB_texture_query_levels',
    'GL_ARB_texture_query_lod', 'GL_ARB_texture_rectangle',
    'GL_ARB_texture_rg', 'GL_ARB_texture_rgb10_a2ui',
    'GL_ARB_texture_stencil8', 'GL_ARB_texture_storage',
    'GL_ARB_texture_storage_multisample', 'GL_ARB_texture_swizzle',
    'GL_ARB_texture_view', 'GL_ARB_timer_query',
    'GL_ARB_transform_feedback2', 'GL_ARB_transform_feedback3',
    'GL_ARB_transform_feedback_instanced',
    'GL_ARB_transform_feedback_overflow_query',
    'GL_ARB_transpose_matrix', 'GL_ARB_uniform_buffer_object',
    'GL_ARB_vertex_array_bgra', 'GL_ARB_vertex_array_object',
    'GL_ARB_vertex_attrib_64bit', 'GL_ARB_vertex_attrib_binding',
    'GL_ARB_vertex_blend', 'GL_ARB_vertex_buffer_object',
    'GL_ARB_vertex_program', 'GL_ARB_vertex_shader',
    'GL_ARB_vertex_type_10f_11f_11f_rev',
    'GL_ARB_vertex_type_2_10_10_10_rev', 'GL_ARB_viewport_array',
    'GL_ARB_window_pos', 'GL_ARC_TO_NV', 'GL_ARRAY_BUFFER',
    'GL_ARRAY_BUFFER_ARB', 'GL_ARRAY_BUFFER_BINDING',
    'GL_ARRAY_BUFFER_BINDING_ARB', 'GL_ARRAY_ELEMENT_LOCK_COUNT_EXT',
    'GL_ARRAY_ELEMENT_LOCK_FIRST_EXT', 'GL_ARRAY_OBJECT_BUFFER_ATI',
    'GL_ARRAY_OBJECT_OFFSET_ATI', 'GL_ARRAY_SIZE', 'GL_ARRAY_STRIDE',
    'GL_ASYNC_DRAW_PIXELS_SGIX', 'GL_ASYNC_HISTOGRAM_SGIX',
    'GL_ASYNC_MARKER_SGIX', 'GL_ASYNC_READ_PIXELS_SGIX',
    'GL_ASYNC_TEX_IMAGE_SGIX', 'GL_ATI_draw_buffers',
    'GL_ATI_element_array', 'GL_ATI_envmap_bumpmap',
    'GL_ATI_fragment_shader', 'GL_ATI_map_object_buffer',
    'GL_ATI_meminfo', 'GL_ATI_pixel_format_float',
    'GL_ATI_pn_triangles', 'GL_ATI_separate_stencil',
    'GL_ATI_text_fragment_shader', 'GL_ATI_texture_env_combine3',
    'GL_ATI_texture_float', 'GL_ATI_texture_mirror_once',
    'GL_ATI_vertex_array_object', 'GL_ATI_vertex_attrib_array_object',
    'GL_ATI_vertex_streams', 'GL_ATOMIC_COUNTER_BARRIER_BIT',
    'GL_ATOMIC_COUNTER_BARRIER_BIT_EXT', 'GL_ATOMIC_COUNTER_BUFFER',
    'GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS',
    'GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES',
    'GL_ATOMIC_COUNTER_BUFFER_BINDING',
    'GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE',
    'GL_ATOMIC_COUNTER_BUFFER_INDEX',
    'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER',
    'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER',
    'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER',
    'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV',
    'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV',
    'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER',
    'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER',
    'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER',
    'GL_ATOMIC_COUNTER_BUFFER_SIZE', 'GL_ATOMIC_COUNTER_BUFFER_START',
    'GL_ATTACHED_MEMORY_OBJECT_NV', 'GL_ATTACHED_MEMORY_OFFSET_NV',
    'GL_ATTACHED_SHADERS', 'GL_ATTENUATION_EXT',
    'GL_ATTRIBUTE_ADDRESS_COMMAND_NV', 'GL_ATTRIB_ARRAY_POINTER_NV',
    'GL_ATTRIB_ARRAY_SIZE_NV', 'GL_ATTRIB_ARRAY_STRIDE_NV',
    'GL_ATTRIB_ARRAY_TYPE_NV', 'GL_ATTRIB_STACK_DEPTH',
    'GL_AUTO_GENERATE_MIPMAP', 'GL_AUTO_NORMAL', 'GL_AUX0', 'GL_AUX1',
    'GL_AUX2', 'GL_AUX3', 'GL_AUX_BUFFERS',
    'GL_AUX_DEPTH_STENCIL_APPLE', 'GL_AVERAGE_EXT', 'GL_AVERAGE_HP',
    'GL_BACK', 'GL_BACK_LEFT', 'GL_BACK_NORMALS_HINT_PGI',
    'GL_BACK_PRIMARY_COLOR_NV', 'GL_BACK_RIGHT',
    'GL_BACK_SECONDARY_COLOR_NV', 'GL_BEVEL_NV', 'GL_BGR', 'GL_BGRA',
    'GL_BGRA8_EXT', 'GL_BGRA_EXT', 'GL_BGRA_INTEGER',
    'GL_BGRA_INTEGER_EXT', 'GL_BGR_EXT', 'GL_BGR_INTEGER',
    'GL_BGR_INTEGER_EXT', 'GL_BIAS_BIT_ATI',
    'GL_BIAS_BY_NEGATIVE_ONE_HALF_NV', 'GL_BINORMAL_ARRAY_EXT',
    'GL_BINORMAL_ARRAY_POINTER_EXT', 'GL_BINORMAL_ARRAY_STRIDE_EXT',
    'GL_BINORMAL_ARRAY_TYPE_EXT', 'GL_BITMAP', 'GL_BITMAP_TOKEN',
    'GL_BLACKHOLE_RENDER_INTEL', 'GL_BLEND',
    'GL_BLEND_ADVANCED_COHERENT_KHR', 'GL_BLEND_ADVANCED_COHERENT_NV',
    'GL_BLEND_COLOR', 'GL_BLEND_COLOR_COMMAND_NV',
    'GL_BLEND_COLOR_EXT', 'GL_BLEND_DST', 'GL_BLEND_DST_ALPHA',
    'GL_BLEND_DST_ALPHA_EXT', 'GL_BLEND_DST_RGB',
    'GL_BLEND_DST_RGB_EXT', 'GL_BLEND_EQUATION',
    'GL_BLEND_EQUATION_ALPHA', 'GL_BLEND_EQUATION_ALPHA_EXT',
    'GL_BLEND_EQUATION_EXT', 'GL_BLEND_EQUATION_RGB',
    'GL_BLEND_EQUATION_RGB_EXT', 'GL_BLEND_OVERLAP_NV',
    'GL_BLEND_PREMULTIPLIED_SRC_NV', 'GL_BLEND_SRC',
    'GL_BLEND_SRC_ALPHA', 'GL_BLEND_SRC_ALPHA_EXT',
    'GL_BLEND_SRC_RGB', 'GL_BLEND_SRC_RGB_EXT', 'GL_BLOCK_INDEX',
    'GL_BLUE', 'GL_BLUE_BIAS', 'GL_BLUE_BITS', 'GL_BLUE_BIT_ATI',
    'GL_BLUE_INTEGER', 'GL_BLUE_INTEGER_EXT',
    'GL_BLUE_MAX_CLAMP_INGR', 'GL_BLUE_MIN_CLAMP_INGR', 'GL_BLUE_NV',
    'GL_BLUE_SCALE', 'GL_BOLD_BIT_NV', 'GL_BOOL', 'GL_BOOL_ARB',
    'GL_BOOL_VEC2', 'GL_BOOL_VEC2_ARB', 'GL_BOOL_VEC3',
    'GL_BOOL_VEC3_ARB', 'GL_BOOL_VEC4', 'GL_BOOL_VEC4_ARB',
    'GL_BOUNDING_BOX_NV', 'GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV',
    'GL_BUFFER', 'GL_BUFFER_ACCESS', 'GL_BUFFER_ACCESS_ARB',
    'GL_BUFFER_ACCESS_FLAGS', 'GL_BUFFER_BINDING',
    'GL_BUFFER_DATA_SIZE', 'GL_BUFFER_FLUSHING_UNMAP_APPLE',
    'GL_BUFFER_GPU_ADDRESS_NV', 'GL_BUFFER_IMMUTABLE_STORAGE',
    'GL_BUFFER_MAPPED', 'GL_BUFFER_MAPPED_ARB',
    'GL_BUFFER_MAP_LENGTH', 'GL_BUFFER_MAP_OFFSET',
    'GL_BUFFER_MAP_POINTER', 'GL_BUFFER_MAP_POINTER_ARB',
    'GL_BUFFER_OBJECT_APPLE', 'GL_BUFFER_OBJECT_EXT',
    'GL_BUFFER_SERIALIZED_MODIFY_APPLE', 'GL_BUFFER_SIZE',
    'GL_BUFFER_SIZE_ARB', 'GL_BUFFER_STORAGE_FLAGS',
    'GL_BUFFER_UPDATE_BARRIER_BIT',
    'GL_BUFFER_UPDATE_BARRIER_BIT_EXT', 'GL_BUFFER_USAGE',
    'GL_BUFFER_USAGE_ARB', 'GL_BUFFER_VARIABLE', 'GL_BUMP_ENVMAP_ATI',
    'GL_BUMP_NUM_TEX_UNITS_ATI', 'GL_BUMP_ROT_MATRIX_ATI',
    'GL_BUMP_ROT_MATRIX_SIZE_ATI', 'GL_BUMP_TARGET_ATI',
    'GL_BUMP_TEX_UNITS_ATI', 'GL_BYTE', 'GL_C3F_V3F',
    'GL_C4F_N3F_V3F', 'GL_C4UB_V2F', 'GL_C4UB_V3F',
    'GL_CALLIGRAPHIC_FRAGMENT_SGIX', 'GL_CAVEAT_SUPPORT', 'GL_CCW',
    'GL_CIRCULAR_CCW_ARC_TO_NV', 'GL_CIRCULAR_CW_ARC_TO_NV',
    'GL_CIRCULAR_TANGENT_ARC_TO_NV', 'GL_CLAMP',
    'GL_CLAMP_FRAGMENT_COLOR', 'GL_CLAMP_FRAGMENT_COLOR_ARB',
    'GL_CLAMP_READ_COLOR', 'GL_CLAMP_READ_COLOR_ARB',
    'GL_CLAMP_TO_BORDER', 'GL_CLAMP_TO_BORDER_ARB',
    'GL_CLAMP_TO_BORDER_SGIS', 'GL_CLAMP_TO_EDGE',
    'GL_CLAMP_TO_EDGE_SGIS', 'GL_CLAMP_VERTEX_COLOR',
    'GL_CLAMP_VERTEX_COLOR_ARB', 'GL_CLEAR', 'GL_CLEAR_BUFFER',
    'GL_CLEAR_TEXTURE', 'GL_CLIENT_ACTIVE_TEXTURE',
    'GL_CLIENT_ACTIVE_TEXTURE_ARB', 'GL_CLIENT_ALL_ATTRIB_BITS',
    'GL_CLIENT_ATTRIB_STACK_DEPTH',
    'GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT',
    'GL_CLIENT_PIXEL_STORE_BIT', 'GL_CLIENT_STORAGE_BIT',
    'GL_CLIENT_VERTEX_ARRAY_BIT', 'GL_CLIPPING_INPUT_PRIMITIVES',
    'GL_CLIPPING_INPUT_PRIMITIVES_ARB',
    'GL_CLIPPING_OUTPUT_PRIMITIVES',
    'GL_CLIPPING_OUTPUT_PRIMITIVES_ARB', 'GL_CLIP_DEPTH_MODE',
    'GL_CLIP_DISTANCE0', 'GL_CLIP_DISTANCE1', 'GL_CLIP_DISTANCE2',
    'GL_CLIP_DISTANCE3', 'GL_CLIP_DISTANCE4', 'GL_CLIP_DISTANCE5',
    'GL_CLIP_DISTANCE6', 'GL_CLIP_DISTANCE7', 'GL_CLIP_DISTANCE_NV',
    'GL_CLIP_FAR_HINT_PGI', 'GL_CLIP_NEAR_HINT_PGI', 'GL_CLIP_ORIGIN',
    'GL_CLIP_PLANE0', 'GL_CLIP_PLANE1', 'GL_CLIP_PLANE2',
    'GL_CLIP_PLANE3', 'GL_CLIP_PLANE4', 'GL_CLIP_PLANE5',
    'GL_CLIP_VOLUME_CLIPPING_HINT_EXT', 'GL_CLOSE_PATH_NV',
    'GL_CMYKA_EXT', 'GL_CMYK_EXT', 'GL_CND0_ATI', 'GL_CND_ATI',
    'GL_COEFF', 'GL_COLOR', 'GL_COLOR3_BIT_PGI', 'GL_COLOR4_BIT_PGI',
    'GL_COLORBURN_KHR', 'GL_COLORBURN_NV', 'GL_COLORDODGE_KHR',
    'GL_COLORDODGE_NV', 'GL_COLOR_ALPHA_PAIRING_ATI',
    'GL_COLOR_ARRAY', 'GL_COLOR_ARRAY_ADDRESS_NV',
    'GL_COLOR_ARRAY_BUFFER_BINDING',
    'GL_COLOR_ARRAY_BUFFER_BINDING_ARB', 'GL_COLOR_ARRAY_COUNT_EXT',
    'GL_COLOR_ARRAY_EXT', 'GL_COLOR_ARRAY_LENGTH_NV',
    'GL_COLOR_ARRAY_LIST_IBM', 'GL_COLOR_ARRAY_LIST_STRIDE_IBM',
    'GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL',
    'GL_COLOR_ARRAY_POINTER', 'GL_COLOR_ARRAY_POINTER_EXT',
    'GL_COLOR_ARRAY_SIZE', 'GL_COLOR_ARRAY_SIZE_EXT',
    'GL_COLOR_ARRAY_STRIDE', 'GL_COLOR_ARRAY_STRIDE_EXT',
    'GL_COLOR_ARRAY_TYPE', 'GL_COLOR_ARRAY_TYPE_EXT',
    'GL_COLOR_ATTACHMENT0', 'GL_COLOR_ATTACHMENT0_EXT',
    'GL_COLOR_ATTACHMENT1', 'GL_COLOR_ATTACHMENT10',
    'GL_COLOR_ATTACHMENT10_EXT', 'GL_COLOR_ATTACHMENT11',
    'GL_COLOR_ATTACHMENT11_EXT', 'GL_COLOR_ATTACHMENT12',
    'GL_COLOR_ATTACHMENT12_EXT', 'GL_COLOR_ATTACHMENT13',
    'GL_COLOR_ATTACHMENT13_EXT', 'GL_COLOR_ATTACHMENT14',
    'GL_COLOR_ATTACHMENT14_EXT', 'GL_COLOR_ATTACHMENT15',
    'GL_COLOR_ATTACHMENT15_EXT', 'GL_COLOR_ATTACHMENT16',
    'GL_COLOR_ATTACHMENT17', 'GL_COLOR_ATTACHMENT18',
    'GL_COLOR_ATTACHMENT19', 'GL_COLOR_ATTACHMENT1_EXT',
    'GL_COLOR_ATTACHMENT2', 'GL_COLOR_ATTACHMENT20',
    'GL_COLOR_ATTACHMENT21', 'GL_COLOR_ATTACHMENT22',
    'GL_COLOR_ATTACHMENT23', 'GL_COLOR_ATTACHMENT24',
    'GL_COLOR_ATTACHMENT25', 'GL_COLOR_ATTACHMENT26',
    'GL_COLOR_ATTACHMENT27', 'GL_COLOR_ATTACHMENT28',
    'GL_COLOR_ATTACHMENT29', 'GL_COLOR_ATTACHMENT2_EXT',
    'GL_COLOR_ATTACHMENT3', 'GL_COLOR_ATTACHMENT30',
    'GL_COLOR_ATTACHMENT31', 'GL_COLOR_ATTACHMENT3_EXT',
    'GL_COLOR_ATTACHMENT4', 'GL_COLOR_ATTACHMENT4_EXT',
    'GL_COLOR_ATTACHMENT5', 'GL_COLOR_ATTACHMENT5_EXT',
    'GL_COLOR_ATTACHMENT6', 'GL_COLOR_ATTACHMENT6_EXT',
    'GL_COLOR_ATTACHMENT7', 'GL_COLOR_ATTACHMENT7_EXT',
    'GL_COLOR_ATTACHMENT8', 'GL_COLOR_ATTACHMENT8_EXT',
    'GL_COLOR_ATTACHMENT9', 'GL_COLOR_ATTACHMENT9_EXT',
    'GL_COLOR_BUFFER_BIT', 'GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI',
    'GL_COLOR_CLEAR_VALUE', 'GL_COLOR_COMPONENTS',
    'GL_COLOR_ENCODING', 'GL_COLOR_FLOAT_APPLE', 'GL_COLOR_INDEX',
    'GL_COLOR_INDEX12_EXT', 'GL_COLOR_INDEX16_EXT',
    'GL_COLOR_INDEX1_EXT', 'GL_COLOR_INDEX2_EXT',
    'GL_COLOR_INDEX4_EXT', 'GL_COLOR_INDEX8_EXT', 'GL_COLOR_INDEXES',
    'GL_COLOR_LOGIC_OP', 'GL_COLOR_MATERIAL',
    'GL_COLOR_MATERIAL_FACE', 'GL_COLOR_MATERIAL_PARAMETER',
    'GL_COLOR_MATRIX', 'GL_COLOR_MATRIX_SGI',
    'GL_COLOR_MATRIX_STACK_DEPTH', 'GL_COLOR_MATRIX_STACK_DEPTH_SGI',
    'GL_COLOR_RENDERABLE', 'GL_COLOR_SAMPLES_NV', 'GL_COLOR_SUM',
    'GL_COLOR_SUM_ARB', 'GL_COLOR_SUM_CLAMP_NV', 'GL_COLOR_SUM_EXT',
    'GL_COLOR_TABLE', 'GL_COLOR_TABLE_ALPHA_SIZE',
    'GL_COLOR_TABLE_ALPHA_SIZE_SGI', 'GL_COLOR_TABLE_BIAS',
    'GL_COLOR_TABLE_BIAS_SGI', 'GL_COLOR_TABLE_BLUE_SIZE',
    'GL_COLOR_TABLE_BLUE_SIZE_SGI', 'GL_COLOR_TABLE_FORMAT',
    'GL_COLOR_TABLE_FORMAT_SGI', 'GL_COLOR_TABLE_GREEN_SIZE',
    'GL_COLOR_TABLE_GREEN_SIZE_SGI', 'GL_COLOR_TABLE_INTENSITY_SIZE',
    'GL_COLOR_TABLE_INTENSITY_SIZE_SGI',
    'GL_COLOR_TABLE_LUMINANCE_SIZE',
    'GL_COLOR_TABLE_LUMINANCE_SIZE_SGI', 'GL_COLOR_TABLE_RED_SIZE',
    'GL_COLOR_TABLE_RED_SIZE_SGI', 'GL_COLOR_TABLE_SCALE',
    'GL_COLOR_TABLE_SCALE_SGI', 'GL_COLOR_TABLE_SGI',
    'GL_COLOR_TABLE_WIDTH', 'GL_COLOR_TABLE_WIDTH_SGI',
    'GL_COLOR_WRITEMASK', 'GL_COMBINE', 'GL_COMBINE4_NV',
    'GL_COMBINER0_NV', 'GL_COMBINER1_NV', 'GL_COMBINER2_NV',
    'GL_COMBINER3_NV', 'GL_COMBINER4_NV', 'GL_COMBINER5_NV',
    'GL_COMBINER6_NV', 'GL_COMBINER7_NV',
    'GL_COMBINER_AB_DOT_PRODUCT_NV', 'GL_COMBINER_AB_OUTPUT_NV',
    'GL_COMBINER_BIAS_NV', 'GL_COMBINER_CD_DOT_PRODUCT_NV',
    'GL_COMBINER_CD_OUTPUT_NV', 'GL_COMBINER_COMPONENT_USAGE_NV',
    'GL_COMBINER_INPUT_NV', 'GL_COMBINER_MAPPING_NV',
    'GL_COMBINER_MUX_SUM_NV', 'GL_COMBINER_SCALE_NV',
    'GL_COMBINER_SUM_OUTPUT_NV', 'GL_COMBINE_ALPHA',
    'GL_COMBINE_ALPHA_ARB', 'GL_COMBINE_ALPHA_EXT', 'GL_COMBINE_ARB',
    'GL_COMBINE_EXT', 'GL_COMBINE_RGB', 'GL_COMBINE_RGB_ARB',
    'GL_COMBINE_RGB_EXT', 'GL_COMMAND_BARRIER_BIT',
    'GL_COMMAND_BARRIER_BIT_EXT',
    'GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT',
    'GL_COMPARE_REF_TO_TEXTURE', 'GL_COMPARE_R_TO_TEXTURE',
    'GL_COMPARE_R_TO_TEXTURE_ARB', 'GL_COMPATIBLE_SUBROUTINES',
    'GL_COMPILE', 'GL_COMPILE_AND_EXECUTE', 'GL_COMPILE_STATUS',
    'GL_COMPLETION_STATUS_ARB', 'GL_COMPLETION_STATUS_KHR',
    'GL_COMPRESSED_ALPHA', 'GL_COMPRESSED_ALPHA_ARB',
    'GL_COMPRESSED_INTENSITY', 'GL_COMPRESSED_INTENSITY_ARB',
    'GL_COMPRESSED_LUMINANCE', 'GL_COMPRESSED_LUMINANCE_ALPHA',
    'GL_COMPRESSED_LUMINANCE_ALPHA_ARB',
    'GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT',
    'GL_COMPRESSED_LUMINANCE_ARB',
    'GL_COMPRESSED_LUMINANCE_LATC1_EXT', 'GL_COMPRESSED_R11_EAC',
    'GL_COMPRESSED_RED', 'GL_COMPRESSED_RED_GREEN_RGTC2_EXT',
    'GL_COMPRESSED_RED_RGTC1', 'GL_COMPRESSED_RED_RGTC1_EXT',
    'GL_COMPRESSED_RG', 'GL_COMPRESSED_RG11_EAC', 'GL_COMPRESSED_RGB',
    'GL_COMPRESSED_RGB8_ETC2',
    'GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2',
    'GL_COMPRESSED_RGBA', 'GL_COMPRESSED_RGBA8_ETC2_EAC',
    'GL_COMPRESSED_RGBA_ARB', 'GL_COMPRESSED_RGBA_ASTC_10x10_KHR',
    'GL_COMPRESSED_RGBA_ASTC_10x5_KHR',
    'GL_COMPRESSED_RGBA_ASTC_10x6_KHR',
    'GL_COMPRESSED_RGBA_ASTC_10x8_KHR',
    'GL_COMPRESSED_RGBA_ASTC_12x10_KHR',
    'GL_COMPRESSED_RGBA_ASTC_12x12_KHR',
    'GL_COMPRESSED_RGBA_ASTC_4x4_KHR',
    'GL_COMPRESSED_RGBA_ASTC_5x4_KHR',
    'GL_COMPRESSED_RGBA_ASTC_5x5_KHR',
    'GL_COMPRESSED_RGBA_ASTC_6x5_KHR',
    'GL_COMPRESSED_RGBA_ASTC_6x6_KHR',
    'GL_COMPRESSED_RGBA_ASTC_8x5_KHR',
    'GL_COMPRESSED_RGBA_ASTC_8x6_KHR',
    'GL_COMPRESSED_RGBA_ASTC_8x8_KHR',
    'GL_COMPRESSED_RGBA_BPTC_UNORM',
    'GL_COMPRESSED_RGBA_BPTC_UNORM_ARB',
    'GL_COMPRESSED_RGBA_FXT1_3DFX',
    'GL_COMPRESSED_RGBA_S3TC_DXT1_EXT',
    'GL_COMPRESSED_RGBA_S3TC_DXT3_EXT',
    'GL_COMPRESSED_RGBA_S3TC_DXT5_EXT', 'GL_COMPRESSED_RGB_ARB',
    'GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT',
    'GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB',
    'GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT',
    'GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB',
    'GL_COMPRESSED_RGB_FXT1_3DFX', 'GL_COMPRESSED_RGB_S3TC_DXT1_EXT',
    'GL_COMPRESSED_RG_RGTC2',
    'GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT',
    'GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT',
    'GL_COMPRESSED_SIGNED_R11_EAC',
    'GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT',
    'GL_COMPRESSED_SIGNED_RED_RGTC1',
    'GL_COMPRESSED_SIGNED_RED_RGTC1_EXT',
    'GL_COMPRESSED_SIGNED_RG11_EAC', 'GL_COMPRESSED_SIGNED_RG_RGTC2',
    'GL_COMPRESSED_SLUMINANCE', 'GL_COMPRESSED_SLUMINANCE_ALPHA',
    'GL_COMPRESSED_SLUMINANCE_ALPHA_EXT',
    'GL_COMPRESSED_SLUMINANCE_EXT', 'GL_COMPRESSED_SRGB',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR',
    'GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC', 'GL_COMPRESSED_SRGB8_ETC2',
    'GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2',
    'GL_COMPRESSED_SRGB_ALPHA', 'GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM',
    'GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB',
    'GL_COMPRESSED_SRGB_ALPHA_EXT',
    'GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT',
    'GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT',
    'GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT',
    'GL_COMPRESSED_SRGB_EXT', 'GL_COMPRESSED_SRGB_S3TC_DXT1_EXT',
    'GL_COMPRESSED_TEXTURE_FORMATS',
    'GL_COMPRESSED_TEXTURE_FORMATS_ARB', 'GL_COMPUTE_PROGRAM_NV',
    'GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV', 'GL_COMPUTE_SHADER',
    'GL_COMPUTE_SHADER_BIT', 'GL_COMPUTE_SHADER_INVOCATIONS',
    'GL_COMPUTE_SHADER_INVOCATIONS_ARB', 'GL_COMPUTE_SUBROUTINE',
    'GL_COMPUTE_SUBROUTINE_UNIFORM', 'GL_COMPUTE_TEXTURE',
    'GL_COMPUTE_WORK_GROUP_SIZE', 'GL_COMP_BIT_ATI',
    'GL_CONDITION_SATISFIED', 'GL_CONFORMANT_NV',
    'GL_CONIC_CURVE_TO_NV', 'GL_CONJOINT_NV',
    'GL_CONSERVATIVE_RASTERIZATION_INTEL',
    'GL_CONSERVATIVE_RASTERIZATION_NV',
    'GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV',
    'GL_CONSERVATIVE_RASTER_DILATE_NV',
    'GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV',
    'GL_CONSERVATIVE_RASTER_MODE_NV',
    'GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV',
    'GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV',
    'GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV',
    'GL_CONSERVE_MEMORY_HINT_PGI', 'GL_CONSTANT', 'GL_CONSTANT_ALPHA',
    'GL_CONSTANT_ALPHA_EXT', 'GL_CONSTANT_ARB',
    'GL_CONSTANT_ATTENUATION', 'GL_CONSTANT_BORDER',
    'GL_CONSTANT_BORDER_HP', 'GL_CONSTANT_COLOR',
    'GL_CONSTANT_COLOR0_NV', 'GL_CONSTANT_COLOR1_NV',
    'GL_CONSTANT_COLOR_EXT', 'GL_CONSTANT_EXT', 'GL_CONSTANT_NV',
    'GL_CONST_EYE_NV', 'GL_CONTEXT_COMPATIBILITY_PROFILE_BIT',
    'GL_CONTEXT_CORE_PROFILE_BIT', 'GL_CONTEXT_FLAGS',
    'GL_CONTEXT_FLAG_DEBUG_BIT',
    'GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT',
    'GL_CONTEXT_FLAG_NO_ERROR_BIT',
    'GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR',
    'GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT',
    'GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB', 'GL_CONTEXT_LOST',
    'GL_CONTEXT_PROFILE_MASK', 'GL_CONTEXT_RELEASE_BEHAVIOR',
    'GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH', 'GL_CONTEXT_ROBUST_ACCESS',
    'GL_CONTINUOUS_AMD', 'GL_CONTRAST_NV', 'GL_CONVEX_HULL_NV',
    'GL_CONVOLUTION_1D', 'GL_CONVOLUTION_1D_EXT', 'GL_CONVOLUTION_2D',
    'GL_CONVOLUTION_2D_EXT', 'GL_CONVOLUTION_BORDER_COLOR',
    'GL_CONVOLUTION_BORDER_COLOR_HP', 'GL_CONVOLUTION_BORDER_MODE',
    'GL_CONVOLUTION_BORDER_MODE_EXT', 'GL_CONVOLUTION_FILTER_BIAS',
    'GL_CONVOLUTION_FILTER_BIAS_EXT', 'GL_CONVOLUTION_FILTER_SCALE',
    'GL_CONVOLUTION_FILTER_SCALE_EXT', 'GL_CONVOLUTION_FORMAT',
    'GL_CONVOLUTION_FORMAT_EXT', 'GL_CONVOLUTION_HEIGHT',
    'GL_CONVOLUTION_HEIGHT_EXT', 'GL_CONVOLUTION_HINT_SGIX',
    'GL_CONVOLUTION_WIDTH', 'GL_CONVOLUTION_WIDTH_EXT',
    'GL_CON_0_ATI', 'GL_CON_10_ATI', 'GL_CON_11_ATI', 'GL_CON_12_ATI',
    'GL_CON_13_ATI', 'GL_CON_14_ATI', 'GL_CON_15_ATI',
    'GL_CON_16_ATI', 'GL_CON_17_ATI', 'GL_CON_18_ATI',
    'GL_CON_19_ATI', 'GL_CON_1_ATI', 'GL_CON_20_ATI', 'GL_CON_21_ATI',
    'GL_CON_22_ATI', 'GL_CON_23_ATI', 'GL_CON_24_ATI',
    'GL_CON_25_ATI', 'GL_CON_26_ATI', 'GL_CON_27_ATI',
    'GL_CON_28_ATI', 'GL_CON_29_ATI', 'GL_CON_2_ATI', 'GL_CON_30_ATI',
    'GL_CON_31_ATI', 'GL_CON_3_ATI', 'GL_CON_4_ATI', 'GL_CON_5_ATI',
    'GL_CON_6_ATI', 'GL_CON_7_ATI', 'GL_CON_8_ATI', 'GL_CON_9_ATI',
    'GL_COORD_REPLACE', 'GL_COORD_REPLACE_ARB', 'GL_COORD_REPLACE_NV',
    'GL_COPY', 'GL_COPY_INVERTED', 'GL_COPY_PIXEL_TOKEN',
    'GL_COPY_READ_BUFFER', 'GL_COPY_READ_BUFFER_BINDING',
    'GL_COPY_WRITE_BUFFER', 'GL_COPY_WRITE_BUFFER_BINDING',
    'GL_COUNTER_RANGE_AMD', 'GL_COUNTER_TYPE_AMD', 'GL_COUNT_DOWN_NV',
    'GL_COUNT_UP_NV', 'GL_COVERAGE_MODULATION_NV',
    'GL_COVERAGE_MODULATION_TABLE_NV',
    'GL_COVERAGE_MODULATION_TABLE_SIZE_NV', 'GL_CUBIC_CURVE_TO_NV',
    'GL_CUBIC_EXT', 'GL_CUBIC_HP', 'GL_CULL_FACE',
    'GL_CULL_FACE_MODE', 'GL_CULL_FRAGMENT_NV', 'GL_CULL_MODES_NV',
    'GL_CULL_VERTEX_EXT', 'GL_CULL_VERTEX_EYE_POSITION_EXT',
    'GL_CULL_VERTEX_IBM', 'GL_CULL_VERTEX_OBJECT_POSITION_EXT',
    'GL_CURRENT_ATTRIB_NV', 'GL_CURRENT_BINORMAL_EXT',
    'GL_CURRENT_BIT', 'GL_CURRENT_COLOR', 'GL_CURRENT_FOG_COORD',
    'GL_CURRENT_FOG_COORDINATE', 'GL_CURRENT_FOG_COORDINATE_EXT',
    'GL_CURRENT_INDEX', 'GL_CURRENT_MATRIX_ARB',
    'GL_CURRENT_MATRIX_INDEX_ARB', 'GL_CURRENT_MATRIX_NV',
    'GL_CURRENT_MATRIX_STACK_DEPTH_ARB',
    'GL_CURRENT_MATRIX_STACK_DEPTH_NV', 'GL_CURRENT_NORMAL',
    'GL_CURRENT_OCCLUSION_QUERY_ID_NV',
    'GL_CURRENT_PALETTE_MATRIX_ARB', 'GL_CURRENT_PROGRAM',
    'GL_CURRENT_QUERY', 'GL_CURRENT_QUERY_ARB',
    'GL_CURRENT_RASTER_COLOR', 'GL_CURRENT_RASTER_DISTANCE',
    'GL_CURRENT_RASTER_INDEX', 'GL_CURRENT_RASTER_NORMAL_SGIX',
    'GL_CURRENT_RASTER_POSITION', 'GL_CURRENT_RASTER_POSITION_VALID',
    'GL_CURRENT_RASTER_SECONDARY_COLOR',
    'GL_CURRENT_RASTER_TEXTURE_COORDS', 'GL_CURRENT_SECONDARY_COLOR',
    'GL_CURRENT_SECONDARY_COLOR_EXT', 'GL_CURRENT_TANGENT_EXT',
    'GL_CURRENT_TEXTURE_COORDS', 'GL_CURRENT_TIME_NV',
    'GL_CURRENT_VERTEX_ATTRIB', 'GL_CURRENT_VERTEX_ATTRIB_ARB',
    'GL_CURRENT_VERTEX_EXT', 'GL_CURRENT_VERTEX_WEIGHT_EXT',
    'GL_CURRENT_WEIGHT_ARB', 'GL_CW', 'GL_D3D12_FENCE_VALUE_EXT',
    'GL_DARKEN_KHR', 'GL_DARKEN_NV', 'GL_DATA_BUFFER_AMD',
    'GL_DEBUG_CALLBACK_FUNCTION', 'GL_DEBUG_CALLBACK_FUNCTION_ARB',
    'GL_DEBUG_CALLBACK_USER_PARAM',
    'GL_DEBUG_CALLBACK_USER_PARAM_ARB',
    'GL_DEBUG_CATEGORY_API_ERROR_AMD',
    'GL_DEBUG_CATEGORY_APPLICATION_AMD',
    'GL_DEBUG_CATEGORY_DEPRECATION_AMD',
    'GL_DEBUG_CATEGORY_OTHER_AMD',
    'GL_DEBUG_CATEGORY_PERFORMANCE_AMD',
    'GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD',
    'GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD',
    'GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD',
    'GL_DEBUG_GROUP_STACK_DEPTH', 'GL_DEBUG_LOGGED_MESSAGES',
    'GL_DEBUG_LOGGED_MESSAGES_AMD', 'GL_DEBUG_LOGGED_MESSAGES_ARB',
    'GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH',
    'GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB', 'GL_DEBUG_OUTPUT',
    'GL_DEBUG_OUTPUT_SYNCHRONOUS', 'GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB',
    'GL_DEBUG_SEVERITY_HIGH', 'GL_DEBUG_SEVERITY_HIGH_AMD',
    'GL_DEBUG_SEVERITY_HIGH_ARB', 'GL_DEBUG_SEVERITY_LOW',
    'GL_DEBUG_SEVERITY_LOW_AMD', 'GL_DEBUG_SEVERITY_LOW_ARB',
    'GL_DEBUG_SEVERITY_MEDIUM', 'GL_DEBUG_SEVERITY_MEDIUM_AMD',
    'GL_DEBUG_SEVERITY_MEDIUM_ARB', 'GL_DEBUG_SEVERITY_NOTIFICATION',
    'GL_DEBUG_SOURCE_API', 'GL_DEBUG_SOURCE_API_ARB',
    'GL_DEBUG_SOURCE_APPLICATION', 'GL_DEBUG_SOURCE_APPLICATION_ARB',
    'GL_DEBUG_SOURCE_OTHER', 'GL_DEBUG_SOURCE_OTHER_ARB',
    'GL_DEBUG_SOURCE_SHADER_COMPILER',
    'GL_DEBUG_SOURCE_SHADER_COMPILER_ARB',
    'GL_DEBUG_SOURCE_THIRD_PARTY', 'GL_DEBUG_SOURCE_THIRD_PARTY_ARB',
    'GL_DEBUG_SOURCE_WINDOW_SYSTEM',
    'GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB',
    'GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR',
    'GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB', 'GL_DEBUG_TYPE_ERROR',
    'GL_DEBUG_TYPE_ERROR_ARB', 'GL_DEBUG_TYPE_MARKER',
    'GL_DEBUG_TYPE_OTHER', 'GL_DEBUG_TYPE_OTHER_ARB',
    'GL_DEBUG_TYPE_PERFORMANCE', 'GL_DEBUG_TYPE_PERFORMANCE_ARB',
    'GL_DEBUG_TYPE_POP_GROUP', 'GL_DEBUG_TYPE_PORTABILITY',
    'GL_DEBUG_TYPE_PORTABILITY_ARB', 'GL_DEBUG_TYPE_PUSH_GROUP',
    'GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR',
    'GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB', 'GL_DECAL',
    'GL_DECODE_EXT', 'GL_DECR', 'GL_DECR_WRAP', 'GL_DECR_WRAP_EXT',
    'GL_DEDICATED_MEMORY_OBJECT_EXT', 'GL_DEFORMATIONS_MASK_SGIX',
    'GL_DELETE_STATUS', 'GL_DEPENDENT_AR_TEXTURE_2D_NV',
    'GL_DEPENDENT_GB_TEXTURE_2D_NV',
    'GL_DEPENDENT_HILO_TEXTURE_2D_NV',
    'GL_DEPENDENT_RGB_TEXTURE_3D_NV',
    'GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV', 'GL_DEPTH',
    'GL_DEPTH24_STENCIL8', 'GL_DEPTH24_STENCIL8_EXT',
    'GL_DEPTH32F_STENCIL8', 'GL_DEPTH32F_STENCIL8_NV',
    'GL_DEPTH_ATTACHMENT', 'GL_DEPTH_ATTACHMENT_EXT', 'GL_DEPTH_BIAS',
    'GL_DEPTH_BITS', 'GL_DEPTH_BOUNDS_EXT',
    'GL_DEPTH_BOUNDS_TEST_EXT', 'GL_DEPTH_BUFFER_BIT',
    'GL_DEPTH_BUFFER_FLOAT_MODE_NV', 'GL_DEPTH_CLAMP',
    'GL_DEPTH_CLAMP_FAR_AMD', 'GL_DEPTH_CLAMP_NEAR_AMD',
    'GL_DEPTH_CLAMP_NV', 'GL_DEPTH_CLEAR_VALUE', 'GL_DEPTH_COMPONENT',
    'GL_DEPTH_COMPONENT16', 'GL_DEPTH_COMPONENT16_ARB',
    'GL_DEPTH_COMPONENT16_SGIX', 'GL_DEPTH_COMPONENT24',
    'GL_DEPTH_COMPONENT24_ARB', 'GL_DEPTH_COMPONENT24_SGIX',
    'GL_DEPTH_COMPONENT32', 'GL_DEPTH_COMPONENT32F',
    'GL_DEPTH_COMPONENT32F_NV', 'GL_DEPTH_COMPONENT32_ARB',
    'GL_DEPTH_COMPONENT32_SGIX', 'GL_DEPTH_COMPONENTS',
    'GL_DEPTH_FUNC', 'GL_DEPTH_RANGE', 'GL_DEPTH_RENDERABLE',
    'GL_DEPTH_SAMPLES_NV', 'GL_DEPTH_SCALE', 'GL_DEPTH_STENCIL',
    'GL_DEPTH_STENCIL_ATTACHMENT', 'GL_DEPTH_STENCIL_EXT',
    'GL_DEPTH_STENCIL_NV', 'GL_DEPTH_STENCIL_TEXTURE_MODE',
    'GL_DEPTH_STENCIL_TO_BGRA_NV', 'GL_DEPTH_STENCIL_TO_RGBA_NV',
    'GL_DEPTH_TEST', 'GL_DEPTH_TEXTURE_MODE',
    'GL_DEPTH_TEXTURE_MODE_ARB', 'GL_DEPTH_WRITEMASK',
    'GL_DETACHED_BUFFERS_NV', 'GL_DETACHED_MEMORY_INCARNATION_NV',
    'GL_DETACHED_TEXTURES_NV', 'GL_DETAIL_TEXTURE_2D_BINDING_SGIS',
    'GL_DETAIL_TEXTURE_2D_SGIS', 'GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS',
    'GL_DETAIL_TEXTURE_LEVEL_SGIS', 'GL_DETAIL_TEXTURE_MODE_SGIS',
    'GL_DEVICE_LUID_EXT', 'GL_DEVICE_NODE_MASK_EXT',
    'GL_DEVICE_UUID_EXT', 'GL_DIFFERENCE_KHR', 'GL_DIFFERENCE_NV',
    'GL_DIFFUSE', 'GL_DISCARD_ATI', 'GL_DISCARD_NV',
    'GL_DISCRETE_AMD', 'GL_DISJOINT_NV',
    'GL_DISPATCH_INDIRECT_BUFFER',
    'GL_DISPATCH_INDIRECT_BUFFER_BINDING', 'GL_DISPLAY_LIST',
    'GL_DISTANCE_ATTENUATION_EXT', 'GL_DISTANCE_ATTENUATION_SGIS',
    'GL_DITHER', 'GL_DOMAIN', 'GL_DONT_CARE', 'GL_DOT2_ADD_ATI',
    'GL_DOT3_ATI', 'GL_DOT3_RGB', 'GL_DOT3_RGBA', 'GL_DOT3_RGBA_ARB',
    'GL_DOT3_RGBA_EXT', 'GL_DOT3_RGB_ARB', 'GL_DOT3_RGB_EXT',
    'GL_DOT4_ATI', 'GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV',
    'GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV',
    'GL_DOT_PRODUCT_DEPTH_REPLACE_NV',
    'GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV', 'GL_DOT_PRODUCT_NV',
    'GL_DOT_PRODUCT_PASS_THROUGH_NV',
    'GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV',
    'GL_DOT_PRODUCT_TEXTURE_1D_NV', 'GL_DOT_PRODUCT_TEXTURE_2D_NV',
    'GL_DOT_PRODUCT_TEXTURE_3D_NV',
    'GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV',
    'GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV', 'GL_DOUBLE',
    'GL_DOUBLEBUFFER', 'GL_DOUBLE_MAT2', 'GL_DOUBLE_MAT2_EXT',
    'GL_DOUBLE_MAT2x3', 'GL_DOUBLE_MAT2x3_EXT', 'GL_DOUBLE_MAT2x4',
    'GL_DOUBLE_MAT2x4_EXT', 'GL_DOUBLE_MAT3', 'GL_DOUBLE_MAT3_EXT',
    'GL_DOUBLE_MAT3x2', 'GL_DOUBLE_MAT3x2_EXT', 'GL_DOUBLE_MAT3x4',
    'GL_DOUBLE_MAT3x4_EXT', 'GL_DOUBLE_MAT4', 'GL_DOUBLE_MAT4_EXT',
    'GL_DOUBLE_MAT4x2', 'GL_DOUBLE_MAT4x2_EXT', 'GL_DOUBLE_MAT4x3',
    'GL_DOUBLE_MAT4x3_EXT', 'GL_DOUBLE_VEC2', 'GL_DOUBLE_VEC2_EXT',
    'GL_DOUBLE_VEC3', 'GL_DOUBLE_VEC3_EXT', 'GL_DOUBLE_VEC4',
    'GL_DOUBLE_VEC4_EXT', 'GL_DRAW_ARRAYS_COMMAND_NV',
    'GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV',
    'GL_DRAW_ARRAYS_STRIP_COMMAND_NV', 'GL_DRAW_BUFFER',
    'GL_DRAW_BUFFER0', 'GL_DRAW_BUFFER0_ARB', 'GL_DRAW_BUFFER0_ATI',
    'GL_DRAW_BUFFER1', 'GL_DRAW_BUFFER10', 'GL_DRAW_BUFFER10_ARB',
    'GL_DRAW_BUFFER10_ATI', 'GL_DRAW_BUFFER11',
    'GL_DRAW_BUFFER11_ARB', 'GL_DRAW_BUFFER11_ATI',
    'GL_DRAW_BUFFER12', 'GL_DRAW_BUFFER12_ARB',
    'GL_DRAW_BUFFER12_ATI', 'GL_DRAW_BUFFER13',
    'GL_DRAW_BUFFER13_ARB', 'GL_DRAW_BUFFER13_ATI',
    'GL_DRAW_BUFFER14', 'GL_DRAW_BUFFER14_ARB',
    'GL_DRAW_BUFFER14_ATI', 'GL_DRAW_BUFFER15',
    'GL_DRAW_BUFFER15_ARB', 'GL_DRAW_BUFFER15_ATI',
    'GL_DRAW_BUFFER1_ARB', 'GL_DRAW_BUFFER1_ATI', 'GL_DRAW_BUFFER2',
    'GL_DRAW_BUFFER2_ARB', 'GL_DRAW_BUFFER2_ATI', 'GL_DRAW_BUFFER3',
    'GL_DRAW_BUFFER3_ARB', 'GL_DRAW_BUFFER3_ATI', 'GL_DRAW_BUFFER4',
    'GL_DRAW_BUFFER4_ARB', 'GL_DRAW_BUFFER4_ATI', 'GL_DRAW_BUFFER5',
    'GL_DRAW_BUFFER5_ARB', 'GL_DRAW_BUFFER5_ATI', 'GL_DRAW_BUFFER6',
    'GL_DRAW_BUFFER6_ARB', 'GL_DRAW_BUFFER6_ATI', 'GL_DRAW_BUFFER7',
    'GL_DRAW_BUFFER7_ARB', 'GL_DRAW_BUFFER7_ATI', 'GL_DRAW_BUFFER8',
    'GL_DRAW_BUFFER8_ARB', 'GL_DRAW_BUFFER8_ATI', 'GL_DRAW_BUFFER9',
    'GL_DRAW_BUFFER9_ARB', 'GL_DRAW_BUFFER9_ATI',
    'GL_DRAW_ELEMENTS_COMMAND_NV',
    'GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV',
    'GL_DRAW_ELEMENTS_STRIP_COMMAND_NV', 'GL_DRAW_FRAMEBUFFER',
    'GL_DRAW_FRAMEBUFFER_BINDING', 'GL_DRAW_FRAMEBUFFER_BINDING_EXT',
    'GL_DRAW_FRAMEBUFFER_EXT', 'GL_DRAW_INDIRECT_ADDRESS_NV',
    'GL_DRAW_INDIRECT_BUFFER', 'GL_DRAW_INDIRECT_BUFFER_BINDING',
    'GL_DRAW_INDIRECT_LENGTH_NV', 'GL_DRAW_INDIRECT_UNIFIED_NV',
    'GL_DRAW_PIXELS_APPLE', 'GL_DRAW_PIXEL_TOKEN',
    'GL_DRIVER_UUID_EXT', 'GL_DSDT8_MAG8_INTENSITY8_NV',
    'GL_DSDT8_MAG8_NV', 'GL_DSDT8_NV', 'GL_DSDT_MAG_INTENSITY_NV',
    'GL_DSDT_MAG_NV', 'GL_DSDT_MAG_VIB_NV', 'GL_DSDT_NV',
    'GL_DST_ALPHA', 'GL_DST_ATOP_NV', 'GL_DST_COLOR', 'GL_DST_IN_NV',
    'GL_DST_NV', 'GL_DST_OUT_NV', 'GL_DST_OVER_NV', 'GL_DS_BIAS_NV',
    'GL_DS_SCALE_NV', 'GL_DT_BIAS_NV', 'GL_DT_SCALE_NV',
    'GL_DU8DV8_ATI', 'GL_DUAL_ALPHA12_SGIS', 'GL_DUAL_ALPHA16_SGIS',
    'GL_DUAL_ALPHA4_SGIS', 'GL_DUAL_ALPHA8_SGIS',
    'GL_DUAL_INTENSITY12_SGIS', 'GL_DUAL_INTENSITY16_SGIS',
    'GL_DUAL_INTENSITY4_SGIS', 'GL_DUAL_INTENSITY8_SGIS',
    'GL_DUAL_LUMINANCE12_SGIS', 'GL_DUAL_LUMINANCE16_SGIS',
    'GL_DUAL_LUMINANCE4_SGIS', 'GL_DUAL_LUMINANCE8_SGIS',
    'GL_DUAL_LUMINANCE_ALPHA4_SGIS', 'GL_DUAL_LUMINANCE_ALPHA8_SGIS',
    'GL_DUAL_TEXTURE_SELECT_SGIS', 'GL_DUDV_ATI',
    'GL_DUP_FIRST_CUBIC_CURVE_TO_NV', 'GL_DUP_LAST_CUBIC_CURVE_TO_NV',
    'GL_DYNAMIC_ATI', 'GL_DYNAMIC_COPY', 'GL_DYNAMIC_COPY_ARB',
    'GL_DYNAMIC_DRAW', 'GL_DYNAMIC_DRAW_ARB', 'GL_DYNAMIC_READ',
    'GL_DYNAMIC_READ_ARB', 'GL_DYNAMIC_STORAGE_BIT',
    'GL_EDGEFLAG_BIT_PGI', 'GL_EDGE_FLAG', 'GL_EDGE_FLAG_ARRAY',
    'GL_EDGE_FLAG_ARRAY_ADDRESS_NV',
    'GL_EDGE_FLAG_ARRAY_BUFFER_BINDING',
    'GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB',
    'GL_EDGE_FLAG_ARRAY_COUNT_EXT', 'GL_EDGE_FLAG_ARRAY_EXT',
    'GL_EDGE_FLAG_ARRAY_LENGTH_NV', 'GL_EDGE_FLAG_ARRAY_LIST_IBM',
    'GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM',
    'GL_EDGE_FLAG_ARRAY_POINTER', 'GL_EDGE_FLAG_ARRAY_POINTER_EXT',
    'GL_EDGE_FLAG_ARRAY_STRIDE', 'GL_EDGE_FLAG_ARRAY_STRIDE_EXT',
    'GL_EFFECTIVE_RASTER_SAMPLES_EXT', 'GL_EIGHTH_BIT_ATI',
    'GL_ELEMENT_ADDRESS_COMMAND_NV', 'GL_ELEMENT_ARRAY_ADDRESS_NV',
    'GL_ELEMENT_ARRAY_APPLE', 'GL_ELEMENT_ARRAY_ATI',
    'GL_ELEMENT_ARRAY_BARRIER_BIT',
    'GL_ELEMENT_ARRAY_BARRIER_BIT_EXT', 'GL_ELEMENT_ARRAY_BUFFER',
    'GL_ELEMENT_ARRAY_BUFFER_ARB', 'GL_ELEMENT_ARRAY_BUFFER_BINDING',
    'GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB',
    'GL_ELEMENT_ARRAY_LENGTH_NV', 'GL_ELEMENT_ARRAY_POINTER_APPLE',
    'GL_ELEMENT_ARRAY_POINTER_ATI', 'GL_ELEMENT_ARRAY_TYPE_APPLE',
    'GL_ELEMENT_ARRAY_TYPE_ATI', 'GL_ELEMENT_ARRAY_UNIFIED_NV',
    'GL_EMBOSS_CONSTANT_NV', 'GL_EMBOSS_LIGHT_NV', 'GL_EMBOSS_MAP_NV',
    'GL_EMISSION', 'GL_ENABLE_BIT', 'GL_EQUAL', 'GL_EQUIV',
    'GL_EVAL_2D_NV', 'GL_EVAL_BIT',
    'GL_EVAL_FRACTIONAL_TESSELLATION_NV', 'GL_EVAL_TRIANGULAR_2D_NV',
    'GL_EVAL_VERTEX_ATTRIB0_NV', 'GL_EVAL_VERTEX_ATTRIB10_NV',
    'GL_EVAL_VERTEX_ATTRIB11_NV', 'GL_EVAL_VERTEX_ATTRIB12_NV',
    'GL_EVAL_VERTEX_ATTRIB13_NV', 'GL_EVAL_VERTEX_ATTRIB14_NV',
    'GL_EVAL_VERTEX_ATTRIB15_NV', 'GL_EVAL_VERTEX_ATTRIB1_NV',
    'GL_EVAL_VERTEX_ATTRIB2_NV', 'GL_EVAL_VERTEX_ATTRIB3_NV',
    'GL_EVAL_VERTEX_ATTRIB4_NV', 'GL_EVAL_VERTEX_ATTRIB5_NV',
    'GL_EVAL_VERTEX_ATTRIB6_NV', 'GL_EVAL_VERTEX_ATTRIB7_NV',
    'GL_EVAL_VERTEX_ATTRIB8_NV', 'GL_EVAL_VERTEX_ATTRIB9_NV',
    'GL_EXCLUSION_KHR', 'GL_EXCLUSION_NV', 'GL_EXCLUSIVE_EXT',
    'GL_EXP', 'GL_EXP2', 'GL_EXPAND_NEGATE_NV', 'GL_EXPAND_NORMAL_NV',
    'GL_EXTENSIONS', 'GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD',
    'GL_EXT_422_pixels', 'GL_EXT_EGL_image_storage',
    'GL_EXT_EGL_sync', 'GL_EXT_abgr', 'GL_EXT_bgra',
    'GL_EXT_bindable_uniform', 'GL_EXT_blend_color',
    'GL_EXT_blend_equation_separate', 'GL_EXT_blend_func_separate',
    'GL_EXT_blend_logic_op', 'GL_EXT_blend_minmax',
    'GL_EXT_blend_subtract', 'GL_EXT_clip_volume_hint',
    'GL_EXT_cmyka', 'GL_EXT_color_subtable',
    'GL_EXT_compiled_vertex_array', 'GL_EXT_convolution',
    'GL_EXT_coordinate_frame', 'GL_EXT_copy_texture',
    'GL_EXT_cull_vertex', 'GL_EXT_debug_label', 'GL_EXT_debug_marker',
    'GL_EXT_depth_bounds_test', 'GL_EXT_direct_state_access',
    'GL_EXT_draw_buffers2', 'GL_EXT_draw_instanced',
    'GL_EXT_draw_range_elements', 'GL_EXT_external_buffer',
    'GL_EXT_fog_coord', 'GL_EXT_framebuffer_blit',
    'GL_EXT_framebuffer_blit_layers',
    'GL_EXT_framebuffer_multisample',
    'GL_EXT_framebuffer_multisample_blit_scaled',
    'GL_EXT_framebuffer_object', 'GL_EXT_framebuffer_sRGB',
    'GL_EXT_geometry_shader4', 'GL_EXT_gpu_program_parameters',
    'GL_EXT_gpu_shader4', 'GL_EXT_histogram',
    'GL_EXT_index_array_formats', 'GL_EXT_index_func',
    'GL_EXT_index_material', 'GL_EXT_index_texture',
    'GL_EXT_light_texture', 'GL_EXT_memory_object',
    'GL_EXT_memory_object_fd', 'GL_EXT_memory_object_win32',
    'GL_EXT_misc_attribute', 'GL_EXT_multi_draw_arrays',
    'GL_EXT_multisample',
    'GL_EXT_multiview_tessellation_geometry_shader',
    'GL_EXT_multiview_texture_multisample',
    'GL_EXT_multiview_timer_query', 'GL_EXT_packed_depth_stencil',
    'GL_EXT_packed_float', 'GL_EXT_packed_pixels',
    'GL_EXT_paletted_texture', 'GL_EXT_pixel_buffer_object',
    'GL_EXT_pixel_transform', 'GL_EXT_pixel_transform_color_table',
    'GL_EXT_point_parameters', 'GL_EXT_polygon_offset',
    'GL_EXT_polygon_offset_clamp', 'GL_EXT_post_depth_coverage',
    'GL_EXT_provoking_vertex', 'GL_EXT_raster_multisample',
    'GL_EXT_rescale_normal', 'GL_EXT_secondary_color',
    'GL_EXT_semaphore', 'GL_EXT_semaphore_fd',
    'GL_EXT_semaphore_win32', 'GL_EXT_separate_shader_objects',
    'GL_EXT_separate_specular_color',
    'GL_EXT_shader_framebuffer_fetch',
    'GL_EXT_shader_framebuffer_fetch_non_coherent',
    'GL_EXT_shader_image_load_formatted',
    'GL_EXT_shader_image_load_store', 'GL_EXT_shader_integer_mix',
    'GL_EXT_shader_samples_identical', 'GL_EXT_shadow_funcs',
    'GL_EXT_shared_texture_palette', 'GL_EXT_sparse_texture2',
    'GL_EXT_stencil_clear_tag', 'GL_EXT_stencil_two_side',
    'GL_EXT_stencil_wrap', 'GL_EXT_subtexture', 'GL_EXT_texture',
    'GL_EXT_texture3D', 'GL_EXT_texture_array',
    'GL_EXT_texture_buffer_object', 'GL_EXT_texture_compression_latc',
    'GL_EXT_texture_compression_rgtc',
    'GL_EXT_texture_compression_s3tc', 'GL_EXT_texture_cube_map',
    'GL_EXT_texture_env_add', 'GL_EXT_texture_env_combine',
    'GL_EXT_texture_env_dot3', 'GL_EXT_texture_filter_anisotropic',
    'GL_EXT_texture_filter_minmax', 'GL_EXT_texture_integer',
    'GL_EXT_texture_lod_bias', 'GL_EXT_texture_mirror_clamp',
    'GL_EXT_texture_object', 'GL_EXT_texture_perturb_normal',
    'GL_EXT_texture_sRGB', 'GL_EXT_texture_sRGB_R8',
    'GL_EXT_texture_sRGB_RG8', 'GL_EXT_texture_sRGB_decode',
    'GL_EXT_texture_shadow_lod', 'GL_EXT_texture_shared_exponent',
    'GL_EXT_texture_snorm', 'GL_EXT_texture_storage',
    'GL_EXT_texture_swizzle', 'GL_EXT_timer_query',
    'GL_EXT_transform_feedback', 'GL_EXT_vertex_array',
    'GL_EXT_vertex_array_bgra', 'GL_EXT_vertex_attrib_64bit',
    'GL_EXT_vertex_shader', 'GL_EXT_vertex_weighting',
    'GL_EXT_win32_keyed_mutex', 'GL_EXT_window_rectangles',
    'GL_EXT_x11_sync_object', 'GL_EYE_DISTANCE_TO_LINE_SGIS',
    'GL_EYE_DISTANCE_TO_POINT_SGIS', 'GL_EYE_LINEAR',
    'GL_EYE_LINEAR_NV', 'GL_EYE_LINE_SGIS', 'GL_EYE_PLANE',
    'GL_EYE_PLANE_ABSOLUTE_NV', 'GL_EYE_POINT_SGIS',
    'GL_EYE_RADIAL_NV', 'GL_E_TIMES_F_NV', 'GL_FACTOR_MAX_AMD',
    'GL_FACTOR_MIN_AMD', 'GL_FAILURE_NV', 'GL_FALSE', 'GL_FASTEST',
    'GL_FEEDBACK', 'GL_FEEDBACK_BUFFER_POINTER',
    'GL_FEEDBACK_BUFFER_SIZE', 'GL_FEEDBACK_BUFFER_TYPE',
    'GL_FENCE_APPLE', 'GL_FENCE_CONDITION_NV', 'GL_FENCE_STATUS_NV',
    'GL_FIELDS_NV', 'GL_FIELD_LOWER_NV', 'GL_FIELD_UPPER_NV',
    'GL_FILE_NAME_NV', 'GL_FILL', 'GL_FILL_RECTANGLE_NV', 'GL_FILTER',
    'GL_FILTER4_SGIS', 'GL_FIRST_TO_REST_NV',
    'GL_FIRST_VERTEX_CONVENTION', 'GL_FIRST_VERTEX_CONVENTION_EXT',
    'GL_FIXED', 'GL_FIXED_OES', 'GL_FIXED_ONLY', 'GL_FIXED_ONLY_ARB',
    'GL_FLAT', 'GL_FLOAT', 'GL_FLOAT16_MAT2_AMD',
    'GL_FLOAT16_MAT2x3_AMD', 'GL_FLOAT16_MAT2x4_AMD',
    'GL_FLOAT16_MAT3_AMD', 'GL_FLOAT16_MAT3x2_AMD',
    'GL_FLOAT16_MAT3x4_AMD', 'GL_FLOAT16_MAT4_AMD',
    'GL_FLOAT16_MAT4x2_AMD', 'GL_FLOAT16_MAT4x3_AMD', 'GL_FLOAT16_NV',
    'GL_FLOAT16_VEC2_NV', 'GL_FLOAT16_VEC3_NV', 'GL_FLOAT16_VEC4_NV',
    'GL_FLOAT_32_UNSIGNED_INT_24_8_REV',
    'GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV',
    'GL_FLOAT_CLEAR_COLOR_VALUE_NV', 'GL_FLOAT_MAT2',
    'GL_FLOAT_MAT2_ARB', 'GL_FLOAT_MAT2x3', 'GL_FLOAT_MAT2x4',
    'GL_FLOAT_MAT3', 'GL_FLOAT_MAT3_ARB', 'GL_FLOAT_MAT3x2',
    'GL_FLOAT_MAT3x4', 'GL_FLOAT_MAT4', 'GL_FLOAT_MAT4_ARB',
    'GL_FLOAT_MAT4x2', 'GL_FLOAT_MAT4x3', 'GL_FLOAT_R16_NV',
    'GL_FLOAT_R32_NV', 'GL_FLOAT_RG16_NV', 'GL_FLOAT_RG32_NV',
    'GL_FLOAT_RGB16_NV', 'GL_FLOAT_RGB32_NV', 'GL_FLOAT_RGBA16_NV',
    'GL_FLOAT_RGBA32_NV', 'GL_FLOAT_RGBA_MODE_NV', 'GL_FLOAT_RGBA_NV',
    'GL_FLOAT_RGB_NV', 'GL_FLOAT_RG_NV', 'GL_FLOAT_R_NV',
    'GL_FLOAT_VEC2', 'GL_FLOAT_VEC2_ARB', 'GL_FLOAT_VEC3',
    'GL_FLOAT_VEC3_ARB', 'GL_FLOAT_VEC4', 'GL_FLOAT_VEC4_ARB',
    'GL_FOG', 'GL_FOG_BIT', 'GL_FOG_COLOR', 'GL_FOG_COORD',
    'GL_FOG_COORDINATE', 'GL_FOG_COORDINATE_ARRAY',
    'GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING',
    'GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB',
    'GL_FOG_COORDINATE_ARRAY_EXT', 'GL_FOG_COORDINATE_ARRAY_LIST_IBM',
    'GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM',
    'GL_FOG_COORDINATE_ARRAY_POINTER',
    'GL_FOG_COORDINATE_ARRAY_POINTER_EXT',
    'GL_FOG_COORDINATE_ARRAY_STRIDE',
    'GL_FOG_COORDINATE_ARRAY_STRIDE_EXT',
    'GL_FOG_COORDINATE_ARRAY_TYPE',
    'GL_FOG_COORDINATE_ARRAY_TYPE_EXT', 'GL_FOG_COORDINATE_EXT',
    'GL_FOG_COORDINATE_SOURCE', 'GL_FOG_COORDINATE_SOURCE_EXT',
    'GL_FOG_COORD_ARRAY', 'GL_FOG_COORD_ARRAY_ADDRESS_NV',
    'GL_FOG_COORD_ARRAY_BUFFER_BINDING',
    'GL_FOG_COORD_ARRAY_LENGTH_NV', 'GL_FOG_COORD_ARRAY_POINTER',
    'GL_FOG_COORD_ARRAY_STRIDE', 'GL_FOG_COORD_ARRAY_TYPE',
    'GL_FOG_COORD_SRC', 'GL_FOG_DENSITY', 'GL_FOG_DISTANCE_MODE_NV',
    'GL_FOG_END', 'GL_FOG_FUNC_POINTS_SGIS', 'GL_FOG_FUNC_SGIS',
    'GL_FOG_HINT', 'GL_FOG_INDEX', 'GL_FOG_MODE',
    'GL_FOG_OFFSET_SGIX', 'GL_FOG_OFFSET_VALUE_SGIX',
    'GL_FOG_SPECULAR_TEXTURE_WIN', 'GL_FOG_START',
    'GL_FONT_ASCENDER_BIT_NV', 'GL_FONT_DESCENDER_BIT_NV',
    'GL_FONT_GLYPHS_AVAILABLE_NV', 'GL_FONT_HAS_KERNING_BIT_NV',
    'GL_FONT_HEIGHT_BIT_NV', 'GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV',
    'GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV',
    'GL_FONT_NUM_GLYPH_INDICES_BIT_NV',
    'GL_FONT_TARGET_UNAVAILABLE_NV', 'GL_FONT_UNAVAILABLE_NV',
    'GL_FONT_UNDERLINE_POSITION_BIT_NV',
    'GL_FONT_UNDERLINE_THICKNESS_BIT_NV', 'GL_FONT_UNINTELLIGIBLE_NV',
    'GL_FONT_UNITS_PER_EM_BIT_NV', 'GL_FONT_X_MAX_BOUNDS_BIT_NV',
    'GL_FONT_X_MIN_BOUNDS_BIT_NV', 'GL_FONT_Y_MAX_BOUNDS_BIT_NV',
    'GL_FONT_Y_MIN_BOUNDS_BIT_NV', 'GL_FORCE_BLUE_TO_ONE_NV',
    'GL_FORMAT_SUBSAMPLE_244_244_OML',
    'GL_FORMAT_SUBSAMPLE_24_24_OML', 'GL_FRACTIONAL_EVEN',
    'GL_FRACTIONAL_ODD', 'GL_FRAGMENT_COLOR_EXT',
    'GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX',
    'GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX',
    'GL_FRAGMENT_COLOR_MATERIAL_SGIX',
    'GL_FRAGMENT_COVERAGE_COLOR_NV',
    'GL_FRAGMENT_COVERAGE_TO_COLOR_NV', 'GL_FRAGMENT_DEPTH',
    'GL_FRAGMENT_DEPTH_EXT', 'GL_FRAGMENT_INPUT_NV',
    'GL_FRAGMENT_INTERPOLATION_OFFSET_BITS',
    'GL_FRAGMENT_LIGHT0_SGIX', 'GL_FRAGMENT_LIGHT1_SGIX',
    'GL_FRAGMENT_LIGHT2_SGIX', 'GL_FRAGMENT_LIGHT3_SGIX',
    'GL_FRAGMENT_LIGHT4_SGIX', 'GL_FRAGMENT_LIGHT5_SGIX',
    'GL_FRAGMENT_LIGHT6_SGIX', 'GL_FRAGMENT_LIGHT7_SGIX',
    'GL_FRAGMENT_LIGHTING_SGIX',
    'GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX',
    'GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX',
    'GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX',
    'GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX',
    'GL_FRAGMENT_MATERIAL_EXT', 'GL_FRAGMENT_NORMAL_EXT',
    'GL_FRAGMENT_PROGRAM_ARB', 'GL_FRAGMENT_PROGRAM_BINDING_NV',
    'GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV',
    'GL_FRAGMENT_PROGRAM_NV',
    'GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV', 'GL_FRAGMENT_SHADER',
    'GL_FRAGMENT_SHADER_ARB', 'GL_FRAGMENT_SHADER_ATI',
    'GL_FRAGMENT_SHADER_BIT', 'GL_FRAGMENT_SHADER_DERIVATIVE_HINT',
    'GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB',
    'GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT',
    'GL_FRAGMENT_SHADER_INVOCATIONS',
    'GL_FRAGMENT_SHADER_INVOCATIONS_ARB', 'GL_FRAGMENT_SUBROUTINE',
    'GL_FRAGMENT_SUBROUTINE_UNIFORM', 'GL_FRAGMENT_TEXTURE',
    'GL_FRAMEBUFFER', 'GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE',
    'GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE',
    'GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING',
    'GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE',
    'GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE',
    'GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE',
    'GL_FRAMEBUFFER_ATTACHMENT_LAYERED',
    'GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB',
    'GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT',
    'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME',
    'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT',
    'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE',
    'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT',
    'GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE',
    'GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE',
    'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT',
    'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR',
    'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE',
    'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT',
    'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER',
    'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT',
    'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL',
    'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT',
    'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR',
    'GL_FRAMEBUFFER_BARRIER_BIT', 'GL_FRAMEBUFFER_BARRIER_BIT_EXT',
    'GL_FRAMEBUFFER_BINDING', 'GL_FRAMEBUFFER_BINDING_EXT',
    'GL_FRAMEBUFFER_BLEND', 'GL_FRAMEBUFFER_COMPLETE',
    'GL_FRAMEBUFFER_COMPLETE_EXT', 'GL_FRAMEBUFFER_DEFAULT',
    'GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS',
    'GL_FRAMEBUFFER_DEFAULT_HEIGHT', 'GL_FRAMEBUFFER_DEFAULT_LAYERS',
    'GL_FRAMEBUFFER_DEFAULT_SAMPLES', 'GL_FRAMEBUFFER_DEFAULT_WIDTH',
    'GL_FRAMEBUFFER_EXT', 'GL_FRAMEBUFFER_FLIP_X_MESA',
    'GL_FRAMEBUFFER_FLIP_Y_MESA',
    'GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT',
    'GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT',
    'GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT',
    'GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER',
    'GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT',
    'GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT',
    'GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB',
    'GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT',
    'GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS',
    'GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB',
    'GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT',
    'GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT',
    'GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT',
    'GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE',
    'GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT',
    'GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER',
    'GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT',
    'GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR',
    'GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB',
    'GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV',
    'GL_FRAMEBUFFER_RENDERABLE', 'GL_FRAMEBUFFER_RENDERABLE_LAYERED',
    'GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB',
    'GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV',
    'GL_FRAMEBUFFER_SRGB', 'GL_FRAMEBUFFER_SRGB_CAPABLE_EXT',
    'GL_FRAMEBUFFER_SRGB_EXT', 'GL_FRAMEBUFFER_SWAP_XY_MESA',
    'GL_FRAMEBUFFER_UNDEFINED', 'GL_FRAMEBUFFER_UNSUPPORTED',
    'GL_FRAMEBUFFER_UNSUPPORTED_EXT', 'GL_FRAMEZOOM_FACTOR_SGIX',
    'GL_FRAMEZOOM_SGIX', 'GL_FRAME_NV', 'GL_FRONT',
    'GL_FRONT_AND_BACK', 'GL_FRONT_FACE', 'GL_FRONT_FACE_COMMAND_NV',
    'GL_FRONT_LEFT', 'GL_FRONT_RIGHT', 'GL_FULL_RANGE_EXT',
    'GL_FULL_STIPPLE_HINT_PGI', 'GL_FULL_SUPPORT', 'GL_FUNC_ADD',
    'GL_FUNC_ADD_EXT', 'GL_FUNC_REVERSE_SUBTRACT',
    'GL_FUNC_REVERSE_SUBTRACT_EXT', 'GL_FUNC_SUBTRACT',
    'GL_FUNC_SUBTRACT_EXT', 'GL_GENERATE_MIPMAP',
    'GL_GENERATE_MIPMAP_HINT', 'GL_GENERATE_MIPMAP_HINT_SGIS',
    'GL_GENERATE_MIPMAP_SGIS', 'GL_GENERIC_ATTRIB_NV',
    'GL_GEOMETRY_DEFORMATION_BIT_SGIX',
    'GL_GEOMETRY_DEFORMATION_SGIX', 'GL_GEOMETRY_INPUT_TYPE',
    'GL_GEOMETRY_INPUT_TYPE_ARB', 'GL_GEOMETRY_INPUT_TYPE_EXT',
    'GL_GEOMETRY_OUTPUT_TYPE', 'GL_GEOMETRY_OUTPUT_TYPE_ARB',
    'GL_GEOMETRY_OUTPUT_TYPE_EXT', 'GL_GEOMETRY_PROGRAM_NV',
    'GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV', 'GL_GEOMETRY_SHADER',
    'GL_GEOMETRY_SHADER_ARB', 'GL_GEOMETRY_SHADER_BIT',
    'GL_GEOMETRY_SHADER_EXT', 'GL_GEOMETRY_SHADER_INVOCATIONS',
    'GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED',
    'GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB',
    'GL_GEOMETRY_SUBROUTINE', 'GL_GEOMETRY_SUBROUTINE_UNIFORM',
    'GL_GEOMETRY_TEXTURE', 'GL_GEOMETRY_VERTICES_OUT',
    'GL_GEOMETRY_VERTICES_OUT_ARB', 'GL_GEOMETRY_VERTICES_OUT_EXT',
    'GL_GEQUAL', 'GL_GET_TEXTURE_IMAGE_FORMAT',
    'GL_GET_TEXTURE_IMAGE_TYPE', 'GL_GLOBAL_ALPHA_FACTOR_SUN',
    'GL_GLOBAL_ALPHA_SUN', 'GL_GLYPH_HAS_KERNING_BIT_NV',
    'GL_GLYPH_HEIGHT_BIT_NV',
    'GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV',
    'GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV',
    'GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV',
    'GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV',
    'GL_GLYPH_VERTICAL_BEARING_X_BIT_NV',
    'GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV', 'GL_GLYPH_WIDTH_BIT_NV',
    'GL_GPU_ADDRESS_NV',
    'GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX',
    'GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX',
    'GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX',
    'GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX',
    'GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX', 'GL_GREATER',
    'GL_GREEN', 'GL_GREEN_BIAS', 'GL_GREEN_BITS', 'GL_GREEN_BIT_ATI',
    'GL_GREEN_INTEGER', 'GL_GREEN_INTEGER_EXT',
    'GL_GREEN_MAX_CLAMP_INGR', 'GL_GREEN_MIN_CLAMP_INGR',
    'GL_GREEN_NV', 'GL_GREEN_SCALE', 'GL_GREMEDY_frame_terminator',
    'GL_GREMEDY_string_marker', 'GL_GUILTY_CONTEXT_RESET',
    'GL_GUILTY_CONTEXT_RESET_ARB', 'GL_HALF_APPLE',
    'GL_HALF_BIAS_NEGATE_NV', 'GL_HALF_BIAS_NORMAL_NV',
    'GL_HALF_BIT_ATI', 'GL_HALF_FLOAT', 'GL_HALF_FLOAT_ARB',
    'GL_HALF_FLOAT_NV', 'GL_HANDLE_TYPE_D3D11_IMAGE_EXT',
    'GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT',
    'GL_HANDLE_TYPE_D3D12_FENCE_EXT',
    'GL_HANDLE_TYPE_D3D12_RESOURCE_EXT',
    'GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT',
    'GL_HANDLE_TYPE_OPAQUE_FD_EXT', 'GL_HANDLE_TYPE_OPAQUE_WIN32_EXT',
    'GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT', 'GL_HARDLIGHT_KHR',
    'GL_HARDLIGHT_NV', 'GL_HARDMIX_NV', 'GL_HIGH_FLOAT',
    'GL_HIGH_INT', 'GL_HILO16_NV', 'GL_HILO8_NV', 'GL_HILO_NV',
    'GL_HINT_BIT', 'GL_HISTOGRAM', 'GL_HISTOGRAM_ALPHA_SIZE',
    'GL_HISTOGRAM_ALPHA_SIZE_EXT', 'GL_HISTOGRAM_BLUE_SIZE',
    'GL_HISTOGRAM_BLUE_SIZE_EXT', 'GL_HISTOGRAM_EXT',
    'GL_HISTOGRAM_FORMAT', 'GL_HISTOGRAM_FORMAT_EXT',
    'GL_HISTOGRAM_GREEN_SIZE', 'GL_HISTOGRAM_GREEN_SIZE_EXT',
    'GL_HISTOGRAM_LUMINANCE_SIZE', 'GL_HISTOGRAM_LUMINANCE_SIZE_EXT',
    'GL_HISTOGRAM_RED_SIZE', 'GL_HISTOGRAM_RED_SIZE_EXT',
    'GL_HISTOGRAM_SINK', 'GL_HISTOGRAM_SINK_EXT',
    'GL_HISTOGRAM_WIDTH', 'GL_HISTOGRAM_WIDTH_EXT', 'GL_HI_BIAS_NV',
    'GL_HI_SCALE_NV', 'GL_HORIZONTAL_LINE_TO_NV',
    'GL_HP_convolution_border_modes', 'GL_HP_image_transform',
    'GL_HP_occlusion_test', 'GL_HP_texture_lighting',
    'GL_HSL_COLOR_KHR', 'GL_HSL_COLOR_NV', 'GL_HSL_HUE_KHR',
    'GL_HSL_HUE_NV', 'GL_HSL_LUMINOSITY_KHR', 'GL_HSL_LUMINOSITY_NV',
    'GL_HSL_SATURATION_KHR', 'GL_HSL_SATURATION_NV',
    'GL_IBM_cull_vertex', 'GL_IBM_multimode_draw_arrays',
    'GL_IBM_rasterpos_clip', 'GL_IBM_static_data',
    'GL_IBM_texture_mirrored_repeat', 'GL_IBM_vertex_array_lists',
    'GL_IDENTITY_NV', 'GL_IGNORE_BORDER_HP', 'GL_IMAGE_1D',
    'GL_IMAGE_1D_ARRAY', 'GL_IMAGE_1D_ARRAY_EXT', 'GL_IMAGE_1D_EXT',
    'GL_IMAGE_2D', 'GL_IMAGE_2D_ARRAY', 'GL_IMAGE_2D_ARRAY_EXT',
    'GL_IMAGE_2D_EXT', 'GL_IMAGE_2D_MULTISAMPLE',
    'GL_IMAGE_2D_MULTISAMPLE_ARRAY',
    'GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT',
    'GL_IMAGE_2D_MULTISAMPLE_EXT', 'GL_IMAGE_2D_RECT',
    'GL_IMAGE_2D_RECT_EXT', 'GL_IMAGE_3D', 'GL_IMAGE_3D_EXT',
    'GL_IMAGE_BINDING_ACCESS', 'GL_IMAGE_BINDING_ACCESS_EXT',
    'GL_IMAGE_BINDING_FORMAT', 'GL_IMAGE_BINDING_FORMAT_EXT',
    'GL_IMAGE_BINDING_LAYER', 'GL_IMAGE_BINDING_LAYERED',
    'GL_IMAGE_BINDING_LAYERED_EXT', 'GL_IMAGE_BINDING_LAYER_EXT',
    'GL_IMAGE_BINDING_LEVEL', 'GL_IMAGE_BINDING_LEVEL_EXT',
    'GL_IMAGE_BINDING_NAME', 'GL_IMAGE_BINDING_NAME_EXT',
    'GL_IMAGE_BUFFER', 'GL_IMAGE_BUFFER_EXT',
    'GL_IMAGE_CLASS_10_10_10_2', 'GL_IMAGE_CLASS_11_11_10',
    'GL_IMAGE_CLASS_1_X_16', 'GL_IMAGE_CLASS_1_X_32',
    'GL_IMAGE_CLASS_1_X_8', 'GL_IMAGE_CLASS_2_X_16',
    'GL_IMAGE_CLASS_2_X_32', 'GL_IMAGE_CLASS_2_X_8',
    'GL_IMAGE_CLASS_4_X_16', 'GL_IMAGE_CLASS_4_X_32',
    'GL_IMAGE_CLASS_4_X_8', 'GL_IMAGE_COMPATIBILITY_CLASS',
    'GL_IMAGE_CUBE', 'GL_IMAGE_CUBE_EXT', 'GL_IMAGE_CUBE_MAP_ARRAY',
    'GL_IMAGE_CUBE_MAP_ARRAY_EXT', 'GL_IMAGE_CUBIC_WEIGHT_HP',
    'GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS',
    'GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE',
    'GL_IMAGE_FORMAT_COMPATIBILITY_TYPE', 'GL_IMAGE_MAG_FILTER_HP',
    'GL_IMAGE_MIN_FILTER_HP', 'GL_IMAGE_PIXEL_FORMAT',
    'GL_IMAGE_PIXEL_TYPE', 'GL_IMAGE_ROTATE_ANGLE_HP',
    'GL_IMAGE_ROTATE_ORIGIN_X_HP', 'GL_IMAGE_ROTATE_ORIGIN_Y_HP',
    'GL_IMAGE_SCALE_X_HP', 'GL_IMAGE_SCALE_Y_HP',
    'GL_IMAGE_TEXEL_SIZE', 'GL_IMAGE_TRANSFORM_2D_HP',
    'GL_IMAGE_TRANSLATE_X_HP', 'GL_IMAGE_TRANSLATE_Y_HP',
    'GL_IMPLEMENTATION_COLOR_READ_FORMAT',
    'GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES',
    'GL_IMPLEMENTATION_COLOR_READ_TYPE',
    'GL_IMPLEMENTATION_COLOR_READ_TYPE_OES', 'GL_INCLUSIVE_EXT',
    'GL_INCR', 'GL_INCR_WRAP', 'GL_INCR_WRAP_EXT', 'GL_INDEX',
    'GL_INDEX_ARRAY', 'GL_INDEX_ARRAY_ADDRESS_NV',
    'GL_INDEX_ARRAY_BUFFER_BINDING',
    'GL_INDEX_ARRAY_BUFFER_BINDING_ARB', 'GL_INDEX_ARRAY_COUNT_EXT',
    'GL_INDEX_ARRAY_EXT', 'GL_INDEX_ARRAY_LENGTH_NV',
    'GL_INDEX_ARRAY_LIST_IBM', 'GL_INDEX_ARRAY_LIST_STRIDE_IBM',
    'GL_INDEX_ARRAY_POINTER', 'GL_INDEX_ARRAY_POINTER_EXT',
    'GL_INDEX_ARRAY_STRIDE', 'GL_INDEX_ARRAY_STRIDE_EXT',
    'GL_INDEX_ARRAY_TYPE', 'GL_INDEX_ARRAY_TYPE_EXT', 'GL_INDEX_BITS',
    'GL_INDEX_BIT_PGI', 'GL_INDEX_CLEAR_VALUE', 'GL_INDEX_LOGIC_OP',
    'GL_INDEX_MATERIAL_EXT', 'GL_INDEX_MATERIAL_FACE_EXT',
    'GL_INDEX_MATERIAL_PARAMETER_EXT', 'GL_INDEX_MODE',
    'GL_INDEX_OFFSET', 'GL_INDEX_SHIFT', 'GL_INDEX_TEST_EXT',
    'GL_INDEX_TEST_FUNC_EXT', 'GL_INDEX_TEST_REF_EXT',
    'GL_INDEX_WRITEMASK', 'GL_INFO_LOG_LENGTH',
    'GL_INGR_blend_func_separate', 'GL_INGR_color_clamp',
    'GL_INGR_interlace_read', 'GL_INNOCENT_CONTEXT_RESET',
    'GL_INNOCENT_CONTEXT_RESET_ARB',
    'GL_INSTRUMENT_BUFFER_POINTER_SGIX',
    'GL_INSTRUMENT_MEASUREMENTS_SGIX', 'GL_INT', 'GL_INT16_NV',
    'GL_INT16_VEC2_NV', 'GL_INT16_VEC3_NV', 'GL_INT16_VEC4_NV',
    'GL_INT64_ARB', 'GL_INT64_NV', 'GL_INT64_VEC2_ARB',
    'GL_INT64_VEC2_NV', 'GL_INT64_VEC3_ARB', 'GL_INT64_VEC3_NV',
    'GL_INT64_VEC4_ARB', 'GL_INT64_VEC4_NV', 'GL_INT8_NV',
    'GL_INT8_VEC2_NV', 'GL_INT8_VEC3_NV', 'GL_INT8_VEC4_NV',
    'GL_INTEL_blackhole_render',
    'GL_INTEL_conservative_rasterization',
    'GL_INTEL_fragment_shader_ordering', 'GL_INTEL_framebuffer_CMAA',
    'GL_INTEL_map_texture', 'GL_INTEL_parallel_arrays',
    'GL_INTEL_performance_query', 'GL_INTENSITY', 'GL_INTENSITY12',
    'GL_INTENSITY12_EXT', 'GL_INTENSITY16', 'GL_INTENSITY16F_ARB',
    'GL_INTENSITY16I_EXT', 'GL_INTENSITY16UI_EXT',
    'GL_INTENSITY16_EXT', 'GL_INTENSITY16_SNORM',
    'GL_INTENSITY32F_ARB', 'GL_INTENSITY32I_EXT',
    'GL_INTENSITY32UI_EXT', 'GL_INTENSITY4', 'GL_INTENSITY4_EXT',
    'GL_INTENSITY8', 'GL_INTENSITY8I_EXT', 'GL_INTENSITY8UI_EXT',
    'GL_INTENSITY8_EXT', 'GL_INTENSITY8_SNORM', 'GL_INTENSITY_EXT',
    'GL_INTENSITY_FLOAT16_APPLE', 'GL_INTENSITY_FLOAT16_ATI',
    'GL_INTENSITY_FLOAT32_APPLE', 'GL_INTENSITY_FLOAT32_ATI',
    'GL_INTENSITY_SNORM', 'GL_INTERLACE_OML',
    'GL_INTERLACE_READ_INGR', 'GL_INTERLACE_READ_OML',
    'GL_INTERLACE_SGIX', 'GL_INTERLEAVED_ATTRIBS',
    'GL_INTERLEAVED_ATTRIBS_EXT', 'GL_INTERLEAVED_ATTRIBS_NV',
    'GL_INTERNALFORMAT_ALPHA_SIZE', 'GL_INTERNALFORMAT_ALPHA_TYPE',
    'GL_INTERNALFORMAT_BLUE_SIZE', 'GL_INTERNALFORMAT_BLUE_TYPE',
    'GL_INTERNALFORMAT_DEPTH_SIZE', 'GL_INTERNALFORMAT_DEPTH_TYPE',
    'GL_INTERNALFORMAT_GREEN_SIZE', 'GL_INTERNALFORMAT_GREEN_TYPE',
    'GL_INTERNALFORMAT_PREFERRED', 'GL_INTERNALFORMAT_RED_SIZE',
    'GL_INTERNALFORMAT_RED_TYPE', 'GL_INTERNALFORMAT_SHARED_SIZE',
    'GL_INTERNALFORMAT_STENCIL_SIZE',
    'GL_INTERNALFORMAT_STENCIL_TYPE', 'GL_INTERNALFORMAT_SUPPORTED',
    'GL_INTERPOLATE', 'GL_INTERPOLATE_ARB', 'GL_INTERPOLATE_EXT',
    'GL_INT_2_10_10_10_REV', 'GL_INT_IMAGE_1D',
    'GL_INT_IMAGE_1D_ARRAY', 'GL_INT_IMAGE_1D_ARRAY_EXT',
    'GL_INT_IMAGE_1D_EXT', 'GL_INT_IMAGE_2D', 'GL_INT_IMAGE_2D_ARRAY',
    'GL_INT_IMAGE_2D_ARRAY_EXT', 'GL_INT_IMAGE_2D_EXT',
    'GL_INT_IMAGE_2D_MULTISAMPLE',
    'GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY',
    'GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT',
    'GL_INT_IMAGE_2D_MULTISAMPLE_EXT', 'GL_INT_IMAGE_2D_RECT',
    'GL_INT_IMAGE_2D_RECT_EXT', 'GL_INT_IMAGE_3D',
    'GL_INT_IMAGE_3D_EXT', 'GL_INT_IMAGE_BUFFER',
    'GL_INT_IMAGE_BUFFER_EXT', 'GL_INT_IMAGE_CUBE',
    'GL_INT_IMAGE_CUBE_EXT', 'GL_INT_IMAGE_CUBE_MAP_ARRAY',
    'GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT', 'GL_INT_SAMPLER_1D',
    'GL_INT_SAMPLER_1D_ARRAY', 'GL_INT_SAMPLER_1D_ARRAY_EXT',
    'GL_INT_SAMPLER_1D_EXT', 'GL_INT_SAMPLER_2D',
    'GL_INT_SAMPLER_2D_ARRAY', 'GL_INT_SAMPLER_2D_ARRAY_EXT',
    'GL_INT_SAMPLER_2D_EXT', 'GL_INT_SAMPLER_2D_MULTISAMPLE',
    'GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY', 'GL_INT_SAMPLER_2D_RECT',
    'GL_INT_SAMPLER_2D_RECT_EXT', 'GL_INT_SAMPLER_3D',
    'GL_INT_SAMPLER_3D_EXT', 'GL_INT_SAMPLER_BUFFER',
    'GL_INT_SAMPLER_BUFFER_AMD', 'GL_INT_SAMPLER_BUFFER_EXT',
    'GL_INT_SAMPLER_CUBE', 'GL_INT_SAMPLER_CUBE_EXT',
    'GL_INT_SAMPLER_CUBE_MAP_ARRAY',
    'GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB',
    'GL_INT_SAMPLER_RENDERBUFFER_NV', 'GL_INT_VEC2',
    'GL_INT_VEC2_ARB', 'GL_INT_VEC3', 'GL_INT_VEC3_ARB',
    'GL_INT_VEC4', 'GL_INT_VEC4_ARB', 'GL_INVALID_ENUM',
    'GL_INVALID_FRAMEBUFFER_OPERATION',
    'GL_INVALID_FRAMEBUFFER_OPERATION_EXT', 'GL_INVALID_INDEX',
    'GL_INVALID_OPERATION', 'GL_INVALID_VALUE',
    'GL_INVARIANT_DATATYPE_EXT', 'GL_INVARIANT_EXT',
    'GL_INVARIANT_VALUE_EXT', 'GL_INVERSE_NV',
    'GL_INVERSE_TRANSPOSE_NV', 'GL_INVERT',
    'GL_INVERTED_SCREEN_W_REND', 'GL_INVERT_OVG_NV',
    'GL_INVERT_RGB_NV', 'GL_IR_INSTRUMENT1_SGIX', 'GL_ISOLINES',
    'GL_IS_PER_PATCH', 'GL_IS_ROW_MAJOR', 'GL_ITALIC_BIT_NV',
    'GL_IUI_N3F_V2F_EXT', 'GL_IUI_N3F_V3F_EXT', 'GL_IUI_V2F_EXT',
    'GL_IUI_V3F_EXT', 'GL_KEEP', 'GL_KHR_blend_equation_advanced',
    'GL_KHR_blend_equation_advanced_coherent',
    'GL_KHR_context_flush_control', 'GL_KHR_debug', 'GL_KHR_no_error',
    'GL_KHR_parallel_shader_compile',
    'GL_KHR_robust_buffer_access_behavior', 'GL_KHR_robustness',
    'GL_KHR_shader_subgroup', 'GL_KHR_texture_compression_astc_hdr',
    'GL_KHR_texture_compression_astc_ldr',
    'GL_KHR_texture_compression_astc_sliced_3d',
    'GL_LARGE_CCW_ARC_TO_NV', 'GL_LARGE_CW_ARC_TO_NV',
    'GL_LAST_VERTEX_CONVENTION', 'GL_LAST_VERTEX_CONVENTION_EXT',
    'GL_LAST_VIDEO_CAPTURE_STATUS_NV', 'GL_LAYER_NV',
    'GL_LAYER_PROVOKING_VERTEX', 'GL_LAYOUT_COLOR_ATTACHMENT_EXT',
    'GL_LAYOUT_DEFAULT_INTEL',
    'GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT',
    'GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT',
    'GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT',
    'GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT', 'GL_LAYOUT_GENERAL_EXT',
    'GL_LAYOUT_LINEAR_CPU_CACHED_INTEL', 'GL_LAYOUT_LINEAR_INTEL',
    'GL_LAYOUT_SHADER_READ_ONLY_EXT', 'GL_LAYOUT_TRANSFER_DST_EXT',
    'GL_LAYOUT_TRANSFER_SRC_EXT', 'GL_LEFT', 'GL_LEQUAL',
    'GL_LERP_ATI', 'GL_LESS', 'GL_LGPU_SEPARATE_STORAGE_BIT_NVX',
    'GL_LIGHT0', 'GL_LIGHT1', 'GL_LIGHT2', 'GL_LIGHT3', 'GL_LIGHT4',
    'GL_LIGHT5', 'GL_LIGHT6', 'GL_LIGHT7', 'GL_LIGHTEN_KHR',
    'GL_LIGHTEN_NV', 'GL_LIGHTING', 'GL_LIGHTING_BIT',
    'GL_LIGHT_ENV_MODE_SGIX', 'GL_LIGHT_MODEL_AMBIENT',
    'GL_LIGHT_MODEL_COLOR_CONTROL',
    'GL_LIGHT_MODEL_COLOR_CONTROL_EXT', 'GL_LIGHT_MODEL_LOCAL_VIEWER',
    'GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE', 'GL_LIGHT_MODEL_TWO_SIDE',
    'GL_LINE', 'GL_LINEAR', 'GL_LINEARBURN_NV', 'GL_LINEARDODGE_NV',
    'GL_LINEARLIGHT_NV', 'GL_LINEAR_ATTENUATION',
    'GL_LINEAR_CLIPMAP_LINEAR_SGIX', 'GL_LINEAR_CLIPMAP_NEAREST_SGIX',
    'GL_LINEAR_DETAIL_ALPHA_SGIS', 'GL_LINEAR_DETAIL_COLOR_SGIS',
    'GL_LINEAR_DETAIL_SGIS', 'GL_LINEAR_MIPMAP_LINEAR',
    'GL_LINEAR_MIPMAP_NEAREST', 'GL_LINEAR_SHARPEN_ALPHA_SGIS',
    'GL_LINEAR_SHARPEN_COLOR_SGIS', 'GL_LINEAR_SHARPEN_SGIS',
    'GL_LINEAR_TILING_EXT', 'GL_LINES', 'GL_LINES_ADJACENCY',
    'GL_LINES_ADJACENCY_ARB', 'GL_LINES_ADJACENCY_EXT', 'GL_LINE_BIT',
    'GL_LINE_LOOP', 'GL_LINE_RESET_TOKEN', 'GL_LINE_SMOOTH',
    'GL_LINE_SMOOTH_HINT', 'GL_LINE_STIPPLE',
    'GL_LINE_STIPPLE_PATTERN', 'GL_LINE_STIPPLE_REPEAT',
    'GL_LINE_STRIP', 'GL_LINE_STRIP_ADJACENCY',
    'GL_LINE_STRIP_ADJACENCY_ARB', 'GL_LINE_STRIP_ADJACENCY_EXT',
    'GL_LINE_TOKEN', 'GL_LINE_TO_NV', 'GL_LINE_WIDTH',
    'GL_LINE_WIDTH_COMMAND_NV', 'GL_LINE_WIDTH_GRANULARITY',
    'GL_LINE_WIDTH_RANGE', 'GL_LINK_STATUS', 'GL_LIST_BASE',
    'GL_LIST_BIT', 'GL_LIST_INDEX', 'GL_LIST_MODE',
    'GL_LIST_PRIORITY_SGIX', 'GL_LOAD',
    'GL_LOCAL_CONSTANT_DATATYPE_EXT', 'GL_LOCAL_CONSTANT_EXT',
    'GL_LOCAL_CONSTANT_VALUE_EXT', 'GL_LOCAL_EXT', 'GL_LOCATION',
    'GL_LOCATION_COMPONENT', 'GL_LOCATION_INDEX', 'GL_LOGIC_OP',
    'GL_LOGIC_OP_MODE', 'GL_LOSE_CONTEXT_ON_RESET',
    'GL_LOSE_CONTEXT_ON_RESET_ARB', 'GL_LOWER_LEFT', 'GL_LOW_FLOAT',
    'GL_LOW_INT', 'GL_LO_BIAS_NV', 'GL_LO_SCALE_NV',
    'GL_LUID_SIZE_EXT', 'GL_LUMINANCE', 'GL_LUMINANCE12',
    'GL_LUMINANCE12_ALPHA12', 'GL_LUMINANCE12_ALPHA12_EXT',
    'GL_LUMINANCE12_ALPHA4', 'GL_LUMINANCE12_ALPHA4_EXT',
    'GL_LUMINANCE12_EXT', 'GL_LUMINANCE16', 'GL_LUMINANCE16F_ARB',
    'GL_LUMINANCE16F_EXT', 'GL_LUMINANCE16I_EXT',
    'GL_LUMINANCE16UI_EXT', 'GL_LUMINANCE16_ALPHA16',
    'GL_LUMINANCE16_ALPHA16_EXT', 'GL_LUMINANCE16_ALPHA16_SNORM',
    'GL_LUMINANCE16_EXT', 'GL_LUMINANCE16_SNORM',
    'GL_LUMINANCE32F_ARB', 'GL_LUMINANCE32F_EXT',
    'GL_LUMINANCE32I_EXT', 'GL_LUMINANCE32UI_EXT', 'GL_LUMINANCE4',
    'GL_LUMINANCE4_ALPHA4', 'GL_LUMINANCE4_ALPHA4_EXT',
    'GL_LUMINANCE4_EXT', 'GL_LUMINANCE6_ALPHA2',
    'GL_LUMINANCE6_ALPHA2_EXT', 'GL_LUMINANCE8', 'GL_LUMINANCE8I_EXT',
    'GL_LUMINANCE8UI_EXT', 'GL_LUMINANCE8_ALPHA8',
    'GL_LUMINANCE8_ALPHA8_EXT', 'GL_LUMINANCE8_ALPHA8_SNORM',
    'GL_LUMINANCE8_EXT', 'GL_LUMINANCE8_SNORM', 'GL_LUMINANCE_ALPHA',
    'GL_LUMINANCE_ALPHA16F_ARB', 'GL_LUMINANCE_ALPHA16F_EXT',
    'GL_LUMINANCE_ALPHA16I_EXT', 'GL_LUMINANCE_ALPHA16UI_EXT',
    'GL_LUMINANCE_ALPHA32F_ARB', 'GL_LUMINANCE_ALPHA32F_EXT',
    'GL_LUMINANCE_ALPHA32I_EXT', 'GL_LUMINANCE_ALPHA32UI_EXT',
    'GL_LUMINANCE_ALPHA8I_EXT', 'GL_LUMINANCE_ALPHA8UI_EXT',
    'GL_LUMINANCE_ALPHA_FLOAT16_APPLE',
    'GL_LUMINANCE_ALPHA_FLOAT16_ATI',
    'GL_LUMINANCE_ALPHA_FLOAT32_APPLE',
    'GL_LUMINANCE_ALPHA_FLOAT32_ATI',
    'GL_LUMINANCE_ALPHA_INTEGER_EXT', 'GL_LUMINANCE_ALPHA_SNORM',
    'GL_LUMINANCE_FLOAT16_APPLE', 'GL_LUMINANCE_FLOAT16_ATI',
    'GL_LUMINANCE_FLOAT32_APPLE', 'GL_LUMINANCE_FLOAT32_ATI',
    'GL_LUMINANCE_INTEGER_EXT', 'GL_LUMINANCE_SNORM', 'GL_MAD_ATI',
    'GL_MAGNITUDE_BIAS_NV', 'GL_MAGNITUDE_SCALE_NV',
    'GL_MAJOR_VERSION', 'GL_MANUAL_GENERATE_MIPMAP',
    'GL_MAP1_BINORMAL_EXT', 'GL_MAP1_COLOR_4', 'GL_MAP1_GRID_DOMAIN',
    'GL_MAP1_GRID_SEGMENTS', 'GL_MAP1_INDEX', 'GL_MAP1_NORMAL',
    'GL_MAP1_TANGENT_EXT', 'GL_MAP1_TEXTURE_COORD_1',
    'GL_MAP1_TEXTURE_COORD_2', 'GL_MAP1_TEXTURE_COORD_3',
    'GL_MAP1_TEXTURE_COORD_4', 'GL_MAP1_VERTEX_3', 'GL_MAP1_VERTEX_4',
    'GL_MAP1_VERTEX_ATTRIB0_4_NV', 'GL_MAP1_VERTEX_ATTRIB10_4_NV',
    'GL_MAP1_VERTEX_ATTRIB11_4_NV', 'GL_MAP1_VERTEX_ATTRIB12_4_NV',
    'GL_MAP1_VERTEX_ATTRIB13_4_NV', 'GL_MAP1_VERTEX_ATTRIB14_4_NV',
    'GL_MAP1_VERTEX_ATTRIB15_4_NV', 'GL_MAP1_VERTEX_ATTRIB1_4_NV',
    'GL_MAP1_VERTEX_ATTRIB2_4_NV', 'GL_MAP1_VERTEX_ATTRIB3_4_NV',
    'GL_MAP1_VERTEX_ATTRIB4_4_NV', 'GL_MAP1_VERTEX_ATTRIB5_4_NV',
    'GL_MAP1_VERTEX_ATTRIB6_4_NV', 'GL_MAP1_VERTEX_ATTRIB7_4_NV',
    'GL_MAP1_VERTEX_ATTRIB8_4_NV', 'GL_MAP1_VERTEX_ATTRIB9_4_NV',
    'GL_MAP2_BINORMAL_EXT', 'GL_MAP2_COLOR_4', 'GL_MAP2_GRID_DOMAIN',
    'GL_MAP2_GRID_SEGMENTS', 'GL_MAP2_INDEX', 'GL_MAP2_NORMAL',
    'GL_MAP2_TANGENT_EXT', 'GL_MAP2_TEXTURE_COORD_1',
    'GL_MAP2_TEXTURE_COORD_2', 'GL_MAP2_TEXTURE_COORD_3',
    'GL_MAP2_TEXTURE_COORD_4', 'GL_MAP2_VERTEX_3', 'GL_MAP2_VERTEX_4',
    'GL_MAP2_VERTEX_ATTRIB0_4_NV', 'GL_MAP2_VERTEX_ATTRIB10_4_NV',
    'GL_MAP2_VERTEX_ATTRIB11_4_NV', 'GL_MAP2_VERTEX_ATTRIB12_4_NV',
    'GL_MAP2_VERTEX_ATTRIB13_4_NV', 'GL_MAP2_VERTEX_ATTRIB14_4_NV',
    'GL_MAP2_VERTEX_ATTRIB15_4_NV', 'GL_MAP2_VERTEX_ATTRIB1_4_NV',
    'GL_MAP2_VERTEX_ATTRIB2_4_NV', 'GL_MAP2_VERTEX_ATTRIB3_4_NV',
    'GL_MAP2_VERTEX_ATTRIB4_4_NV', 'GL_MAP2_VERTEX_ATTRIB5_4_NV',
    'GL_MAP2_VERTEX_ATTRIB6_4_NV', 'GL_MAP2_VERTEX_ATTRIB7_4_NV',
    'GL_MAP2_VERTEX_ATTRIB8_4_NV', 'GL_MAP2_VERTEX_ATTRIB9_4_NV',
    'GL_MAP_ATTRIB_U_ORDER_NV', 'GL_MAP_ATTRIB_V_ORDER_NV',
    'GL_MAP_COHERENT_BIT', 'GL_MAP_COLOR',
    'GL_MAP_FLUSH_EXPLICIT_BIT', 'GL_MAP_INVALIDATE_BUFFER_BIT',
    'GL_MAP_INVALIDATE_RANGE_BIT', 'GL_MAP_PERSISTENT_BIT',
    'GL_MAP_READ_BIT', 'GL_MAP_STENCIL', 'GL_MAP_TESSELLATION_NV',
    'GL_MAP_UNSYNCHRONIZED_BIT', 'GL_MAP_WRITE_BIT',
    'GL_MATERIAL_SIDE_HINT_PGI', 'GL_MATRIX0_ARB', 'GL_MATRIX0_NV',
    'GL_MATRIX10_ARB', 'GL_MATRIX11_ARB', 'GL_MATRIX12_ARB',
    'GL_MATRIX13_ARB', 'GL_MATRIX14_ARB', 'GL_MATRIX15_ARB',
    'GL_MATRIX16_ARB', 'GL_MATRIX17_ARB', 'GL_MATRIX18_ARB',
    'GL_MATRIX19_ARB', 'GL_MATRIX1_ARB', 'GL_MATRIX1_NV',
    'GL_MATRIX20_ARB', 'GL_MATRIX21_ARB', 'GL_MATRIX22_ARB',
    'GL_MATRIX23_ARB', 'GL_MATRIX24_ARB', 'GL_MATRIX25_ARB',
    'GL_MATRIX26_ARB', 'GL_MATRIX27_ARB', 'GL_MATRIX28_ARB',
    'GL_MATRIX29_ARB', 'GL_MATRIX2_ARB', 'GL_MATRIX2_NV',
    'GL_MATRIX30_ARB', 'GL_MATRIX31_ARB', 'GL_MATRIX3_ARB',
    'GL_MATRIX3_NV', 'GL_MATRIX4_ARB', 'GL_MATRIX4_NV',
    'GL_MATRIX5_ARB', 'GL_MATRIX5_NV', 'GL_MATRIX6_ARB',
    'GL_MATRIX6_NV', 'GL_MATRIX7_ARB', 'GL_MATRIX7_NV',
    'GL_MATRIX8_ARB', 'GL_MATRIX9_ARB', 'GL_MATRIX_EXT',
    'GL_MATRIX_INDEX_ARRAY_ARB', 'GL_MATRIX_INDEX_ARRAY_POINTER_ARB',
    'GL_MATRIX_INDEX_ARRAY_SIZE_ARB',
    'GL_MATRIX_INDEX_ARRAY_STRIDE_ARB',
    'GL_MATRIX_INDEX_ARRAY_TYPE_ARB', 'GL_MATRIX_MODE',
    'GL_MATRIX_PALETTE_ARB', 'GL_MATRIX_STRIDE',
    'GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI', 'GL_MAT_AMBIENT_BIT_PGI',
    'GL_MAT_COLOR_INDEXES_BIT_PGI', 'GL_MAT_DIFFUSE_BIT_PGI',
    'GL_MAT_EMISSION_BIT_PGI', 'GL_MAT_SHININESS_BIT_PGI',
    'GL_MAT_SPECULAR_BIT_PGI', 'GL_MAX', 'GL_MAX_3D_TEXTURE_SIZE',
    'GL_MAX_3D_TEXTURE_SIZE_EXT', 'GL_MAX_4D_TEXTURE_SIZE_SGIS',
    'GL_MAX_ACTIVE_LIGHTS_SGIX', 'GL_MAX_ARRAY_TEXTURE_LAYERS',
    'GL_MAX_ARRAY_TEXTURE_LAYERS_EXT',
    'GL_MAX_ASYNC_DRAW_PIXELS_SGIX', 'GL_MAX_ASYNC_HISTOGRAM_SGIX',
    'GL_MAX_ASYNC_READ_PIXELS_SGIX', 'GL_MAX_ASYNC_TEX_IMAGE_SGIX',
    'GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS',
    'GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE', 'GL_MAX_ATTRIB_STACK_DEPTH',
    'GL_MAX_BINDABLE_UNIFORM_SIZE_EXT',
    'GL_MAX_CLIENT_ATTRIB_STACK_DEPTH', 'GL_MAX_CLIPMAP_DEPTH_SGIX',
    'GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX', 'GL_MAX_CLIP_DISTANCES',
    'GL_MAX_CLIP_PLANES', 'GL_MAX_COARSE_FRAGMENT_SAMPLES_NV',
    'GL_MAX_COLOR_ATTACHMENTS', 'GL_MAX_COLOR_ATTACHMENTS_EXT',
    'GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD',
    'GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD',
    'GL_MAX_COLOR_MATRIX_STACK_DEPTH',
    'GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI',
    'GL_MAX_COLOR_TEXTURE_SAMPLES', 'GL_MAX_COMBINED_ATOMIC_COUNTERS',
    'GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS',
    'GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES',
    'GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS',
    'GL_MAX_COMBINED_DIMENSIONS',
    'GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS',
    'GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS',
    'GL_MAX_COMBINED_IMAGE_UNIFORMS',
    'GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS',
    'GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT',
    'GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV',
    'GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES',
    'GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS',
    'GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV',
    'GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS',
    'GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS',
    'GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS',
    'GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB',
    'GL_MAX_COMBINED_UNIFORM_BLOCKS',
    'GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS',
    'GL_MAX_COMPUTE_ATOMIC_COUNTERS',
    'GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS',
    'GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB',
    'GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB',
    'GL_MAX_COMPUTE_IMAGE_UNIFORMS',
    'GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS',
    'GL_MAX_COMPUTE_SHARED_MEMORY_SIZE',
    'GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS',
    'GL_MAX_COMPUTE_UNIFORM_BLOCKS',
    'GL_MAX_COMPUTE_UNIFORM_COMPONENTS',
    'GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB',
    'GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB',
    'GL_MAX_COMPUTE_WORK_GROUP_COUNT',
    'GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS',
    'GL_MAX_COMPUTE_WORK_GROUP_SIZE', 'GL_MAX_CONVOLUTION_HEIGHT',
    'GL_MAX_CONVOLUTION_HEIGHT_EXT', 'GL_MAX_CONVOLUTION_WIDTH',
    'GL_MAX_CONVOLUTION_WIDTH_EXT', 'GL_MAX_CUBE_MAP_TEXTURE_SIZE',
    'GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB',
    'GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT', 'GL_MAX_CULL_DISTANCES',
    'GL_MAX_DEBUG_GROUP_STACK_DEPTH', 'GL_MAX_DEBUG_LOGGED_MESSAGES',
    'GL_MAX_DEBUG_LOGGED_MESSAGES_AMD',
    'GL_MAX_DEBUG_LOGGED_MESSAGES_ARB', 'GL_MAX_DEBUG_MESSAGE_LENGTH',
    'GL_MAX_DEBUG_MESSAGE_LENGTH_AMD',
    'GL_MAX_DEBUG_MESSAGE_LENGTH_ARB',
    'GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV',
    'GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV',
    'GL_MAX_DEFORMATION_ORDER_SGIX', 'GL_MAX_DEPTH',
    'GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD',
    'GL_MAX_DEPTH_TEXTURE_SAMPLES', 'GL_MAX_DETACHED_BUFFERS_NV',
    'GL_MAX_DETACHED_TEXTURES_NV', 'GL_MAX_DRAW_BUFFERS',
    'GL_MAX_DRAW_BUFFERS_ARB', 'GL_MAX_DRAW_BUFFERS_ATI',
    'GL_MAX_DRAW_MESH_TASKS_COUNT_NV',
    'GL_MAX_DUAL_SOURCE_DRAW_BUFFERS', 'GL_MAX_ELEMENTS_INDICES',
    'GL_MAX_ELEMENTS_INDICES_EXT', 'GL_MAX_ELEMENTS_VERTICES',
    'GL_MAX_ELEMENTS_VERTICES_EXT', 'GL_MAX_ELEMENT_INDEX',
    'GL_MAX_EVAL_ORDER', 'GL_MAX_EXT', 'GL_MAX_FOG_FUNC_POINTS_SGIS',
    'GL_MAX_FRAGMENT_ATOMIC_COUNTERS',
    'GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS',
    'GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT',
    'GL_MAX_FRAGMENT_IMAGE_UNIFORMS',
    'GL_MAX_FRAGMENT_INPUT_COMPONENTS',
    'GL_MAX_FRAGMENT_INTERPOLATION_OFFSET',
    'GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV',
    'GL_MAX_FRAGMENT_LIGHTS_SGIX',
    'GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV',
    'GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS',
    'GL_MAX_FRAGMENT_UNIFORM_BLOCKS',
    'GL_MAX_FRAGMENT_UNIFORM_COMPONENTS',
    'GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB',
    'GL_MAX_FRAGMENT_UNIFORM_VECTORS', 'GL_MAX_FRAMEBUFFER_HEIGHT',
    'GL_MAX_FRAMEBUFFER_LAYERS', 'GL_MAX_FRAMEBUFFER_SAMPLES',
    'GL_MAX_FRAMEBUFFER_WIDTH', 'GL_MAX_FRAMEZOOM_FACTOR_SGIX',
    'GL_MAX_GENERAL_COMBINERS_NV', 'GL_MAX_GEOMETRY_ATOMIC_COUNTERS',
    'GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS',
    'GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT',
    'GL_MAX_GEOMETRY_IMAGE_UNIFORMS',
    'GL_MAX_GEOMETRY_INPUT_COMPONENTS',
    'GL_MAX_GEOMETRY_OUTPUT_COMPONENTS',
    'GL_MAX_GEOMETRY_OUTPUT_VERTICES',
    'GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB',
    'GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT',
    'GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV',
    'GL_MAX_GEOMETRY_SHADER_INVOCATIONS',
    'GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS',
    'GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS',
    'GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB',
    'GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT',
    'GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS',
    'GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB',
    'GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT',
    'GL_MAX_GEOMETRY_UNIFORM_BLOCKS',
    'GL_MAX_GEOMETRY_UNIFORM_COMPONENTS',
    'GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB',
    'GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT',
    'GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB',
    'GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT', 'GL_MAX_HEIGHT',
    'GL_MAX_IMAGE_SAMPLES', 'GL_MAX_IMAGE_SAMPLES_EXT',
    'GL_MAX_IMAGE_UNITS', 'GL_MAX_IMAGE_UNITS_EXT',
    'GL_MAX_INTEGER_SAMPLES', 'GL_MAX_LABEL_LENGTH', 'GL_MAX_LAYERS',
    'GL_MAX_LGPU_GPUS_NVX', 'GL_MAX_LIGHTS', 'GL_MAX_LIST_NESTING',
    'GL_MAX_MAP_TESSELLATION_NV',
    'GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB',
    'GL_MAX_MESH_ATOMIC_COUNTERS_NV',
    'GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV',
    'GL_MAX_MESH_IMAGE_UNIFORMS_NV',
    'GL_MAX_MESH_OUTPUT_PRIMITIVES_NV',
    'GL_MAX_MESH_OUTPUT_VERTICES_NV',
    'GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV',
    'GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV',
    'GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV',
    'GL_MAX_MESH_UNIFORM_BLOCKS_NV',
    'GL_MAX_MESH_UNIFORM_COMPONENTS_NV', 'GL_MAX_MESH_VIEWS_NV',
    'GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV',
    'GL_MAX_MESH_WORK_GROUP_SIZE_NV', 'GL_MAX_MODELVIEW_STACK_DEPTH',
    'GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV', 'GL_MAX_NAME_LENGTH',
    'GL_MAX_NAME_STACK_DEPTH', 'GL_MAX_NUM_ACTIVE_VARIABLES',
    'GL_MAX_NUM_COMPATIBLE_SUBROUTINES',
    'GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT',
    'GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT',
    'GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT',
    'GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT',
    'GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT',
    'GL_MAX_PALETTE_MATRICES_ARB', 'GL_MAX_PATCH_VERTICES',
    'GL_MAX_PIXEL_MAP_TABLE',
    'GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT',
    'GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI',
    'GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB',
    'GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB',
    'GL_MAX_PROGRAM_ATTRIBS_ARB',
    'GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV',
    'GL_MAX_PROGRAM_CALL_DEPTH_NV',
    'GL_MAX_PROGRAM_ENV_PARAMETERS_ARB',
    'GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV',
    'GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV',
    'GL_MAX_PROGRAM_GENERIC_RESULTS_NV', 'GL_MAX_PROGRAM_IF_DEPTH_NV',
    'GL_MAX_PROGRAM_INSTRUCTIONS_ARB',
    'GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB',
    'GL_MAX_PROGRAM_LOOP_COUNT_NV', 'GL_MAX_PROGRAM_LOOP_DEPTH_NV',
    'GL_MAX_PROGRAM_MATRICES_ARB',
    'GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB',
    'GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB',
    'GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB',
    'GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB',
    'GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB',
    'GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB',
    'GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB',
    'GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB',
    'GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB',
    'GL_MAX_PROGRAM_OUTPUT_VERTICES_NV',
    'GL_MAX_PROGRAM_PARAMETERS_ARB',
    'GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV',
    'GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV',
    'GL_MAX_PROGRAM_PATCH_ATTRIBS_NV',
    'GL_MAX_PROGRAM_RESULT_COMPONENTS_NV',
    'GL_MAX_PROGRAM_SUBROUTINE_NUM_NV',
    'GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV',
    'GL_MAX_PROGRAM_TEMPORARIES_ARB', 'GL_MAX_PROGRAM_TEXEL_OFFSET',
    'GL_MAX_PROGRAM_TEXEL_OFFSET_EXT',
    'GL_MAX_PROGRAM_TEXEL_OFFSET_NV',
    'GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB',
    'GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET',
    'GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB',
    'GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV',
    'GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB',
    'GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB',
    'GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV',
    'GL_MAX_PROJECTION_STACK_DEPTH', 'GL_MAX_RASTER_SAMPLES_EXT',
    'GL_MAX_RATIONAL_EVAL_ORDER_NV', 'GL_MAX_RECTANGLE_TEXTURE_SIZE',
    'GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB',
    'GL_MAX_RECTANGLE_TEXTURE_SIZE_NV', 'GL_MAX_RENDERBUFFER_SIZE',
    'GL_MAX_RENDERBUFFER_SIZE_EXT', 'GL_MAX_SAMPLES',
    'GL_MAX_SAMPLES_EXT', 'GL_MAX_SAMPLE_MASK_WORDS',
    'GL_MAX_SAMPLE_MASK_WORDS_NV', 'GL_MAX_SERVER_WAIT_TIMEOUT',
    'GL_MAX_SHADER_BUFFER_ADDRESS_NV',
    'GL_MAX_SHADER_COMPILER_THREADS_ARB',
    'GL_MAX_SHADER_COMPILER_THREADS_KHR',
    'GL_MAX_SHADER_STORAGE_BLOCK_SIZE',
    'GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS', 'GL_MAX_SHININESS_NV',
    'GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD',
    'GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB',
    'GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS',
    'GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB',
    'GL_MAX_SPARSE_TEXTURE_SIZE_AMD',
    'GL_MAX_SPARSE_TEXTURE_SIZE_ARB', 'GL_MAX_SPOT_EXPONENT_NV',
    'GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV', 'GL_MAX_SUBROUTINES',
    'GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS',
    'GL_MAX_TASK_ATOMIC_COUNTERS_NV',
    'GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV',
    'GL_MAX_TASK_IMAGE_UNIFORMS_NV', 'GL_MAX_TASK_OUTPUT_COUNT_NV',
    'GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV',
    'GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV',
    'GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV',
    'GL_MAX_TASK_UNIFORM_BLOCKS_NV',
    'GL_MAX_TASK_UNIFORM_COMPONENTS_NV',
    'GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV',
    'GL_MAX_TASK_WORK_GROUP_SIZE_NV',
    'GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS',
    'GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS',
    'GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS',
    'GL_MAX_TESS_CONTROL_INPUT_COMPONENTS',
    'GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS',
    'GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS',
    'GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS',
    'GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS',
    'GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS',
    'GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS',
    'GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS',
    'GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS',
    'GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS',
    'GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS',
    'GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS',
    'GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS',
    'GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS',
    'GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS',
    'GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS',
    'GL_MAX_TESS_GEN_LEVEL', 'GL_MAX_TESS_PATCH_COMPONENTS',
    'GL_MAX_TEXTURE_BUFFER_SIZE', 'GL_MAX_TEXTURE_BUFFER_SIZE_ARB',
    'GL_MAX_TEXTURE_BUFFER_SIZE_EXT', 'GL_MAX_TEXTURE_COORDS',
    'GL_MAX_TEXTURE_COORDS_ARB', 'GL_MAX_TEXTURE_COORDS_NV',
    'GL_MAX_TEXTURE_IMAGE_UNITS', 'GL_MAX_TEXTURE_IMAGE_UNITS_ARB',
    'GL_MAX_TEXTURE_IMAGE_UNITS_NV', 'GL_MAX_TEXTURE_LOD_BIAS',
    'GL_MAX_TEXTURE_LOD_BIAS_EXT', 'GL_MAX_TEXTURE_MAX_ANISOTROPY',
    'GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT', 'GL_MAX_TEXTURE_SIZE',
    'GL_MAX_TEXTURE_STACK_DEPTH', 'GL_MAX_TEXTURE_UNITS',
    'GL_MAX_TEXTURE_UNITS_ARB',
    'GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV',
    'GL_MAX_TRACK_MATRICES_NV', 'GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV',
    'GL_MAX_TRANSFORM_FEEDBACK_BUFFERS',
    'GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS',
    'GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT',
    'GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV',
    'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS',
    'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT',
    'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV',
    'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS',
    'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT',
    'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV',
    'GL_MAX_UNIFORM_BLOCK_SIZE', 'GL_MAX_UNIFORM_BUFFER_BINDINGS',
    'GL_MAX_UNIFORM_LOCATIONS', 'GL_MAX_VARYING_COMPONENTS',
    'GL_MAX_VARYING_COMPONENTS_EXT', 'GL_MAX_VARYING_FLOATS',
    'GL_MAX_VARYING_FLOATS_ARB', 'GL_MAX_VARYING_VECTORS',
    'GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV',
    'GL_MAX_VERTEX_ATOMIC_COUNTERS',
    'GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS', 'GL_MAX_VERTEX_ATTRIBS',
    'GL_MAX_VERTEX_ATTRIBS_ARB', 'GL_MAX_VERTEX_ATTRIB_BINDINGS',
    'GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET',
    'GL_MAX_VERTEX_ATTRIB_STRIDE',
    'GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT', 'GL_MAX_VERTEX_HINT_PGI',
    'GL_MAX_VERTEX_IMAGE_UNIFORMS', 'GL_MAX_VERTEX_OUTPUT_COMPONENTS',
    'GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT',
    'GL_MAX_VERTEX_SHADER_INVARIANTS_EXT',
    'GL_MAX_VERTEX_SHADER_LOCALS_EXT',
    'GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT',
    'GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS',
    'GL_MAX_VERTEX_SHADER_VARIANTS_EXT', 'GL_MAX_VERTEX_STREAMS',
    'GL_MAX_VERTEX_STREAMS_ATI', 'GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS',
    'GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB',
    'GL_MAX_VERTEX_UNIFORM_BLOCKS',
    'GL_MAX_VERTEX_UNIFORM_COMPONENTS',
    'GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB',
    'GL_MAX_VERTEX_UNIFORM_VECTORS', 'GL_MAX_VERTEX_UNITS_ARB',
    'GL_MAX_VERTEX_VARYING_COMPONENTS_ARB',
    'GL_MAX_VERTEX_VARYING_COMPONENTS_EXT', 'GL_MAX_VIEWPORTS',
    'GL_MAX_VIEWPORT_DIMS', 'GL_MAX_VIEWS_OVR', 'GL_MAX_WIDTH',
    'GL_MAX_WINDOW_RECTANGLES_EXT', 'GL_MEDIUM_FLOAT',
    'GL_MEDIUM_INT', 'GL_MEMORY_ATTACHABLE_ALIGNMENT_NV',
    'GL_MEMORY_ATTACHABLE_NV', 'GL_MEMORY_ATTACHABLE_SIZE_NV',
    'GL_MESAX_texture_stack', 'GL_MESA_framebuffer_flip_x',
    'GL_MESA_framebuffer_flip_y', 'GL_MESA_framebuffer_swap_xy',
    'GL_MESA_pack_invert', 'GL_MESA_program_binary_formats',
    'GL_MESA_resize_buffers', 'GL_MESA_shader_integer_functions',
    'GL_MESA_tile_raster_order', 'GL_MESA_window_pos',
    'GL_MESA_ycbcr_texture',
    'GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV',
    'GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV',
    'GL_MESH_OUTPUT_TYPE_NV', 'GL_MESH_PRIMITIVES_OUT_NV',
    'GL_MESH_SHADER_BIT_NV', 'GL_MESH_SHADER_NV',
    'GL_MESH_SUBROUTINE_NV', 'GL_MESH_SUBROUTINE_UNIFORM_NV',
    'GL_MESH_VERTICES_OUT_NV', 'GL_MESH_WORK_GROUP_SIZE_NV', 'GL_MIN',
    'GL_MINMAX', 'GL_MINMAX_EXT', 'GL_MINMAX_FORMAT',
    'GL_MINMAX_FORMAT_EXT', 'GL_MINMAX_SINK', 'GL_MINMAX_SINK_EXT',
    'GL_MINOR_VERSION', 'GL_MINUS_CLAMPED_NV', 'GL_MINUS_NV',
    'GL_MIN_EXT', 'GL_MIN_FRAGMENT_INTERPOLATION_OFFSET',
    'GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV',
    'GL_MIN_LOD_WARNING_AMD', 'GL_MIN_MAP_BUFFER_ALIGNMENT',
    'GL_MIN_PROGRAM_TEXEL_OFFSET', 'GL_MIN_PROGRAM_TEXEL_OFFSET_EXT',
    'GL_MIN_PROGRAM_TEXEL_OFFSET_NV',
    'GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET',
    'GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB',
    'GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV',
    'GL_MIN_SAMPLE_SHADING_VALUE', 'GL_MIN_SAMPLE_SHADING_VALUE_ARB',
    'GL_MIN_SPARSE_LEVEL_AMD', 'GL_MIPMAP', 'GL_MIRRORED_REPEAT',
    'GL_MIRRORED_REPEAT_ARB', 'GL_MIRRORED_REPEAT_IBM',
    'GL_MIRROR_CLAMP_ATI', 'GL_MIRROR_CLAMP_EXT',
    'GL_MIRROR_CLAMP_TO_BORDER_EXT', 'GL_MIRROR_CLAMP_TO_EDGE',
    'GL_MIRROR_CLAMP_TO_EDGE_ATI', 'GL_MIRROR_CLAMP_TO_EDGE_EXT',
    'GL_MITER_REVERT_NV', 'GL_MITER_TRUNCATE_NV',
    'GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV',
    'GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV', 'GL_MODELVIEW',
    'GL_MODELVIEW0_ARB', 'GL_MODELVIEW0_EXT',
    'GL_MODELVIEW0_MATRIX_EXT', 'GL_MODELVIEW0_STACK_DEPTH_EXT',
    'GL_MODELVIEW10_ARB', 'GL_MODELVIEW11_ARB', 'GL_MODELVIEW12_ARB',
    'GL_MODELVIEW13_ARB', 'GL_MODELVIEW14_ARB', 'GL_MODELVIEW15_ARB',
    'GL_MODELVIEW16_ARB', 'GL_MODELVIEW17_ARB', 'GL_MODELVIEW18_ARB',
    'GL_MODELVIEW19_ARB', 'GL_MODELVIEW1_ARB', 'GL_MODELVIEW1_EXT',
    'GL_MODELVIEW1_MATRIX_EXT', 'GL_MODELVIEW1_STACK_DEPTH_EXT',
    'GL_MODELVIEW20_ARB', 'GL_MODELVIEW21_ARB', 'GL_MODELVIEW22_ARB',
    'GL_MODELVIEW23_ARB', 'GL_MODELVIEW24_ARB', 'GL_MODELVIEW25_ARB',
    'GL_MODELVIEW26_ARB', 'GL_MODELVIEW27_ARB', 'GL_MODELVIEW28_ARB',
    'GL_MODELVIEW29_ARB', 'GL_MODELVIEW2_ARB', 'GL_MODELVIEW30_ARB',
    'GL_MODELVIEW31_ARB', 'GL_MODELVIEW3_ARB', 'GL_MODELVIEW4_ARB',
    'GL_MODELVIEW5_ARB', 'GL_MODELVIEW6_ARB', 'GL_MODELVIEW7_ARB',
    'GL_MODELVIEW8_ARB', 'GL_MODELVIEW9_ARB', 'GL_MODELVIEW_MATRIX',
    'GL_MODELVIEW_PROJECTION_NV', 'GL_MODELVIEW_STACK_DEPTH',
    'GL_MODULATE', 'GL_MODULATE_ADD_ATI',
    'GL_MODULATE_SIGNED_ADD_ATI', 'GL_MODULATE_SUBTRACT_ATI',
    'GL_MOVE_TO_CONTINUES_NV', 'GL_MOVE_TO_NV',
    'GL_MOVE_TO_RESETS_NV', 'GL_MOV_ATI', 'GL_MULT',
    'GL_MULTICAST_GPUS_NV',
    'GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV', 'GL_MULTIPLY_KHR',
    'GL_MULTIPLY_NV', 'GL_MULTISAMPLE', 'GL_MULTISAMPLES_NV',
    'GL_MULTISAMPLE_3DFX', 'GL_MULTISAMPLE_ARB', 'GL_MULTISAMPLE_BIT',
    'GL_MULTISAMPLE_BIT_3DFX', 'GL_MULTISAMPLE_BIT_ARB',
    'GL_MULTISAMPLE_BIT_EXT', 'GL_MULTISAMPLE_COVERAGE_MODES_NV',
    'GL_MULTISAMPLE_EXT', 'GL_MULTISAMPLE_FILTER_HINT_NV',
    'GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB',
    'GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB',
    'GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT', 'GL_MULTISAMPLE_SGIS',
    'GL_MUL_ATI', 'GL_MVP_MATRIX_EXT', 'GL_N3F_V3F',
    'GL_NAMED_STRING_LENGTH_ARB', 'GL_NAMED_STRING_TYPE_ARB',
    'GL_NAME_LENGTH', 'GL_NAME_STACK_DEPTH', 'GL_NAND',
    'GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI',
    'GL_NATIVE_GRAPHICS_END_HINT_PGI',
    'GL_NATIVE_GRAPHICS_HANDLE_PGI', 'GL_NEAREST',
    'GL_NEAREST_CLIPMAP_LINEAR_SGIX',
    'GL_NEAREST_CLIPMAP_NEAREST_SGIX', 'GL_NEAREST_MIPMAP_LINEAR',
    'GL_NEAREST_MIPMAP_NEAREST', 'GL_NEGATE_BIT_ATI',
    'GL_NEGATIVE_ONE_EXT', 'GL_NEGATIVE_ONE_TO_ONE',
    'GL_NEGATIVE_W_EXT', 'GL_NEGATIVE_X_EXT', 'GL_NEGATIVE_Y_EXT',
    'GL_NEGATIVE_Z_EXT', 'GL_NEVER', 'GL_NEXT_BUFFER_NV',
    'GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV', 'GL_NICEST', 'GL_NONE',
    'GL_NOOP', 'GL_NOP_COMMAND_NV', 'GL_NOR', 'GL_NORMALIZE',
    'GL_NORMALIZED_RANGE_EXT', 'GL_NORMAL_ARRAY',
    'GL_NORMAL_ARRAY_ADDRESS_NV', 'GL_NORMAL_ARRAY_BUFFER_BINDING',
    'GL_NORMAL_ARRAY_BUFFER_BINDING_ARB', 'GL_NORMAL_ARRAY_COUNT_EXT',
    'GL_NORMAL_ARRAY_EXT', 'GL_NORMAL_ARRAY_LENGTH_NV',
    'GL_NORMAL_ARRAY_LIST_IBM', 'GL_NORMAL_ARRAY_LIST_STRIDE_IBM',
    'GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL',
    'GL_NORMAL_ARRAY_POINTER', 'GL_NORMAL_ARRAY_POINTER_EXT',
    'GL_NORMAL_ARRAY_STRIDE', 'GL_NORMAL_ARRAY_STRIDE_EXT',
    'GL_NORMAL_ARRAY_TYPE', 'GL_NORMAL_ARRAY_TYPE_EXT',
    'GL_NORMAL_BIT_PGI', 'GL_NORMAL_MAP', 'GL_NORMAL_MAP_ARB',
    'GL_NORMAL_MAP_EXT', 'GL_NORMAL_MAP_NV', 'GL_NOTEQUAL',
    'GL_NO_ERROR', 'GL_NO_RESET_NOTIFICATION',
    'GL_NO_RESET_NOTIFICATION_ARB', 'GL_NUM_ACTIVE_VARIABLES',
    'GL_NUM_COMPATIBLE_SUBROUTINES',
    'GL_NUM_COMPRESSED_TEXTURE_FORMATS',
    'GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB',
    'GL_NUM_DEVICE_UUIDS_EXT', 'GL_NUM_EXTENSIONS',
    'GL_NUM_FILL_STREAMS_NV', 'GL_NUM_FRAGMENT_CONSTANTS_ATI',
    'GL_NUM_FRAGMENT_REGISTERS_ATI', 'GL_NUM_GENERAL_COMBINERS_NV',
    'GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI',
    'GL_NUM_INSTRUCTIONS_PER_PASS_ATI',
    'GL_NUM_INSTRUCTIONS_TOTAL_ATI', 'GL_NUM_LOOPBACK_COMPONENTS_ATI',
    'GL_NUM_PASSES_ATI', 'GL_NUM_PROGRAM_BINARY_FORMATS',
    'GL_NUM_SAMPLE_COUNTS', 'GL_NUM_SHADER_BINARY_FORMATS',
    'GL_NUM_SHADING_LANGUAGE_VERSIONS', 'GL_NUM_SPARSE_LEVELS_ARB',
    'GL_NUM_SPIR_V_EXTENSIONS',
    'GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD',
    'GL_NUM_TILING_TYPES_EXT', 'GL_NUM_VIDEO_CAPTURE_STREAMS_NV',
    'GL_NUM_VIRTUAL_PAGE_SIZES_ARB', 'GL_NUM_WINDOW_RECTANGLES_EXT',
    'GL_NVX_blend_equation_advanced_multi_draw_buffers',
    'GL_NVX_conditional_render', 'GL_NVX_gpu_memory_info',
    'GL_NVX_gpu_multicast2', 'GL_NVX_linked_gpu_multicast',
    'GL_NVX_progress_fence', 'GL_NV_alpha_to_coverage_dither_control',
    'GL_NV_bindless_multi_draw_indirect',
    'GL_NV_bindless_multi_draw_indirect_count',
    'GL_NV_bindless_texture', 'GL_NV_blend_equation_advanced',
    'GL_NV_blend_equation_advanced_coherent',
    'GL_NV_blend_minmax_factor', 'GL_NV_blend_square',
    'GL_NV_clip_space_w_scaling', 'GL_NV_command_list',
    'GL_NV_compute_program5', 'GL_NV_compute_shader_derivatives',
    'GL_NV_conditional_render', 'GL_NV_conservative_raster',
    'GL_NV_conservative_raster_dilate',
    'GL_NV_conservative_raster_pre_snap',
    'GL_NV_conservative_raster_pre_snap_triangles',
    'GL_NV_conservative_raster_underestimation',
    'GL_NV_copy_depth_to_color', 'GL_NV_copy_image',
    'GL_NV_deep_texture3D', 'GL_NV_depth_buffer_float',
    'GL_NV_depth_clamp', 'GL_NV_draw_texture',
    'GL_NV_draw_vulkan_image', 'GL_NV_evaluators',
    'GL_NV_explicit_multisample', 'GL_NV_fence',
    'GL_NV_fill_rectangle', 'GL_NV_float_buffer',
    'GL_NV_fog_distance', 'GL_NV_fragment_coverage_to_color',
    'GL_NV_fragment_program', 'GL_NV_fragment_program2',
    'GL_NV_fragment_program4', 'GL_NV_fragment_program_option',
    'GL_NV_fragment_shader_barycentric',
    'GL_NV_fragment_shader_interlock',
    'GL_NV_framebuffer_mixed_samples',
    'GL_NV_framebuffer_multisample_coverage',
    'GL_NV_geometry_program4', 'GL_NV_geometry_shader4',
    'GL_NV_geometry_shader_passthrough', 'GL_NV_gpu_multicast',
    'GL_NV_gpu_program4', 'GL_NV_gpu_program5',
    'GL_NV_gpu_program5_mem_extended', 'GL_NV_gpu_shader5',
    'GL_NV_half_float', 'GL_NV_internalformat_sample_query',
    'GL_NV_light_max_exponent', 'GL_NV_memory_attachment',
    'GL_NV_memory_object_sparse', 'GL_NV_mesh_shader',
    'GL_NV_multisample_coverage', 'GL_NV_multisample_filter_hint',
    'GL_NV_occlusion_query', 'GL_NV_packed_depth_stencil',
    'GL_NV_parameter_buffer_object', 'GL_NV_parameter_buffer_object2',
    'GL_NV_path_rendering', 'GL_NV_path_rendering_shared_edge',
    'GL_NV_pixel_data_range', 'GL_NV_point_sprite',
    'GL_NV_present_video', 'GL_NV_primitive_restart',
    'GL_NV_primitive_shading_rate', 'GL_NV_query_resource',
    'GL_NV_query_resource_tag', 'GL_NV_register_combiners',
    'GL_NV_register_combiners2', 'GL_NV_representative_fragment_test',
    'GL_NV_robustness_video_memory_purge', 'GL_NV_sample_locations',
    'GL_NV_sample_mask_override_coverage', 'GL_NV_scissor_exclusive',
    'GL_NV_shader_atomic_counters', 'GL_NV_shader_atomic_float',
    'GL_NV_shader_atomic_float64', 'GL_NV_shader_atomic_fp16_vector',
    'GL_NV_shader_atomic_int64', 'GL_NV_shader_buffer_load',
    'GL_NV_shader_buffer_store', 'GL_NV_shader_storage_buffer_object',
    'GL_NV_shader_subgroup_partitioned',
    'GL_NV_shader_texture_footprint', 'GL_NV_shader_thread_group',
    'GL_NV_shader_thread_shuffle', 'GL_NV_shading_rate_image',
    'GL_NV_stereo_view_rendering', 'GL_NV_tessellation_program5',
    'GL_NV_texgen_emboss', 'GL_NV_texgen_reflection',
    'GL_NV_texture_barrier', 'GL_NV_texture_compression_vtc',
    'GL_NV_texture_env_combine4', 'GL_NV_texture_expand_normal',
    'GL_NV_texture_multisample', 'GL_NV_texture_rectangle',
    'GL_NV_texture_rectangle_compressed', 'GL_NV_texture_shader',
    'GL_NV_texture_shader2', 'GL_NV_texture_shader3',
    'GL_NV_timeline_semaphore', 'GL_NV_transform_feedback',
    'GL_NV_transform_feedback2',
    'GL_NV_uniform_buffer_unified_memory', 'GL_NV_vdpau_interop',
    'GL_NV_vdpau_interop2', 'GL_NV_vertex_array_range',
    'GL_NV_vertex_array_range2', 'GL_NV_vertex_attrib_integer_64bit',
    'GL_NV_vertex_buffer_unified_memory', 'GL_NV_vertex_program',
    'GL_NV_vertex_program1_1', 'GL_NV_vertex_program2',
    'GL_NV_vertex_program2_option', 'GL_NV_vertex_program3',
    'GL_NV_vertex_program4', 'GL_NV_video_capture',
    'GL_NV_viewport_array2', 'GL_NV_viewport_swizzle',
    'GL_OBJECT_ACTIVE_ATTRIBUTES_ARB',
    'GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB',
    'GL_OBJECT_ACTIVE_UNIFORMS_ARB',
    'GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB',
    'GL_OBJECT_ATTACHED_OBJECTS_ARB', 'GL_OBJECT_BUFFER_SIZE_ATI',
    'GL_OBJECT_BUFFER_USAGE_ATI', 'GL_OBJECT_COMPILE_STATUS_ARB',
    'GL_OBJECT_DELETE_STATUS_ARB', 'GL_OBJECT_DISTANCE_TO_LINE_SGIS',
    'GL_OBJECT_DISTANCE_TO_POINT_SGIS',
    'GL_OBJECT_INFO_LOG_LENGTH_ARB', 'GL_OBJECT_LINEAR',
    'GL_OBJECT_LINEAR_NV', 'GL_OBJECT_LINE_SGIS',
    'GL_OBJECT_LINK_STATUS_ARB', 'GL_OBJECT_PLANE',
    'GL_OBJECT_POINT_SGIS', 'GL_OBJECT_SHADER_SOURCE_LENGTH_ARB',
    'GL_OBJECT_SUBTYPE_ARB', 'GL_OBJECT_TYPE', 'GL_OBJECT_TYPE_ARB',
    'GL_OBJECT_VALIDATE_STATUS_ARB',
    'GL_OCCLUSION_QUERY_EVENT_MASK_AMD', 'GL_OCCLUSION_TEST_HP',
    'GL_OCCLUSION_TEST_RESULT_HP', 'GL_OES_byte_coordinates',
    'GL_OES_compressed_paletted_texture', 'GL_OES_fixed_point',
    'GL_OES_query_matrix', 'GL_OES_read_format',
    'GL_OES_single_precision', 'GL_OFFSET',
    'GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV',
    'GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV',
    'GL_OFFSET_HILO_TEXTURE_2D_NV',
    'GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV',
    'GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV',
    'GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV',
    'GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV',
    'GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV',
    'GL_OFFSET_TEXTURE_2D_BIAS_NV', 'GL_OFFSET_TEXTURE_2D_MATRIX_NV',
    'GL_OFFSET_TEXTURE_2D_NV', 'GL_OFFSET_TEXTURE_2D_SCALE_NV',
    'GL_OFFSET_TEXTURE_BIAS_NV', 'GL_OFFSET_TEXTURE_MATRIX_NV',
    'GL_OFFSET_TEXTURE_RECTANGLE_NV',
    'GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV',
    'GL_OFFSET_TEXTURE_SCALE_NV', 'GL_OML_interlace',
    'GL_OML_resample', 'GL_OML_subsample', 'GL_ONE', 'GL_ONE_EXT',
    'GL_ONE_MINUS_CONSTANT_ALPHA', 'GL_ONE_MINUS_CONSTANT_ALPHA_EXT',
    'GL_ONE_MINUS_CONSTANT_COLOR', 'GL_ONE_MINUS_CONSTANT_COLOR_EXT',
    'GL_ONE_MINUS_DST_ALPHA', 'GL_ONE_MINUS_DST_COLOR',
    'GL_ONE_MINUS_SRC1_ALPHA', 'GL_ONE_MINUS_SRC1_COLOR',
    'GL_ONE_MINUS_SRC_ALPHA', 'GL_ONE_MINUS_SRC_COLOR',
    'GL_OPERAND0_ALPHA', 'GL_OPERAND0_ALPHA_ARB',
    'GL_OPERAND0_ALPHA_EXT', 'GL_OPERAND0_RGB', 'GL_OPERAND0_RGB_ARB',
    'GL_OPERAND0_RGB_EXT', 'GL_OPERAND1_ALPHA',
    'GL_OPERAND1_ALPHA_ARB', 'GL_OPERAND1_ALPHA_EXT',
    'GL_OPERAND1_RGB', 'GL_OPERAND1_RGB_ARB', 'GL_OPERAND1_RGB_EXT',
    'GL_OPERAND2_ALPHA', 'GL_OPERAND2_ALPHA_ARB',
    'GL_OPERAND2_ALPHA_EXT', 'GL_OPERAND2_RGB', 'GL_OPERAND2_RGB_ARB',
    'GL_OPERAND2_RGB_EXT', 'GL_OPERAND3_ALPHA_NV',
    'GL_OPERAND3_RGB_NV', 'GL_OPTIMAL_TILING_EXT', 'GL_OP_ADD_EXT',
    'GL_OP_CLAMP_EXT', 'GL_OP_CROSS_PRODUCT_EXT', 'GL_OP_DOT3_EXT',
    'GL_OP_DOT4_EXT', 'GL_OP_EXP_BASE_2_EXT', 'GL_OP_FLOOR_EXT',
    'GL_OP_FRAC_EXT', 'GL_OP_INDEX_EXT', 'GL_OP_LOG_BASE_2_EXT',
    'GL_OP_MADD_EXT', 'GL_OP_MAX_EXT', 'GL_OP_MIN_EXT',
    'GL_OP_MOV_EXT', 'GL_OP_MULTIPLY_MATRIX_EXT', 'GL_OP_MUL_EXT',
    'GL_OP_NEGATE_EXT', 'GL_OP_POWER_EXT', 'GL_OP_RECIP_EXT',
    'GL_OP_RECIP_SQRT_EXT', 'GL_OP_ROUND_EXT', 'GL_OP_SET_GE_EXT',
    'GL_OP_SET_LT_EXT', 'GL_OP_SUB_EXT', 'GL_OR', 'GL_ORDER',
    'GL_OR_INVERTED', 'GL_OR_REVERSE', 'GL_OUTPUT_COLOR0_EXT',
    'GL_OUTPUT_COLOR1_EXT', 'GL_OUTPUT_FOG_EXT',
    'GL_OUTPUT_TEXTURE_COORD0_EXT', 'GL_OUTPUT_TEXTURE_COORD10_EXT',
    'GL_OUTPUT_TEXTURE_COORD11_EXT', 'GL_OUTPUT_TEXTURE_COORD12_EXT',
    'GL_OUTPUT_TEXTURE_COORD13_EXT', 'GL_OUTPUT_TEXTURE_COORD14_EXT',
    'GL_OUTPUT_TEXTURE_COORD15_EXT', 'GL_OUTPUT_TEXTURE_COORD16_EXT',
    'GL_OUTPUT_TEXTURE_COORD17_EXT', 'GL_OUTPUT_TEXTURE_COORD18_EXT',
    'GL_OUTPUT_TEXTURE_COORD19_EXT', 'GL_OUTPUT_TEXTURE_COORD1_EXT',
    'GL_OUTPUT_TEXTURE_COORD20_EXT', 'GL_OUTPUT_TEXTURE_COORD21_EXT',
    'GL_OUTPUT_TEXTURE_COORD22_EXT', 'GL_OUTPUT_TEXTURE_COORD23_EXT',
    'GL_OUTPUT_TEXTURE_COORD24_EXT', 'GL_OUTPUT_TEXTURE_COORD25_EXT',
    'GL_OUTPUT_TEXTURE_COORD26_EXT', 'GL_OUTPUT_TEXTURE_COORD27_EXT',
    'GL_OUTPUT_TEXTURE_COORD28_EXT', 'GL_OUTPUT_TEXTURE_COORD29_EXT',
    'GL_OUTPUT_TEXTURE_COORD2_EXT', 'GL_OUTPUT_TEXTURE_COORD30_EXT',
    'GL_OUTPUT_TEXTURE_COORD31_EXT', 'GL_OUTPUT_TEXTURE_COORD3_EXT',
    'GL_OUTPUT_TEXTURE_COORD4_EXT', 'GL_OUTPUT_TEXTURE_COORD5_EXT',
    'GL_OUTPUT_TEXTURE_COORD6_EXT', 'GL_OUTPUT_TEXTURE_COORD7_EXT',
    'GL_OUTPUT_TEXTURE_COORD8_EXT', 'GL_OUTPUT_TEXTURE_COORD9_EXT',
    'GL_OUTPUT_VERTEX_EXT', 'GL_OUT_OF_MEMORY', 'GL_OVERLAY_KHR',
    'GL_OVERLAY_NV', 'GL_OVR_multiview', 'GL_OVR_multiview2',
    'GL_PACK_ALIGNMENT', 'GL_PACK_CMYK_HINT_EXT',
    'GL_PACK_COMPRESSED_BLOCK_DEPTH',
    'GL_PACK_COMPRESSED_BLOCK_HEIGHT',
    'GL_PACK_COMPRESSED_BLOCK_SIZE', 'GL_PACK_COMPRESSED_BLOCK_WIDTH',
    'GL_PACK_IMAGE_DEPTH_SGIS', 'GL_PACK_IMAGE_HEIGHT',
    'GL_PACK_IMAGE_HEIGHT_EXT', 'GL_PACK_INVERT_MESA',
    'GL_PACK_LSB_FIRST', 'GL_PACK_RESAMPLE_OML',
    'GL_PACK_RESAMPLE_SGIX', 'GL_PACK_ROW_BYTES_APPLE',
    'GL_PACK_ROW_LENGTH', 'GL_PACK_SKIP_IMAGES',
    'GL_PACK_SKIP_IMAGES_EXT', 'GL_PACK_SKIP_PIXELS',
    'GL_PACK_SKIP_ROWS', 'GL_PACK_SKIP_VOLUMES_SGIS',
    'GL_PACK_SUBSAMPLE_RATE_SGIX', 'GL_PACK_SWAP_BYTES',
    'GL_PALETTE4_R5_G6_B5_OES', 'GL_PALETTE4_RGB5_A1_OES',
    'GL_PALETTE4_RGB8_OES', 'GL_PALETTE4_RGBA4_OES',
    'GL_PALETTE4_RGBA8_OES', 'GL_PALETTE8_R5_G6_B5_OES',
    'GL_PALETTE8_RGB5_A1_OES', 'GL_PALETTE8_RGB8_OES',
    'GL_PALETTE8_RGBA4_OES', 'GL_PALETTE8_RGBA8_OES',
    'GL_PARALLEL_ARRAYS_INTEL', 'GL_PARAMETER_BUFFER',
    'GL_PARAMETER_BUFFER_ARB', 'GL_PARAMETER_BUFFER_BINDING',
    'GL_PARAMETER_BUFFER_BINDING_ARB', 'GL_PARTIAL_SUCCESS_NV',
    'GL_PASS_THROUGH_NV', 'GL_PASS_THROUGH_TOKEN', 'GL_PATCHES',
    'GL_PATCH_DEFAULT_INNER_LEVEL', 'GL_PATCH_DEFAULT_OUTER_LEVEL',
    'GL_PATCH_VERTICES', 'GL_PATH_CLIENT_LENGTH_NV',
    'GL_PATH_COMMAND_COUNT_NV', 'GL_PATH_COMPUTED_LENGTH_NV',
    'GL_PATH_COORD_COUNT_NV', 'GL_PATH_COVER_DEPTH_FUNC_NV',
    'GL_PATH_DASH_ARRAY_COUNT_NV', 'GL_PATH_DASH_CAPS_NV',
    'GL_PATH_DASH_OFFSET_NV', 'GL_PATH_DASH_OFFSET_RESET_NV',
    'GL_PATH_END_CAPS_NV', 'GL_PATH_ERROR_POSITION_NV',
    'GL_PATH_FILL_BOUNDING_BOX_NV', 'GL_PATH_FILL_COVER_MODE_NV',
    'GL_PATH_FILL_MASK_NV', 'GL_PATH_FILL_MODE_NV',
    'GL_PATH_FOG_GEN_MODE_NV', 'GL_PATH_FORMAT_PS_NV',
    'GL_PATH_FORMAT_SVG_NV', 'GL_PATH_GEN_COEFF_NV',
    'GL_PATH_GEN_COLOR_FORMAT_NV', 'GL_PATH_GEN_COMPONENTS_NV',
    'GL_PATH_GEN_MODE_NV', 'GL_PATH_INITIAL_DASH_CAP_NV',
    'GL_PATH_INITIAL_END_CAP_NV', 'GL_PATH_JOIN_STYLE_NV',
    'GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV',
    'GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV', 'GL_PATH_MITER_LIMIT_NV',
    'GL_PATH_MODELVIEW_MATRIX_NV', 'GL_PATH_MODELVIEW_NV',
    'GL_PATH_MODELVIEW_STACK_DEPTH_NV',
    'GL_PATH_OBJECT_BOUNDING_BOX_NV', 'GL_PATH_PROJECTION_MATRIX_NV',
    'GL_PATH_PROJECTION_NV', 'GL_PATH_PROJECTION_STACK_DEPTH_NV',
    'GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV',
    'GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV',
    'GL_PATH_STENCIL_FUNC_NV', 'GL_PATH_STENCIL_REF_NV',
    'GL_PATH_STENCIL_VALUE_MASK_NV', 'GL_PATH_STROKE_BOUNDING_BOX_NV',
    'GL_PATH_STROKE_COVER_MODE_NV', 'GL_PATH_STROKE_MASK_NV',
    'GL_PATH_STROKE_WIDTH_NV', 'GL_PATH_TERMINAL_DASH_CAP_NV',
    'GL_PATH_TERMINAL_END_CAP_NV',
    'GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV',
    'GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV', 'GL_PERCENTAGE_AMD',
    'GL_PERFMON_RESULT_AMD', 'GL_PERFMON_RESULT_AVAILABLE_AMD',
    'GL_PERFMON_RESULT_SIZE_AMD', 'GL_PERFORMANCE_MONITOR_AMD',
    'GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL',
    'GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL',
    'GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL',
    'GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL',
    'GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL',
    'GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL',
    'GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL',
    'GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL',
    'GL_PERFQUERY_COUNTER_EVENT_INTEL',
    'GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL',
    'GL_PERFQUERY_COUNTER_RAW_INTEL',
    'GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL',
    'GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL',
    'GL_PERFQUERY_DONOT_FLUSH_INTEL', 'GL_PERFQUERY_FLUSH_INTEL',
    'GL_PERFQUERY_GLOBAL_CONTEXT_INTEL',
    'GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL',
    'GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL',
    'GL_PERFQUERY_SINGLE_CONTEXT_INTEL', 'GL_PERFQUERY_WAIT_INTEL',
    'GL_PERSPECTIVE_CORRECTION_HINT', 'GL_PERTURB_EXT',
    'GL_PER_GPU_STORAGE_BIT_NV', 'GL_PER_GPU_STORAGE_NV',
    'GL_PER_STAGE_CONSTANTS_NV', 'GL_PGI_misc_hints',
    'GL_PGI_vertex_hints', 'GL_PHONG_HINT_WIN', 'GL_PHONG_WIN',
    'GL_PINLIGHT_NV', 'GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD',
    'GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD',
    'GL_PIXEL_BUFFER_BARRIER_BIT', 'GL_PIXEL_BUFFER_BARRIER_BIT_EXT',
    'GL_PIXEL_COUNTER_BITS_NV', 'GL_PIXEL_COUNT_AVAILABLE_NV',
    'GL_PIXEL_COUNT_NV', 'GL_PIXEL_CUBIC_WEIGHT_EXT',
    'GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS',
    'GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS', 'GL_PIXEL_GROUP_COLOR_SGIS',
    'GL_PIXEL_MAG_FILTER_EXT', 'GL_PIXEL_MAP_A_TO_A',
    'GL_PIXEL_MAP_A_TO_A_SIZE', 'GL_PIXEL_MAP_B_TO_B',
    'GL_PIXEL_MAP_B_TO_B_SIZE', 'GL_PIXEL_MAP_G_TO_G',
    'GL_PIXEL_MAP_G_TO_G_SIZE', 'GL_PIXEL_MAP_I_TO_A',
    'GL_PIXEL_MAP_I_TO_A_SIZE', 'GL_PIXEL_MAP_I_TO_B',
    'GL_PIXEL_MAP_I_TO_B_SIZE', 'GL_PIXEL_MAP_I_TO_G',
    'GL_PIXEL_MAP_I_TO_G_SIZE', 'GL_PIXEL_MAP_I_TO_I',
    'GL_PIXEL_MAP_I_TO_I_SIZE', 'GL_PIXEL_MAP_I_TO_R',
    'GL_PIXEL_MAP_I_TO_R_SIZE', 'GL_PIXEL_MAP_R_TO_R',
    'GL_PIXEL_MAP_R_TO_R_SIZE', 'GL_PIXEL_MAP_S_TO_S',
    'GL_PIXEL_MAP_S_TO_S_SIZE', 'GL_PIXEL_MIN_FILTER_EXT',
    'GL_PIXEL_MODE_BIT', 'GL_PIXEL_PACK_BUFFER',
    'GL_PIXEL_PACK_BUFFER_ARB', 'GL_PIXEL_PACK_BUFFER_BINDING',
    'GL_PIXEL_PACK_BUFFER_BINDING_ARB',
    'GL_PIXEL_PACK_BUFFER_BINDING_EXT', 'GL_PIXEL_PACK_BUFFER_EXT',
    'GL_PIXEL_SUBSAMPLE_2424_SGIX', 'GL_PIXEL_SUBSAMPLE_4242_SGIX',
    'GL_PIXEL_SUBSAMPLE_4444_SGIX', 'GL_PIXEL_TEXTURE_SGIS',
    'GL_PIXEL_TEX_GEN_MODE_SGIX', 'GL_PIXEL_TEX_GEN_SGIX',
    'GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX',
    'GL_PIXEL_TILE_CACHE_INCREMENT_SGIX',
    'GL_PIXEL_TILE_CACHE_SIZE_SGIX', 'GL_PIXEL_TILE_GRID_DEPTH_SGIX',
    'GL_PIXEL_TILE_GRID_HEIGHT_SGIX', 'GL_PIXEL_TILE_GRID_WIDTH_SGIX',
    'GL_PIXEL_TILE_HEIGHT_SGIX', 'GL_PIXEL_TILE_WIDTH_SGIX',
    'GL_PIXEL_TRANSFORM_2D_EXT', 'GL_PIXEL_TRANSFORM_2D_MATRIX_EXT',
    'GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT', 'GL_PIXEL_UNPACK_BUFFER',
    'GL_PIXEL_UNPACK_BUFFER_ARB', 'GL_PIXEL_UNPACK_BUFFER_BINDING',
    'GL_PIXEL_UNPACK_BUFFER_BINDING_ARB',
    'GL_PIXEL_UNPACK_BUFFER_BINDING_EXT',
    'GL_PIXEL_UNPACK_BUFFER_EXT', 'GL_PLUS_CLAMPED_ALPHA_NV',
    'GL_PLUS_CLAMPED_NV', 'GL_PLUS_DARKER_NV', 'GL_PLUS_NV',
    'GL_PN_TRIANGLES_ATI', 'GL_PN_TRIANGLES_NORMAL_MODE_ATI',
    'GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI',
    'GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI',
    'GL_PN_TRIANGLES_POINT_MODE_ATI',
    'GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI',
    'GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI',
    'GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI', 'GL_POINT', 'GL_POINTS',
    'GL_POINT_BIT', 'GL_POINT_DISTANCE_ATTENUATION',
    'GL_POINT_DISTANCE_ATTENUATION_ARB',
    'GL_POINT_FADE_THRESHOLD_SIZE',
    'GL_POINT_FADE_THRESHOLD_SIZE_ARB',
    'GL_POINT_FADE_THRESHOLD_SIZE_EXT',
    'GL_POINT_FADE_THRESHOLD_SIZE_SGIS', 'GL_POINT_SIZE',
    'GL_POINT_SIZE_GRANULARITY', 'GL_POINT_SIZE_MAX',
    'GL_POINT_SIZE_MAX_ARB', 'GL_POINT_SIZE_MAX_EXT',
    'GL_POINT_SIZE_MAX_SGIS', 'GL_POINT_SIZE_MIN',
    'GL_POINT_SIZE_MIN_ARB', 'GL_POINT_SIZE_MIN_EXT',
    'GL_POINT_SIZE_MIN_SGIS', 'GL_POINT_SIZE_RANGE',
    'GL_POINT_SMOOTH', 'GL_POINT_SMOOTH_HINT', 'GL_POINT_SPRITE',
    'GL_POINT_SPRITE_ARB', 'GL_POINT_SPRITE_COORD_ORIGIN',
    'GL_POINT_SPRITE_NV', 'GL_POINT_SPRITE_R_MODE_NV',
    'GL_POINT_TOKEN', 'GL_POLYGON', 'GL_POLYGON_BIT',
    'GL_POLYGON_MODE', 'GL_POLYGON_OFFSET_BIAS_EXT',
    'GL_POLYGON_OFFSET_CLAMP', 'GL_POLYGON_OFFSET_CLAMP_EXT',
    'GL_POLYGON_OFFSET_COMMAND_NV', 'GL_POLYGON_OFFSET_EXT',
    'GL_POLYGON_OFFSET_FACTOR', 'GL_POLYGON_OFFSET_FACTOR_EXT',
    'GL_POLYGON_OFFSET_FILL', 'GL_POLYGON_OFFSET_LINE',
    'GL_POLYGON_OFFSET_POINT', 'GL_POLYGON_OFFSET_UNITS',
    'GL_POLYGON_SMOOTH', 'GL_POLYGON_SMOOTH_HINT',
    'GL_POLYGON_STIPPLE', 'GL_POLYGON_STIPPLE_BIT',
    'GL_POLYGON_TOKEN', 'GL_POSITION',
    'GL_POST_COLOR_MATRIX_ALPHA_BIAS',
    'GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI',
    'GL_POST_COLOR_MATRIX_ALPHA_SCALE',
    'GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI',
    'GL_POST_COLOR_MATRIX_BLUE_BIAS',
    'GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI',
    'GL_POST_COLOR_MATRIX_BLUE_SCALE',
    'GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI',
    'GL_POST_COLOR_MATRIX_COLOR_TABLE',
    'GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI',
    'GL_POST_COLOR_MATRIX_GREEN_BIAS',
    'GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI',
    'GL_POST_COLOR_MATRIX_GREEN_SCALE',
    'GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI',
    'GL_POST_COLOR_MATRIX_RED_BIAS',
    'GL_POST_COLOR_MATRIX_RED_BIAS_SGI',
    'GL_POST_COLOR_MATRIX_RED_SCALE',
    'GL_POST_COLOR_MATRIX_RED_SCALE_SGI',
    'GL_POST_CONVOLUTION_ALPHA_BIAS',
    'GL_POST_CONVOLUTION_ALPHA_BIAS_EXT',
    'GL_POST_CONVOLUTION_ALPHA_SCALE',
    'GL_POST_CONVOLUTION_ALPHA_SCALE_EXT',
    'GL_POST_CONVOLUTION_BLUE_BIAS',
    'GL_POST_CONVOLUTION_BLUE_BIAS_EXT',
    'GL_POST_CONVOLUTION_BLUE_SCALE',
    'GL_POST_CONVOLUTION_BLUE_SCALE_EXT',
    'GL_POST_CONVOLUTION_COLOR_TABLE',
    'GL_POST_CONVOLUTION_COLOR_TABLE_SGI',
    'GL_POST_CONVOLUTION_GREEN_BIAS',
    'GL_POST_CONVOLUTION_GREEN_BIAS_EXT',
    'GL_POST_CONVOLUTION_GREEN_SCALE',
    'GL_POST_CONVOLUTION_GREEN_SCALE_EXT',
    'GL_POST_CONVOLUTION_RED_BIAS',
    'GL_POST_CONVOLUTION_RED_BIAS_EXT',
    'GL_POST_CONVOLUTION_RED_SCALE',
    'GL_POST_CONVOLUTION_RED_SCALE_EXT',
    'GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP',
    'GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX',
    'GL_POST_TEXTURE_FILTER_BIAS_SGIX',
    'GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX',
    'GL_POST_TEXTURE_FILTER_SCALE_SGIX',
    'GL_PREFER_DOUBLEBUFFER_HINT_PGI', 'GL_PRESENT_DURATION_NV',
    'GL_PRESENT_TIME_NV', 'GL_PRESERVE_ATI', 'GL_PREVIOUS',
    'GL_PREVIOUS_ARB', 'GL_PREVIOUS_EXT',
    'GL_PREVIOUS_TEXTURE_INPUT_NV', 'GL_PRIMARY_COLOR',
    'GL_PRIMARY_COLOR_ARB', 'GL_PRIMARY_COLOR_EXT',
    'GL_PRIMARY_COLOR_NV', 'GL_PRIMITIVES_GENERATED',
    'GL_PRIMITIVES_GENERATED_EXT', 'GL_PRIMITIVES_GENERATED_NV',
    'GL_PRIMITIVES_SUBMITTED', 'GL_PRIMITIVES_SUBMITTED_ARB',
    'GL_PRIMITIVE_BOUNDING_BOX_ARB', 'GL_PRIMITIVE_ID_NV',
    'GL_PRIMITIVE_RESTART', 'GL_PRIMITIVE_RESTART_FIXED_INDEX',
    'GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED',
    'GL_PRIMITIVE_RESTART_INDEX', 'GL_PRIMITIVE_RESTART_INDEX_NV',
    'GL_PRIMITIVE_RESTART_NV', 'GL_PROGRAM',
    'GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB',
    'GL_PROGRAMMABLE_SAMPLE_LOCATION_NV',
    'GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB',
    'GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV',
    'GL_PROGRAM_ADDRESS_REGISTERS_ARB',
    'GL_PROGRAM_ALU_INSTRUCTIONS_ARB', 'GL_PROGRAM_ATTRIBS_ARB',
    'GL_PROGRAM_ATTRIB_COMPONENTS_NV', 'GL_PROGRAM_BINARY_FORMATS',
    'GL_PROGRAM_BINARY_FORMAT_MESA', 'GL_PROGRAM_BINARY_LENGTH',
    'GL_PROGRAM_BINARY_RETRIEVABLE_HINT', 'GL_PROGRAM_BINDING_ARB',
    'GL_PROGRAM_ERROR_POSITION_ARB', 'GL_PROGRAM_ERROR_POSITION_NV',
    'GL_PROGRAM_ERROR_STRING_ARB', 'GL_PROGRAM_ERROR_STRING_NV',
    'GL_PROGRAM_FORMAT_ARB', 'GL_PROGRAM_FORMAT_ASCII_ARB',
    'GL_PROGRAM_INPUT', 'GL_PROGRAM_INSTRUCTIONS_ARB',
    'GL_PROGRAM_LENGTH_ARB', 'GL_PROGRAM_LENGTH_NV',
    'GL_PROGRAM_MATRIX_EXT', 'GL_PROGRAM_MATRIX_STACK_DEPTH_EXT',
    'GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB',
    'GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB',
    'GL_PROGRAM_NATIVE_ATTRIBS_ARB',
    'GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB',
    'GL_PROGRAM_NATIVE_PARAMETERS_ARB',
    'GL_PROGRAM_NATIVE_TEMPORARIES_ARB',
    'GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB',
    'GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB', 'GL_PROGRAM_OBJECT_ARB',
    'GL_PROGRAM_OBJECT_EXT', 'GL_PROGRAM_OUTPUT',
    'GL_PROGRAM_PARAMETERS_ARB', 'GL_PROGRAM_PARAMETER_NV',
    'GL_PROGRAM_PIPELINE', 'GL_PROGRAM_PIPELINE_BINDING',
    'GL_PROGRAM_PIPELINE_OBJECT_EXT', 'GL_PROGRAM_POINT_SIZE',
    'GL_PROGRAM_POINT_SIZE_ARB', 'GL_PROGRAM_POINT_SIZE_EXT',
    'GL_PROGRAM_RESIDENT_NV', 'GL_PROGRAM_RESULT_COMPONENTS_NV',
    'GL_PROGRAM_SEPARABLE', 'GL_PROGRAM_STRING_ARB',
    'GL_PROGRAM_STRING_NV', 'GL_PROGRAM_TARGET_NV',
    'GL_PROGRAM_TEMPORARIES_ARB', 'GL_PROGRAM_TEX_INDIRECTIONS_ARB',
    'GL_PROGRAM_TEX_INSTRUCTIONS_ARB',
    'GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB', 'GL_PROJECTION',
    'GL_PROJECTION_MATRIX', 'GL_PROJECTION_STACK_DEPTH',
    'GL_PROTECTED_MEMORY_OBJECT_EXT', 'GL_PROVOKING_VERTEX',
    'GL_PROVOKING_VERTEX_EXT', 'GL_PROXY_COLOR_TABLE',
    'GL_PROXY_COLOR_TABLE_SGI', 'GL_PROXY_HISTOGRAM',
    'GL_PROXY_HISTOGRAM_EXT',
    'GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE',
    'GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI',
    'GL_PROXY_POST_CONVOLUTION_COLOR_TABLE',
    'GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI',
    'GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP',
    'GL_PROXY_TEXTURE_1D', 'GL_PROXY_TEXTURE_1D_ARRAY',
    'GL_PROXY_TEXTURE_1D_ARRAY_EXT', 'GL_PROXY_TEXTURE_1D_EXT',
    'GL_PROXY_TEXTURE_1D_STACK_MESAX', 'GL_PROXY_TEXTURE_2D',
    'GL_PROXY_TEXTURE_2D_ARRAY', 'GL_PROXY_TEXTURE_2D_ARRAY_EXT',
    'GL_PROXY_TEXTURE_2D_EXT', 'GL_PROXY_TEXTURE_2D_MULTISAMPLE',
    'GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY',
    'GL_PROXY_TEXTURE_2D_STACK_MESAX', 'GL_PROXY_TEXTURE_3D',
    'GL_PROXY_TEXTURE_3D_EXT', 'GL_PROXY_TEXTURE_4D_SGIS',
    'GL_PROXY_TEXTURE_COLOR_TABLE_SGI', 'GL_PROXY_TEXTURE_CUBE_MAP',
    'GL_PROXY_TEXTURE_CUBE_MAP_ARB',
    'GL_PROXY_TEXTURE_CUBE_MAP_ARRAY',
    'GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB',
    'GL_PROXY_TEXTURE_CUBE_MAP_EXT', 'GL_PROXY_TEXTURE_RECTANGLE',
    'GL_PROXY_TEXTURE_RECTANGLE_ARB', 'GL_PROXY_TEXTURE_RECTANGLE_NV',
    'GL_PURGEABLE_APPLE', 'GL_PURGED_CONTEXT_RESET_NV', 'GL_Q',
    'GL_QUADRATIC_ATTENUATION', 'GL_QUADRATIC_CURVE_TO_NV',
    'GL_QUADS', 'GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION',
    'GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT',
    'GL_QUAD_ALPHA4_SGIS', 'GL_QUAD_ALPHA8_SGIS',
    'GL_QUAD_INTENSITY4_SGIS', 'GL_QUAD_INTENSITY8_SGIS',
    'GL_QUAD_LUMINANCE4_SGIS', 'GL_QUAD_LUMINANCE8_SGIS',
    'GL_QUAD_MESH_SUN', 'GL_QUAD_STRIP',
    'GL_QUAD_TEXTURE_SELECT_SGIS', 'GL_QUARTER_BIT_ATI', 'GL_QUERY',
    'GL_QUERY_ALL_EVENT_BITS_AMD', 'GL_QUERY_BUFFER',
    'GL_QUERY_BUFFER_AMD', 'GL_QUERY_BUFFER_BARRIER_BIT',
    'GL_QUERY_BUFFER_BINDING', 'GL_QUERY_BUFFER_BINDING_AMD',
    'GL_QUERY_BY_REGION_NO_WAIT',
    'GL_QUERY_BY_REGION_NO_WAIT_INVERTED',
    'GL_QUERY_BY_REGION_NO_WAIT_NV', 'GL_QUERY_BY_REGION_WAIT',
    'GL_QUERY_BY_REGION_WAIT_INVERTED', 'GL_QUERY_BY_REGION_WAIT_NV',
    'GL_QUERY_COUNTER_BITS', 'GL_QUERY_COUNTER_BITS_ARB',
    'GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD',
    'GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD',
    'GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD', 'GL_QUERY_NO_WAIT',
    'GL_QUERY_NO_WAIT_INVERTED', 'GL_QUERY_NO_WAIT_NV',
    'GL_QUERY_OBJECT_AMD', 'GL_QUERY_OBJECT_EXT',
    'GL_QUERY_RESOURCE_BUFFEROBJECT_NV',
    'GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV',
    'GL_QUERY_RESOURCE_RENDERBUFFER_NV',
    'GL_QUERY_RESOURCE_SYS_RESERVED_NV',
    'GL_QUERY_RESOURCE_TEXTURE_NV',
    'GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV', 'GL_QUERY_RESULT',
    'GL_QUERY_RESULT_ARB', 'GL_QUERY_RESULT_AVAILABLE',
    'GL_QUERY_RESULT_AVAILABLE_ARB', 'GL_QUERY_RESULT_NO_WAIT',
    'GL_QUERY_RESULT_NO_WAIT_AMD',
    'GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD', 'GL_QUERY_TARGET',
    'GL_QUERY_WAIT', 'GL_QUERY_WAIT_INVERTED', 'GL_QUERY_WAIT_NV',
    'GL_R', 'GL_R11F_G11F_B10F', 'GL_R11F_G11F_B10F_EXT', 'GL_R16',
    'GL_R16F', 'GL_R16F_EXT', 'GL_R16I', 'GL_R16UI', 'GL_R16_SNORM',
    'GL_R1UI_C3F_V3F_SUN', 'GL_R1UI_C4F_N3F_V3F_SUN',
    'GL_R1UI_C4UB_V3F_SUN', 'GL_R1UI_N3F_V3F_SUN',
    'GL_R1UI_T2F_C4F_N3F_V3F_SUN', 'GL_R1UI_T2F_N3F_V3F_SUN',
    'GL_R1UI_T2F_V3F_SUN', 'GL_R1UI_V3F_SUN', 'GL_R32F',
    'GL_R32F_EXT', 'GL_R32I', 'GL_R32UI', 'GL_R3_G3_B2', 'GL_R8',
    'GL_R8I', 'GL_R8UI', 'GL_R8_EXT', 'GL_R8_SNORM',
    'GL_RASTERIZER_DISCARD', 'GL_RASTERIZER_DISCARD_EXT',
    'GL_RASTERIZER_DISCARD_NV',
    'GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT',
    'GL_RASTER_MULTISAMPLE_EXT', 'GL_RASTER_POSITION_UNCLIPPED_IBM',
    'GL_RASTER_SAMPLES_EXT', 'GL_READ_BUFFER', 'GL_READ_FRAMEBUFFER',
    'GL_READ_FRAMEBUFFER_BINDING', 'GL_READ_FRAMEBUFFER_BINDING_EXT',
    'GL_READ_FRAMEBUFFER_EXT', 'GL_READ_ONLY', 'GL_READ_ONLY_ARB',
    'GL_READ_PIXELS', 'GL_READ_PIXELS_FORMAT', 'GL_READ_PIXELS_TYPE',
    'GL_READ_PIXEL_DATA_RANGE_LENGTH_NV',
    'GL_READ_PIXEL_DATA_RANGE_NV',
    'GL_READ_PIXEL_DATA_RANGE_POINTER_NV', 'GL_READ_WRITE',
    'GL_READ_WRITE_ARB', 'GL_RECLAIM_MEMORY_HINT_PGI', 'GL_RECT_NV',
    'GL_RED', 'GL_REDUCE', 'GL_REDUCE_EXT', 'GL_RED_BIAS',
    'GL_RED_BITS', 'GL_RED_BIT_ATI', 'GL_RED_INTEGER',
    'GL_RED_INTEGER_EXT', 'GL_RED_MAX_CLAMP_INGR',
    'GL_RED_MIN_CLAMP_INGR', 'GL_RED_NV', 'GL_RED_SCALE',
    'GL_RED_SNORM', 'GL_REFERENCED_BY_COMPUTE_SHADER',
    'GL_REFERENCED_BY_FRAGMENT_SHADER',
    'GL_REFERENCED_BY_GEOMETRY_SHADER',
    'GL_REFERENCED_BY_MESH_SHADER_NV',
    'GL_REFERENCED_BY_TASK_SHADER_NV',
    'GL_REFERENCED_BY_TESS_CONTROL_SHADER',
    'GL_REFERENCED_BY_TESS_EVALUATION_SHADER',
    'GL_REFERENCED_BY_VERTEX_SHADER',
    'GL_REFERENCE_PLANE_EQUATION_SGIX', 'GL_REFERENCE_PLANE_SGIX',
    'GL_REFLECTION_MAP', 'GL_REFLECTION_MAP_ARB',
    'GL_REFLECTION_MAP_EXT', 'GL_REFLECTION_MAP_NV',
    'GL_REGISTER_COMBINERS_NV', 'GL_REG_0_ATI', 'GL_REG_10_ATI',
    'GL_REG_11_ATI', 'GL_REG_12_ATI', 'GL_REG_13_ATI',
    'GL_REG_14_ATI', 'GL_REG_15_ATI', 'GL_REG_16_ATI',
    'GL_REG_17_ATI', 'GL_REG_18_ATI', 'GL_REG_19_ATI', 'GL_REG_1_ATI',
    'GL_REG_20_ATI', 'GL_REG_21_ATI', 'GL_REG_22_ATI',
    'GL_REG_23_ATI', 'GL_REG_24_ATI', 'GL_REG_25_ATI',
    'GL_REG_26_ATI', 'GL_REG_27_ATI', 'GL_REG_28_ATI',
    'GL_REG_29_ATI', 'GL_REG_2_ATI', 'GL_REG_30_ATI', 'GL_REG_31_ATI',
    'GL_REG_3_ATI', 'GL_REG_4_ATI', 'GL_REG_5_ATI', 'GL_REG_6_ATI',
    'GL_REG_7_ATI', 'GL_REG_8_ATI', 'GL_REG_9_ATI',
    'GL_RELATIVE_ARC_TO_NV', 'GL_RELATIVE_CONIC_CURVE_TO_NV',
    'GL_RELATIVE_CUBIC_CURVE_TO_NV',
    'GL_RELATIVE_HORIZONTAL_LINE_TO_NV',
    'GL_RELATIVE_LARGE_CCW_ARC_TO_NV',
    'GL_RELATIVE_LARGE_CW_ARC_TO_NV', 'GL_RELATIVE_LINE_TO_NV',
    'GL_RELATIVE_MOVE_TO_NV', 'GL_RELATIVE_QUADRATIC_CURVE_TO_NV',
    'GL_RELATIVE_RECT_NV', 'GL_RELATIVE_ROUNDED_RECT2_NV',
    'GL_RELATIVE_ROUNDED_RECT4_NV', 'GL_RELATIVE_ROUNDED_RECT8_NV',
    'GL_RELATIVE_ROUNDED_RECT_NV', 'GL_RELATIVE_SMALL_CCW_ARC_TO_NV',
    'GL_RELATIVE_SMALL_CW_ARC_TO_NV',
    'GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV',
    'GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV',
    'GL_RELATIVE_VERTICAL_LINE_TO_NV', 'GL_RELEASED_APPLE',
    'GL_RENDER', 'GL_RENDERBUFFER', 'GL_RENDERBUFFER_ALPHA_SIZE',
    'GL_RENDERBUFFER_ALPHA_SIZE_EXT', 'GL_RENDERBUFFER_BINDING',
    'GL_RENDERBUFFER_BINDING_EXT', 'GL_RENDERBUFFER_BLUE_SIZE',
    'GL_RENDERBUFFER_BLUE_SIZE_EXT',
    'GL_RENDERBUFFER_COLOR_SAMPLES_NV',
    'GL_RENDERBUFFER_COVERAGE_SAMPLES_NV',
    'GL_RENDERBUFFER_DEPTH_SIZE', 'GL_RENDERBUFFER_DEPTH_SIZE_EXT',
    'GL_RENDERBUFFER_EXT', 'GL_RENDERBUFFER_FREE_MEMORY_ATI',
    'GL_RENDERBUFFER_GREEN_SIZE', 'GL_RENDERBUFFER_GREEN_SIZE_EXT',
    'GL_RENDERBUFFER_HEIGHT', 'GL_RENDERBUFFER_HEIGHT_EXT',
    'GL_RENDERBUFFER_INTERNAL_FORMAT',
    'GL_RENDERBUFFER_INTERNAL_FORMAT_EXT', 'GL_RENDERBUFFER_RED_SIZE',
    'GL_RENDERBUFFER_RED_SIZE_EXT', 'GL_RENDERBUFFER_SAMPLES',
    'GL_RENDERBUFFER_SAMPLES_EXT', 'GL_RENDERBUFFER_STENCIL_SIZE',
    'GL_RENDERBUFFER_STENCIL_SIZE_EXT',
    'GL_RENDERBUFFER_STORAGE_SAMPLES_AMD', 'GL_RENDERBUFFER_WIDTH',
    'GL_RENDERBUFFER_WIDTH_EXT', 'GL_RENDERER',
    'GL_RENDER_GPU_MASK_NV', 'GL_RENDER_MODE',
    'GL_REND_screen_coordinates', 'GL_REPEAT', 'GL_REPLACE',
    'GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN',
    'GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN',
    'GL_REPLACEMENT_CODE_ARRAY_SUN',
    'GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN', 'GL_REPLACEMENT_CODE_SUN',
    'GL_REPLACE_EXT', 'GL_REPLACE_MIDDLE_SUN',
    'GL_REPLACE_OLDEST_SUN', 'GL_REPLACE_VALUE_AMD',
    'GL_REPLICATE_BORDER', 'GL_REPLICATE_BORDER_HP',
    'GL_REPRESENTATIVE_FRAGMENT_TEST_NV', 'GL_RESAMPLE_AVERAGE_OML',
    'GL_RESAMPLE_DECIMATE_OML', 'GL_RESAMPLE_DECIMATE_SGIX',
    'GL_RESAMPLE_REPLICATE_OML', 'GL_RESAMPLE_REPLICATE_SGIX',
    'GL_RESAMPLE_ZERO_FILL_OML', 'GL_RESAMPLE_ZERO_FILL_SGIX',
    'GL_RESCALE_NORMAL', 'GL_RESCALE_NORMAL_EXT',
    'GL_RESET_NOTIFICATION_STRATEGY',
    'GL_RESET_NOTIFICATION_STRATEGY_ARB', 'GL_RESTART_PATH_NV',
    'GL_RESTART_SUN', 'GL_RETAINED_APPLE', 'GL_RETURN', 'GL_RG',
    'GL_RG16', 'GL_RG16F', 'GL_RG16F_EXT', 'GL_RG16I', 'GL_RG16UI',
    'GL_RG16_SNORM', 'GL_RG32F', 'GL_RG32F_EXT', 'GL_RG32I',
    'GL_RG32UI', 'GL_RG8', 'GL_RG8I', 'GL_RG8UI', 'GL_RG8_EXT',
    'GL_RG8_SNORM', 'GL_RGB', 'GL_RGB10', 'GL_RGB10_A2',
    'GL_RGB10_A2UI', 'GL_RGB10_A2_EXT', 'GL_RGB10_EXT', 'GL_RGB12',
    'GL_RGB12_EXT', 'GL_RGB16', 'GL_RGB16F', 'GL_RGB16F_ARB',
    'GL_RGB16F_EXT', 'GL_RGB16I', 'GL_RGB16I_EXT', 'GL_RGB16UI',
    'GL_RGB16UI_EXT', 'GL_RGB16_EXT', 'GL_RGB16_SNORM', 'GL_RGB2_EXT',
    'GL_RGB32F', 'GL_RGB32F_ARB', 'GL_RGB32F_EXT', 'GL_RGB32I',
    'GL_RGB32I_EXT', 'GL_RGB32UI', 'GL_RGB32UI_EXT', 'GL_RGB4',
    'GL_RGB4_EXT', 'GL_RGB4_S3TC', 'GL_RGB5', 'GL_RGB565',
    'GL_RGB5_A1', 'GL_RGB5_A1_EXT', 'GL_RGB5_EXT', 'GL_RGB8',
    'GL_RGB8I', 'GL_RGB8I_EXT', 'GL_RGB8UI', 'GL_RGB8UI_EXT',
    'GL_RGB8_EXT', 'GL_RGB8_SNORM', 'GL_RGB9_E5', 'GL_RGB9_E5_EXT',
    'GL_RGBA', 'GL_RGBA12', 'GL_RGBA12_EXT', 'GL_RGBA16',
    'GL_RGBA16F', 'GL_RGBA16F_ARB', 'GL_RGBA16F_EXT', 'GL_RGBA16I',
    'GL_RGBA16I_EXT', 'GL_RGBA16UI', 'GL_RGBA16UI_EXT',
    'GL_RGBA16_EXT', 'GL_RGBA16_SNORM', 'GL_RGBA2', 'GL_RGBA2_EXT',
    'GL_RGBA32F', 'GL_RGBA32F_ARB', 'GL_RGBA32F_EXT', 'GL_RGBA32I',
    'GL_RGBA32I_EXT', 'GL_RGBA32UI', 'GL_RGBA32UI_EXT', 'GL_RGBA4',
    'GL_RGBA4_DXT5_S3TC', 'GL_RGBA4_EXT', 'GL_RGBA4_S3TC', 'GL_RGBA8',
    'GL_RGBA8I', 'GL_RGBA8I_EXT', 'GL_RGBA8UI', 'GL_RGBA8UI_EXT',
    'GL_RGBA8_EXT', 'GL_RGBA8_SNORM', 'GL_RGBA_DXT5_S3TC',
    'GL_RGBA_FLOAT16_APPLE', 'GL_RGBA_FLOAT16_ATI',
    'GL_RGBA_FLOAT32_APPLE', 'GL_RGBA_FLOAT32_ATI',
    'GL_RGBA_FLOAT_MODE_ARB', 'GL_RGBA_FLOAT_MODE_ATI',
    'GL_RGBA_INTEGER', 'GL_RGBA_INTEGER_EXT',
    'GL_RGBA_INTEGER_MODE_EXT', 'GL_RGBA_MODE', 'GL_RGBA_S3TC',
    'GL_RGBA_SIGNED_COMPONENTS_EXT', 'GL_RGBA_SNORM',
    'GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV', 'GL_RGB_422_APPLE',
    'GL_RGB_FLOAT16_APPLE', 'GL_RGB_FLOAT16_ATI',
    'GL_RGB_FLOAT32_APPLE', 'GL_RGB_FLOAT32_ATI', 'GL_RGB_INTEGER',
    'GL_RGB_INTEGER_EXT', 'GL_RGB_RAW_422_APPLE', 'GL_RGB_S3TC',
    'GL_RGB_SCALE', 'GL_RGB_SCALE_ARB', 'GL_RGB_SCALE_EXT',
    'GL_RGB_SNORM', 'GL_RG_INTEGER', 'GL_RG_SNORM', 'GL_RIGHT',
    'GL_ROUNDED_RECT2_NV', 'GL_ROUNDED_RECT4_NV',
    'GL_ROUNDED_RECT8_NV', 'GL_ROUNDED_RECT_NV', 'GL_ROUND_NV',
    'GL_S', 'GL_S3_s3tc', 'GL_SAMPLER', 'GL_SAMPLER_1D',
    'GL_SAMPLER_1D_ARB', 'GL_SAMPLER_1D_ARRAY',
    'GL_SAMPLER_1D_ARRAY_EXT', 'GL_SAMPLER_1D_ARRAY_SHADOW',
    'GL_SAMPLER_1D_ARRAY_SHADOW_EXT', 'GL_SAMPLER_1D_SHADOW',
    'GL_SAMPLER_1D_SHADOW_ARB', 'GL_SAMPLER_2D', 'GL_SAMPLER_2D_ARB',
    'GL_SAMPLER_2D_ARRAY', 'GL_SAMPLER_2D_ARRAY_EXT',
    'GL_SAMPLER_2D_ARRAY_SHADOW', 'GL_SAMPLER_2D_ARRAY_SHADOW_EXT',
    'GL_SAMPLER_2D_MULTISAMPLE', 'GL_SAMPLER_2D_MULTISAMPLE_ARRAY',
    'GL_SAMPLER_2D_RECT', 'GL_SAMPLER_2D_RECT_ARB',
    'GL_SAMPLER_2D_RECT_SHADOW', 'GL_SAMPLER_2D_RECT_SHADOW_ARB',
    'GL_SAMPLER_2D_SHADOW', 'GL_SAMPLER_2D_SHADOW_ARB',
    'GL_SAMPLER_3D', 'GL_SAMPLER_3D_ARB', 'GL_SAMPLER_BINDING',
    'GL_SAMPLER_BUFFER', 'GL_SAMPLER_BUFFER_AMD',
    'GL_SAMPLER_BUFFER_EXT', 'GL_SAMPLER_CUBE', 'GL_SAMPLER_CUBE_ARB',
    'GL_SAMPLER_CUBE_MAP_ARRAY', 'GL_SAMPLER_CUBE_MAP_ARRAY_ARB',
    'GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW',
    'GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB', 'GL_SAMPLER_CUBE_SHADOW',
    'GL_SAMPLER_CUBE_SHADOW_EXT', 'GL_SAMPLER_OBJECT_AMD',
    'GL_SAMPLER_RENDERBUFFER_NV', 'GL_SAMPLES', 'GL_SAMPLES_3DFX',
    'GL_SAMPLES_ARB', 'GL_SAMPLES_EXT', 'GL_SAMPLES_PASSED',
    'GL_SAMPLES_PASSED_ARB', 'GL_SAMPLES_SGIS',
    'GL_SAMPLE_ALPHA_TO_COVERAGE', 'GL_SAMPLE_ALPHA_TO_COVERAGE_ARB',
    'GL_SAMPLE_ALPHA_TO_MASK_EXT', 'GL_SAMPLE_ALPHA_TO_MASK_SGIS',
    'GL_SAMPLE_ALPHA_TO_ONE', 'GL_SAMPLE_ALPHA_TO_ONE_ARB',
    'GL_SAMPLE_ALPHA_TO_ONE_EXT', 'GL_SAMPLE_ALPHA_TO_ONE_SGIS',
    'GL_SAMPLE_BUFFERS', 'GL_SAMPLE_BUFFERS_3DFX',
    'GL_SAMPLE_BUFFERS_ARB', 'GL_SAMPLE_BUFFERS_EXT',
    'GL_SAMPLE_BUFFERS_SGIS', 'GL_SAMPLE_COVERAGE',
    'GL_SAMPLE_COVERAGE_ARB', 'GL_SAMPLE_COVERAGE_INVERT',
    'GL_SAMPLE_COVERAGE_INVERT_ARB', 'GL_SAMPLE_COVERAGE_VALUE',
    'GL_SAMPLE_COVERAGE_VALUE_ARB', 'GL_SAMPLE_LOCATION_ARB',
    'GL_SAMPLE_LOCATION_NV',
    'GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB',
    'GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV',
    'GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB',
    'GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV',
    'GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB',
    'GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV', 'GL_SAMPLE_MASK',
    'GL_SAMPLE_MASK_EXT', 'GL_SAMPLE_MASK_INVERT_EXT',
    'GL_SAMPLE_MASK_INVERT_SGIS', 'GL_SAMPLE_MASK_NV',
    'GL_SAMPLE_MASK_SGIS', 'GL_SAMPLE_MASK_VALUE',
    'GL_SAMPLE_MASK_VALUE_EXT', 'GL_SAMPLE_MASK_VALUE_NV',
    'GL_SAMPLE_MASK_VALUE_SGIS', 'GL_SAMPLE_PATTERN_EXT',
    'GL_SAMPLE_PATTERN_SGIS', 'GL_SAMPLE_POSITION',
    'GL_SAMPLE_POSITION_NV', 'GL_SAMPLE_SHADING',
    'GL_SAMPLE_SHADING_ARB', 'GL_SATURATE_BIT_ATI', 'GL_SCALAR_EXT',
    'GL_SCALEBIAS_HINT_SGIX', 'GL_SCALED_RESOLVE_FASTEST_EXT',
    'GL_SCALED_RESOLVE_NICEST_EXT', 'GL_SCALE_BY_FOUR_NV',
    'GL_SCALE_BY_ONE_HALF_NV', 'GL_SCALE_BY_TWO_NV', 'GL_SCISSOR_BIT',
    'GL_SCISSOR_BOX', 'GL_SCISSOR_BOX_EXCLUSIVE_NV',
    'GL_SCISSOR_COMMAND_NV', 'GL_SCISSOR_TEST',
    'GL_SCISSOR_TEST_EXCLUSIVE_NV', 'GL_SCREEN_COORDINATES_REND',
    'GL_SCREEN_KHR', 'GL_SCREEN_NV', 'GL_SECONDARY_COLOR_ARRAY',
    'GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV',
    'GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING',
    'GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB',
    'GL_SECONDARY_COLOR_ARRAY_EXT',
    'GL_SECONDARY_COLOR_ARRAY_LENGTH_NV',
    'GL_SECONDARY_COLOR_ARRAY_LIST_IBM',
    'GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM',
    'GL_SECONDARY_COLOR_ARRAY_POINTER',
    'GL_SECONDARY_COLOR_ARRAY_POINTER_EXT',
    'GL_SECONDARY_COLOR_ARRAY_SIZE',
    'GL_SECONDARY_COLOR_ARRAY_SIZE_EXT',
    'GL_SECONDARY_COLOR_ARRAY_STRIDE',
    'GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT',
    'GL_SECONDARY_COLOR_ARRAY_TYPE',
    'GL_SECONDARY_COLOR_ARRAY_TYPE_EXT', 'GL_SECONDARY_COLOR_NV',
    'GL_SECONDARY_INTERPOLATOR_ATI', 'GL_SELECT',
    'GL_SELECTION_BUFFER_POINTER', 'GL_SELECTION_BUFFER_SIZE',
    'GL_SEMAPHORE_TYPE_BINARY_NV', 'GL_SEMAPHORE_TYPE_NV',
    'GL_SEMAPHORE_TYPE_TIMELINE_NV', 'GL_SEPARABLE_2D',
    'GL_SEPARABLE_2D_EXT', 'GL_SEPARATE_ATTRIBS',
    'GL_SEPARATE_ATTRIBS_EXT', 'GL_SEPARATE_ATTRIBS_NV',
    'GL_SEPARATE_SPECULAR_COLOR', 'GL_SEPARATE_SPECULAR_COLOR_EXT',
    'GL_SET', 'GL_SET_AMD', 'GL_SGIS_detail_texture',
    'GL_SGIS_fog_function', 'GL_SGIS_generate_mipmap',
    'GL_SGIS_multisample', 'GL_SGIS_pixel_texture',
    'GL_SGIS_point_line_texgen', 'GL_SGIS_point_parameters',
    'GL_SGIS_sharpen_texture', 'GL_SGIS_texture4D',
    'GL_SGIS_texture_border_clamp', 'GL_SGIS_texture_color_mask',
    'GL_SGIS_texture_edge_clamp', 'GL_SGIS_texture_filter4',
    'GL_SGIS_texture_lod', 'GL_SGIS_texture_select', 'GL_SGIX_async',
    'GL_SGIX_async_histogram', 'GL_SGIX_async_pixel',
    'GL_SGIX_blend_alpha_minmax', 'GL_SGIX_calligraphic_fragment',
    'GL_SGIX_clipmap', 'GL_SGIX_convolution_accuracy',
    'GL_SGIX_depth_pass_instrument', 'GL_SGIX_depth_texture',
    'GL_SGIX_flush_raster', 'GL_SGIX_fog_offset',
    'GL_SGIX_fragment_lighting', 'GL_SGIX_framezoom',
    'GL_SGIX_igloo_interface', 'GL_SGIX_instruments',
    'GL_SGIX_interlace', 'GL_SGIX_ir_instrument1',
    'GL_SGIX_list_priority', 'GL_SGIX_pixel_texture',
    'GL_SGIX_pixel_tiles', 'GL_SGIX_polynomial_ffd',
    'GL_SGIX_reference_plane', 'GL_SGIX_resample',
    'GL_SGIX_scalebias_hint', 'GL_SGIX_shadow',
    'GL_SGIX_shadow_ambient', 'GL_SGIX_sprite', 'GL_SGIX_subsample',
    'GL_SGIX_tag_sample_buffer', 'GL_SGIX_texture_add_env',
    'GL_SGIX_texture_coordinate_clamp', 'GL_SGIX_texture_lod_bias',
    'GL_SGIX_texture_multi_buffer', 'GL_SGIX_texture_scale_bias',
    'GL_SGIX_vertex_preclip', 'GL_SGIX_ycrcb',
    'GL_SGIX_ycrcb_subsample', 'GL_SGIX_ycrcba',
    'GL_SGI_color_matrix', 'GL_SGI_color_table',
    'GL_SGI_texture_color_table', 'GL_SHADER',
    'GL_SHADER_BINARY_FORMATS', 'GL_SHADER_BINARY_FORMAT_SPIR_V',
    'GL_SHADER_BINARY_FORMAT_SPIR_V_ARB', 'GL_SHADER_COMPILER',
    'GL_SHADER_CONSISTENT_NV',
    'GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV',
    'GL_SHADER_IMAGE_ACCESS_BARRIER_BIT',
    'GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT',
    'GL_SHADER_IMAGE_ATOMIC', 'GL_SHADER_IMAGE_LOAD',
    'GL_SHADER_IMAGE_STORE', 'GL_SHADER_INCLUDE_ARB',
    'GL_SHADER_OBJECT_ARB', 'GL_SHADER_OBJECT_EXT',
    'GL_SHADER_OPERATION_NV', 'GL_SHADER_SOURCE_LENGTH',
    'GL_SHADER_STORAGE_BARRIER_BIT', 'GL_SHADER_STORAGE_BLOCK',
    'GL_SHADER_STORAGE_BUFFER', 'GL_SHADER_STORAGE_BUFFER_BINDING',
    'GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT',
    'GL_SHADER_STORAGE_BUFFER_SIZE', 'GL_SHADER_STORAGE_BUFFER_START',
    'GL_SHADER_TYPE', 'GL_SHADE_MODEL', 'GL_SHADING_LANGUAGE_VERSION',
    'GL_SHADING_LANGUAGE_VERSION_ARB',
    'GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV',
    'GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV',
    'GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV',
    'GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV',
    'GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV',
    'GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV',
    'GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV',
    'GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV',
    'GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV',
    'GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV',
    'GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV',
    'GL_SHADING_RATE_IMAGE_BINDING_NV', 'GL_SHADING_RATE_IMAGE_NV',
    'GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV',
    'GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV',
    'GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV',
    'GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV',
    'GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV',
    'GL_SHADING_RATE_NO_INVOCATIONS_NV',
    'GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV',
    'GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV',
    'GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV',
    'GL_SHADOW_AMBIENT_SGIX', 'GL_SHADOW_ATTENUATION_EXT',
    'GL_SHARED_EDGE_NV', 'GL_SHARED_TEXTURE_PALETTE_EXT',
    'GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS', 'GL_SHININESS', 'GL_SHORT',
    'GL_SIGNALED', 'GL_SIGNED_ALPHA8_NV', 'GL_SIGNED_ALPHA_NV',
    'GL_SIGNED_HILO16_NV', 'GL_SIGNED_HILO8_NV', 'GL_SIGNED_HILO_NV',
    'GL_SIGNED_IDENTITY_NV', 'GL_SIGNED_INTENSITY8_NV',
    'GL_SIGNED_INTENSITY_NV', 'GL_SIGNED_LUMINANCE8_ALPHA8_NV',
    'GL_SIGNED_LUMINANCE8_NV', 'GL_SIGNED_LUMINANCE_ALPHA_NV',
    'GL_SIGNED_LUMINANCE_NV', 'GL_SIGNED_NEGATE_NV',
    'GL_SIGNED_NORMALIZED', 'GL_SIGNED_RGB8_NV',
    'GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV', 'GL_SIGNED_RGBA8_NV',
    'GL_SIGNED_RGBA_NV', 'GL_SIGNED_RGB_NV',
    'GL_SIGNED_RGB_UNSIGNED_ALPHA_NV',
    'GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST',
    'GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE',
    'GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST',
    'GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE', 'GL_SINGLE_COLOR',
    'GL_SINGLE_COLOR_EXT', 'GL_SKIP_COMPONENTS1_NV',
    'GL_SKIP_COMPONENTS2_NV', 'GL_SKIP_COMPONENTS3_NV',
    'GL_SKIP_COMPONENTS4_NV', 'GL_SKIP_DECODE_EXT',
    'GL_SKIP_MISSING_GLYPH_NV', 'GL_SLICE_ACCUM_SUN', 'GL_SLUMINANCE',
    'GL_SLUMINANCE8', 'GL_SLUMINANCE8_ALPHA8',
    'GL_SLUMINANCE8_ALPHA8_EXT', 'GL_SLUMINANCE8_EXT',
    'GL_SLUMINANCE_ALPHA', 'GL_SLUMINANCE_ALPHA_EXT',
    'GL_SLUMINANCE_EXT', 'GL_SMALL_CCW_ARC_TO_NV',
    'GL_SMALL_CW_ARC_TO_NV', 'GL_SMOOTH',
    'GL_SMOOTH_CUBIC_CURVE_TO_NV', 'GL_SMOOTH_LINE_WIDTH_GRANULARITY',
    'GL_SMOOTH_LINE_WIDTH_RANGE', 'GL_SMOOTH_POINT_SIZE_GRANULARITY',
    'GL_SMOOTH_POINT_SIZE_RANGE', 'GL_SMOOTH_QUADRATIC_CURVE_TO_NV',
    'GL_SM_COUNT_NV', 'GL_SOFTLIGHT_KHR', 'GL_SOFTLIGHT_NV',
    'GL_SOURCE0_ALPHA', 'GL_SOURCE0_ALPHA_ARB',
    'GL_SOURCE0_ALPHA_EXT', 'GL_SOURCE0_RGB', 'GL_SOURCE0_RGB_ARB',
    'GL_SOURCE0_RGB_EXT', 'GL_SOURCE1_ALPHA', 'GL_SOURCE1_ALPHA_ARB',
    'GL_SOURCE1_ALPHA_EXT', 'GL_SOURCE1_RGB', 'GL_SOURCE1_RGB_ARB',
    'GL_SOURCE1_RGB_EXT', 'GL_SOURCE2_ALPHA', 'GL_SOURCE2_ALPHA_ARB',
    'GL_SOURCE2_ALPHA_EXT', 'GL_SOURCE2_RGB', 'GL_SOURCE2_RGB_ARB',
    'GL_SOURCE2_RGB_EXT', 'GL_SOURCE3_ALPHA_NV', 'GL_SOURCE3_RGB_NV',
    'GL_SPARE0_NV', 'GL_SPARE0_PLUS_SECONDARY_COLOR_NV',
    'GL_SPARE1_NV', 'GL_SPARSE_BUFFER_PAGE_SIZE_ARB',
    'GL_SPARSE_STORAGE_BIT_ARB',
    'GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB', 'GL_SPECULAR',
    'GL_SPHERE_MAP', 'GL_SPIR_V_BINARY', 'GL_SPIR_V_BINARY_ARB',
    'GL_SPIR_V_EXTENSIONS', 'GL_SPOT_CUTOFF', 'GL_SPOT_DIRECTION',
    'GL_SPOT_EXPONENT', 'GL_SPRITE_AXIAL_SGIX', 'GL_SPRITE_AXIS_SGIX',
    'GL_SPRITE_EYE_ALIGNED_SGIX', 'GL_SPRITE_MODE_SGIX',
    'GL_SPRITE_OBJECT_ALIGNED_SGIX', 'GL_SPRITE_SGIX',
    'GL_SPRITE_TRANSLATION_SGIX', 'GL_SQUARE_NV', 'GL_SR8_EXT',
    'GL_SRC0_ALPHA', 'GL_SRC0_RGB', 'GL_SRC1_ALPHA', 'GL_SRC1_COLOR',
    'GL_SRC1_RGB', 'GL_SRC2_ALPHA', 'GL_SRC2_RGB', 'GL_SRC_ALPHA',
    'GL_SRC_ALPHA_SATURATE', 'GL_SRC_ATOP_NV', 'GL_SRC_COLOR',
    'GL_SRC_IN_NV', 'GL_SRC_NV', 'GL_SRC_OUT_NV', 'GL_SRC_OVER_NV',
    'GL_SRG8_EXT', 'GL_SRGB', 'GL_SRGB8', 'GL_SRGB8_ALPHA8',
    'GL_SRGB8_ALPHA8_EXT', 'GL_SRGB8_EXT', 'GL_SRGB_ALPHA',
    'GL_SRGB_ALPHA_EXT', 'GL_SRGB_DECODE_ARB', 'GL_SRGB_EXT',
    'GL_SRGB_READ', 'GL_SRGB_WRITE', 'GL_STACK_OVERFLOW',
    'GL_STACK_UNDERFLOW', 'GL_STANDARD_FONT_FORMAT_NV',
    'GL_STANDARD_FONT_NAME_NV', 'GL_STATIC_ATI', 'GL_STATIC_COPY',
    'GL_STATIC_COPY_ARB', 'GL_STATIC_DRAW', 'GL_STATIC_DRAW_ARB',
    'GL_STATIC_READ', 'GL_STATIC_READ_ARB',
    'GL_STATIC_VERTEX_ARRAY_IBM', 'GL_STENCIL',
    'GL_STENCIL_ATTACHMENT', 'GL_STENCIL_ATTACHMENT_EXT',
    'GL_STENCIL_BACK_FAIL', 'GL_STENCIL_BACK_FAIL_ATI',
    'GL_STENCIL_BACK_FUNC', 'GL_STENCIL_BACK_FUNC_ATI',
    'GL_STENCIL_BACK_OP_VALUE_AMD', 'GL_STENCIL_BACK_PASS_DEPTH_FAIL',
    'GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI',
    'GL_STENCIL_BACK_PASS_DEPTH_PASS',
    'GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI', 'GL_STENCIL_BACK_REF',
    'GL_STENCIL_BACK_VALUE_MASK', 'GL_STENCIL_BACK_WRITEMASK',
    'GL_STENCIL_BITS', 'GL_STENCIL_BUFFER_BIT',
    'GL_STENCIL_CLEAR_TAG_VALUE_EXT', 'GL_STENCIL_CLEAR_VALUE',
    'GL_STENCIL_COMPONENTS', 'GL_STENCIL_FAIL', 'GL_STENCIL_FUNC',
    'GL_STENCIL_INDEX', 'GL_STENCIL_INDEX1', 'GL_STENCIL_INDEX16',
    'GL_STENCIL_INDEX16_EXT', 'GL_STENCIL_INDEX1_EXT',
    'GL_STENCIL_INDEX4', 'GL_STENCIL_INDEX4_EXT', 'GL_STENCIL_INDEX8',
    'GL_STENCIL_INDEX8_EXT', 'GL_STENCIL_OP_VALUE_AMD',
    'GL_STENCIL_PASS_DEPTH_FAIL', 'GL_STENCIL_PASS_DEPTH_PASS',
    'GL_STENCIL_REF', 'GL_STENCIL_REF_COMMAND_NV',
    'GL_STENCIL_RENDERABLE', 'GL_STENCIL_SAMPLES_NV',
    'GL_STENCIL_TAG_BITS_EXT', 'GL_STENCIL_TEST',
    'GL_STENCIL_TEST_TWO_SIDE_EXT', 'GL_STENCIL_VALUE_MASK',
    'GL_STENCIL_WRITEMASK', 'GL_STEREO', 'GL_STORAGE_CACHED_APPLE',
    'GL_STORAGE_CLIENT_APPLE', 'GL_STORAGE_PRIVATE_APPLE',
    'GL_STORAGE_SHARED_APPLE', 'GL_STREAM_COPY', 'GL_STREAM_COPY_ARB',
    'GL_STREAM_DRAW', 'GL_STREAM_DRAW_ARB',
    'GL_STREAM_RASTERIZATION_AMD', 'GL_STREAM_READ',
    'GL_STREAM_READ_ARB', 'GL_STRICT_DEPTHFUNC_HINT_PGI',
    'GL_STRICT_LIGHTING_HINT_PGI', 'GL_STRICT_SCISSOR_HINT_PGI',
    'GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR',
    'GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR',
    'GL_SUBGROUP_FEATURE_BASIC_BIT_KHR',
    'GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR',
    'GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV',
    'GL_SUBGROUP_FEATURE_QUAD_BIT_KHR',
    'GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR',
    'GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR',
    'GL_SUBGROUP_FEATURE_VOTE_BIT_KHR',
    'GL_SUBGROUP_QUAD_ALL_STAGES_KHR', 'GL_SUBGROUP_SIZE_KHR',
    'GL_SUBGROUP_SUPPORTED_FEATURES_KHR',
    'GL_SUBGROUP_SUPPORTED_STAGES_KHR', 'GL_SUBPIXEL_BITS',
    'GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV',
    'GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV',
    'GL_SUBSAMPLE_DISTANCE_AMD', 'GL_SUBTRACT', 'GL_SUBTRACT_ARB',
    'GL_SUB_ATI', 'GL_SUCCESS_NV', 'GL_SUNX_constant_data',
    'GL_SUN_convolution_border_modes', 'GL_SUN_global_alpha',
    'GL_SUN_mesh_array', 'GL_SUN_slice_accum', 'GL_SUN_triangle_list',
    'GL_SUN_vertex', 'GL_SUPERSAMPLE_SCALE_X_NV',
    'GL_SUPERSAMPLE_SCALE_Y_NV', 'GL_SUPPORTED_MULTISAMPLE_MODES_AMD',
    'GL_SURFACE_MAPPED_NV', 'GL_SURFACE_REGISTERED_NV',
    'GL_SURFACE_STATE_NV', 'GL_SWIZZLE_STQ_ATI',
    'GL_SWIZZLE_STQ_DQ_ATI', 'GL_SWIZZLE_STRQ_ATI',
    'GL_SWIZZLE_STRQ_DQ_ATI', 'GL_SWIZZLE_STR_ATI',
    'GL_SWIZZLE_STR_DR_ATI', 'GL_SYNC_CL_EVENT_ARB',
    'GL_SYNC_CL_EVENT_COMPLETE_ARB', 'GL_SYNC_CONDITION',
    'GL_SYNC_FENCE', 'GL_SYNC_FLAGS', 'GL_SYNC_FLUSH_COMMANDS_BIT',
    'GL_SYNC_GPU_COMMANDS_COMPLETE', 'GL_SYNC_STATUS',
    'GL_SYNC_X11_FENCE_EXT', 'GL_SYSTEM_FONT_NAME_NV', 'GL_T',
    'GL_T2F_C3F_V3F', 'GL_T2F_C4F_N3F_V3F', 'GL_T2F_C4UB_V3F',
    'GL_T2F_IUI_N3F_V2F_EXT', 'GL_T2F_IUI_N3F_V3F_EXT',
    'GL_T2F_IUI_V2F_EXT', 'GL_T2F_IUI_V3F_EXT', 'GL_T2F_N3F_V3F',
    'GL_T2F_V3F', 'GL_T4F_C4F_N3F_V4F', 'GL_T4F_V4F',
    'GL_TABLE_TOO_LARGE', 'GL_TABLE_TOO_LARGE_EXT',
    'GL_TANGENT_ARRAY_EXT', 'GL_TANGENT_ARRAY_POINTER_EXT',
    'GL_TANGENT_ARRAY_STRIDE_EXT', 'GL_TANGENT_ARRAY_TYPE_EXT',
    'GL_TASK_SHADER_BIT_NV', 'GL_TASK_SHADER_NV',
    'GL_TASK_SUBROUTINE_NV', 'GL_TASK_SUBROUTINE_UNIFORM_NV',
    'GL_TASK_WORK_GROUP_SIZE_NV', 'GL_TERMINATE_SEQUENCE_COMMAND_NV',
    'GL_TESSELLATION_FACTOR_AMD', 'GL_TESSELLATION_MODE_AMD',
    'GL_TESS_CONTROL_OUTPUT_VERTICES', 'GL_TESS_CONTROL_PROGRAM_NV',
    'GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV',
    'GL_TESS_CONTROL_SHADER', 'GL_TESS_CONTROL_SHADER_BIT',
    'GL_TESS_CONTROL_SHADER_PATCHES',
    'GL_TESS_CONTROL_SHADER_PATCHES_ARB',
    'GL_TESS_CONTROL_SUBROUTINE',
    'GL_TESS_CONTROL_SUBROUTINE_UNIFORM', 'GL_TESS_CONTROL_TEXTURE',
    'GL_TESS_EVALUATION_PROGRAM_NV',
    'GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV',
    'GL_TESS_EVALUATION_SHADER', 'GL_TESS_EVALUATION_SHADER_BIT',
    'GL_TESS_EVALUATION_SHADER_INVOCATIONS',
    'GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB',
    'GL_TESS_EVALUATION_SUBROUTINE',
    'GL_TESS_EVALUATION_SUBROUTINE_UNIFORM',
    'GL_TESS_EVALUATION_TEXTURE', 'GL_TESS_GEN_MODE',
    'GL_TESS_GEN_POINT_MODE', 'GL_TESS_GEN_SPACING',
    'GL_TESS_GEN_VERTEX_ORDER', 'GL_TEXCOORD1_BIT_PGI',
    'GL_TEXCOORD2_BIT_PGI', 'GL_TEXCOORD3_BIT_PGI',
    'GL_TEXCOORD4_BIT_PGI', 'GL_TEXTURE', 'GL_TEXTURE0',
    'GL_TEXTURE0_ARB', 'GL_TEXTURE1', 'GL_TEXTURE10',
    'GL_TEXTURE10_ARB', 'GL_TEXTURE11', 'GL_TEXTURE11_ARB',
    'GL_TEXTURE12', 'GL_TEXTURE12_ARB', 'GL_TEXTURE13',
    'GL_TEXTURE13_ARB', 'GL_TEXTURE14', 'GL_TEXTURE14_ARB',
    'GL_TEXTURE15', 'GL_TEXTURE15_ARB', 'GL_TEXTURE16',
    'GL_TEXTURE16_ARB', 'GL_TEXTURE17', 'GL_TEXTURE17_ARB',
    'GL_TEXTURE18', 'GL_TEXTURE18_ARB', 'GL_TEXTURE19',
    'GL_TEXTURE19_ARB', 'GL_TEXTURE1_ARB', 'GL_TEXTURE2',
    'GL_TEXTURE20', 'GL_TEXTURE20_ARB', 'GL_TEXTURE21',
    'GL_TEXTURE21_ARB', 'GL_TEXTURE22', 'GL_TEXTURE22_ARB',
    'GL_TEXTURE23', 'GL_TEXTURE23_ARB', 'GL_TEXTURE24',
    'GL_TEXTURE24_ARB', 'GL_TEXTURE25', 'GL_TEXTURE25_ARB',
    'GL_TEXTURE26', 'GL_TEXTURE26_ARB', 'GL_TEXTURE27',
    'GL_TEXTURE27_ARB', 'GL_TEXTURE28', 'GL_TEXTURE28_ARB',
    'GL_TEXTURE29', 'GL_TEXTURE29_ARB', 'GL_TEXTURE2_ARB',
    'GL_TEXTURE3', 'GL_TEXTURE30', 'GL_TEXTURE30_ARB', 'GL_TEXTURE31',
    'GL_TEXTURE31_ARB', 'GL_TEXTURE3_ARB', 'GL_TEXTURE4',
    'GL_TEXTURE4_ARB', 'GL_TEXTURE5', 'GL_TEXTURE5_ARB',
    'GL_TEXTURE6', 'GL_TEXTURE6_ARB', 'GL_TEXTURE7',
    'GL_TEXTURE7_ARB', 'GL_TEXTURE8', 'GL_TEXTURE8_ARB',
    'GL_TEXTURE9', 'GL_TEXTURE9_ARB', 'GL_TEXTURE_1D',
    'GL_TEXTURE_1D_ARRAY', 'GL_TEXTURE_1D_ARRAY_EXT',
    'GL_TEXTURE_1D_BINDING_EXT', 'GL_TEXTURE_1D_STACK_BINDING_MESAX',
    'GL_TEXTURE_1D_STACK_MESAX', 'GL_TEXTURE_2D',
    'GL_TEXTURE_2D_ARRAY', 'GL_TEXTURE_2D_ARRAY_EXT',
    'GL_TEXTURE_2D_BINDING_EXT', 'GL_TEXTURE_2D_MULTISAMPLE',
    'GL_TEXTURE_2D_MULTISAMPLE_ARRAY',
    'GL_TEXTURE_2D_STACK_BINDING_MESAX', 'GL_TEXTURE_2D_STACK_MESAX',
    'GL_TEXTURE_3D', 'GL_TEXTURE_3D_BINDING_EXT', 'GL_TEXTURE_3D_EXT',
    'GL_TEXTURE_4DSIZE_SGIS', 'GL_TEXTURE_4D_BINDING_SGIS',
    'GL_TEXTURE_4D_SGIS', 'GL_TEXTURE_ALPHA_SIZE',
    'GL_TEXTURE_ALPHA_SIZE_EXT', 'GL_TEXTURE_ALPHA_TYPE',
    'GL_TEXTURE_ALPHA_TYPE_ARB', 'GL_TEXTURE_APPLICATION_MODE_EXT',
    'GL_TEXTURE_BASE_LEVEL', 'GL_TEXTURE_BASE_LEVEL_SGIS',
    'GL_TEXTURE_BINDING_1D', 'GL_TEXTURE_BINDING_1D_ARRAY',
    'GL_TEXTURE_BINDING_1D_ARRAY_EXT', 'GL_TEXTURE_BINDING_2D',
    'GL_TEXTURE_BINDING_2D_ARRAY', 'GL_TEXTURE_BINDING_2D_ARRAY_EXT',
    'GL_TEXTURE_BINDING_2D_MULTISAMPLE',
    'GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY',
    'GL_TEXTURE_BINDING_3D', 'GL_TEXTURE_BINDING_BUFFER',
    'GL_TEXTURE_BINDING_BUFFER_ARB', 'GL_TEXTURE_BINDING_BUFFER_EXT',
    'GL_TEXTURE_BINDING_CUBE_MAP', 'GL_TEXTURE_BINDING_CUBE_MAP_ARB',
    'GL_TEXTURE_BINDING_CUBE_MAP_ARRAY',
    'GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB',
    'GL_TEXTURE_BINDING_CUBE_MAP_EXT', 'GL_TEXTURE_BINDING_RECTANGLE',
    'GL_TEXTURE_BINDING_RECTANGLE_ARB',
    'GL_TEXTURE_BINDING_RECTANGLE_NV',
    'GL_TEXTURE_BINDING_RENDERBUFFER_NV', 'GL_TEXTURE_BIT',
    'GL_TEXTURE_BLUE_SIZE', 'GL_TEXTURE_BLUE_SIZE_EXT',
    'GL_TEXTURE_BLUE_TYPE', 'GL_TEXTURE_BLUE_TYPE_ARB',
    'GL_TEXTURE_BORDER', 'GL_TEXTURE_BORDER_COLOR',
    'GL_TEXTURE_BORDER_VALUES_NV', 'GL_TEXTURE_BUFFER',
    'GL_TEXTURE_BUFFER_ARB', 'GL_TEXTURE_BUFFER_BINDING',
    'GL_TEXTURE_BUFFER_DATA_STORE_BINDING',
    'GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB',
    'GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT',
    'GL_TEXTURE_BUFFER_EXT', 'GL_TEXTURE_BUFFER_FORMAT_ARB',
    'GL_TEXTURE_BUFFER_FORMAT_EXT', 'GL_TEXTURE_BUFFER_OFFSET',
    'GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT', 'GL_TEXTURE_BUFFER_SIZE',
    'GL_TEXTURE_CLIPMAP_CENTER_SGIX', 'GL_TEXTURE_CLIPMAP_DEPTH_SGIX',
    'GL_TEXTURE_CLIPMAP_FRAME_SGIX',
    'GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX',
    'GL_TEXTURE_CLIPMAP_OFFSET_SGIX',
    'GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX',
    'GL_TEXTURE_COLOR_SAMPLES_NV', 'GL_TEXTURE_COLOR_TABLE_SGI',
    'GL_TEXTURE_COLOR_WRITEMASK_SGIS',
    'GL_TEXTURE_COMPARE_FAIL_VALUE_ARB', 'GL_TEXTURE_COMPARE_FUNC',
    'GL_TEXTURE_COMPARE_FUNC_ARB', 'GL_TEXTURE_COMPARE_MODE',
    'GL_TEXTURE_COMPARE_MODE_ARB', 'GL_TEXTURE_COMPARE_OPERATOR_SGIX',
    'GL_TEXTURE_COMPARE_SGIX', 'GL_TEXTURE_COMPONENTS',
    'GL_TEXTURE_COMPRESSED', 'GL_TEXTURE_COMPRESSED_ARB',
    'GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT',
    'GL_TEXTURE_COMPRESSED_BLOCK_SIZE',
    'GL_TEXTURE_COMPRESSED_BLOCK_WIDTH',
    'GL_TEXTURE_COMPRESSED_IMAGE_SIZE',
    'GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB',
    'GL_TEXTURE_COMPRESSION_HINT', 'GL_TEXTURE_COMPRESSION_HINT_ARB',
    'GL_TEXTURE_CONSTANT_DATA_SUNX', 'GL_TEXTURE_COORD_ARRAY',
    'GL_TEXTURE_COORD_ARRAY_ADDRESS_NV',
    'GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING',
    'GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB',
    'GL_TEXTURE_COORD_ARRAY_COUNT_EXT', 'GL_TEXTURE_COORD_ARRAY_EXT',
    'GL_TEXTURE_COORD_ARRAY_LENGTH_NV',
    'GL_TEXTURE_COORD_ARRAY_LIST_IBM',
    'GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM',
    'GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL',
    'GL_TEXTURE_COORD_ARRAY_POINTER',
    'GL_TEXTURE_COORD_ARRAY_POINTER_EXT',
    'GL_TEXTURE_COORD_ARRAY_SIZE', 'GL_TEXTURE_COORD_ARRAY_SIZE_EXT',
    'GL_TEXTURE_COORD_ARRAY_STRIDE',
    'GL_TEXTURE_COORD_ARRAY_STRIDE_EXT',
    'GL_TEXTURE_COORD_ARRAY_TYPE', 'GL_TEXTURE_COORD_ARRAY_TYPE_EXT',
    'GL_TEXTURE_COORD_NV', 'GL_TEXTURE_COVERAGE_SAMPLES_NV',
    'GL_TEXTURE_CUBE_MAP', 'GL_TEXTURE_CUBE_MAP_ARB',
    'GL_TEXTURE_CUBE_MAP_ARRAY', 'GL_TEXTURE_CUBE_MAP_ARRAY_ARB',
    'GL_TEXTURE_CUBE_MAP_EXT', 'GL_TEXTURE_CUBE_MAP_NEGATIVE_X',
    'GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB',
    'GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT',
    'GL_TEXTURE_CUBE_MAP_NEGATIVE_Y',
    'GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB',
    'GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT',
    'GL_TEXTURE_CUBE_MAP_NEGATIVE_Z',
    'GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB',
    'GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT',
    'GL_TEXTURE_CUBE_MAP_POSITIVE_X',
    'GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB',
    'GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT',
    'GL_TEXTURE_CUBE_MAP_POSITIVE_Y',
    'GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB',
    'GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT',
    'GL_TEXTURE_CUBE_MAP_POSITIVE_Z',
    'GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB',
    'GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT',
    'GL_TEXTURE_CUBE_MAP_SEAMLESS', 'GL_TEXTURE_DEFORMATION_BIT_SGIX',
    'GL_TEXTURE_DEFORMATION_SGIX', 'GL_TEXTURE_DEPTH',
    'GL_TEXTURE_DEPTH_EXT', 'GL_TEXTURE_DEPTH_SIZE',
    'GL_TEXTURE_DEPTH_SIZE_ARB', 'GL_TEXTURE_DEPTH_TYPE',
    'GL_TEXTURE_DEPTH_TYPE_ARB', 'GL_TEXTURE_DS_SIZE_NV',
    'GL_TEXTURE_DT_SIZE_NV', 'GL_TEXTURE_ENV',
    'GL_TEXTURE_ENV_BIAS_SGIX', 'GL_TEXTURE_ENV_COLOR',
    'GL_TEXTURE_ENV_MODE', 'GL_TEXTURE_FETCH_BARRIER_BIT',
    'GL_TEXTURE_FETCH_BARRIER_BIT_EXT',
    'GL_TEXTURE_FILTER4_SIZE_SGIS', 'GL_TEXTURE_FILTER_CONTROL',
    'GL_TEXTURE_FILTER_CONTROL_EXT',
    'GL_TEXTURE_FIXED_SAMPLE_LOCATIONS',
    'GL_TEXTURE_FLOAT_COMPONENTS_NV', 'GL_TEXTURE_FREE_MEMORY_ATI',
    'GL_TEXTURE_GATHER', 'GL_TEXTURE_GATHER_SHADOW',
    'GL_TEXTURE_GEN_MODE', 'GL_TEXTURE_GEN_Q', 'GL_TEXTURE_GEN_R',
    'GL_TEXTURE_GEN_S', 'GL_TEXTURE_GEN_T',
    'GL_TEXTURE_GEQUAL_R_SGIX', 'GL_TEXTURE_GREEN_SIZE',
    'GL_TEXTURE_GREEN_SIZE_EXT', 'GL_TEXTURE_GREEN_TYPE',
    'GL_TEXTURE_GREEN_TYPE_ARB', 'GL_TEXTURE_HEIGHT',
    'GL_TEXTURE_HI_SIZE_NV', 'GL_TEXTURE_IMAGE_FORMAT',
    'GL_TEXTURE_IMAGE_TYPE', 'GL_TEXTURE_IMMUTABLE_FORMAT',
    'GL_TEXTURE_IMMUTABLE_FORMAT_EXT', 'GL_TEXTURE_IMMUTABLE_LEVELS',
    'GL_TEXTURE_INDEX_SIZE_EXT', 'GL_TEXTURE_INTENSITY_SIZE',
    'GL_TEXTURE_INTENSITY_SIZE_EXT', 'GL_TEXTURE_INTENSITY_TYPE',
    'GL_TEXTURE_INTENSITY_TYPE_ARB', 'GL_TEXTURE_INTERNAL_FORMAT',
    'GL_TEXTURE_LEQUAL_R_SGIX', 'GL_TEXTURE_LIGHTING_MODE_HP',
    'GL_TEXTURE_LIGHT_EXT', 'GL_TEXTURE_LOD_BIAS',
    'GL_TEXTURE_LOD_BIAS_EXT', 'GL_TEXTURE_LOD_BIAS_R_SGIX',
    'GL_TEXTURE_LOD_BIAS_S_SGIX', 'GL_TEXTURE_LOD_BIAS_T_SGIX',
    'GL_TEXTURE_LO_SIZE_NV', 'GL_TEXTURE_LUMINANCE_SIZE',
    'GL_TEXTURE_LUMINANCE_SIZE_EXT', 'GL_TEXTURE_LUMINANCE_TYPE',
    'GL_TEXTURE_LUMINANCE_TYPE_ARB', 'GL_TEXTURE_MAG_FILTER',
    'GL_TEXTURE_MAG_SIZE_NV', 'GL_TEXTURE_MATERIAL_FACE_EXT',
    'GL_TEXTURE_MATERIAL_PARAMETER_EXT', 'GL_TEXTURE_MATRIX',
    'GL_TEXTURE_MAX_ANISOTROPY', 'GL_TEXTURE_MAX_ANISOTROPY_EXT',
    'GL_TEXTURE_MAX_CLAMP_R_SGIX', 'GL_TEXTURE_MAX_CLAMP_S_SGIX',
    'GL_TEXTURE_MAX_CLAMP_T_SGIX', 'GL_TEXTURE_MAX_LEVEL',
    'GL_TEXTURE_MAX_LEVEL_SGIS', 'GL_TEXTURE_MAX_LOD',
    'GL_TEXTURE_MAX_LOD_SGIS', 'GL_TEXTURE_MEMORY_LAYOUT_INTEL',
    'GL_TEXTURE_MIN_FILTER', 'GL_TEXTURE_MIN_LOD',
    'GL_TEXTURE_MIN_LOD_SGIS', 'GL_TEXTURE_MULTI_BUFFER_HINT_SGIX',
    'GL_TEXTURE_NORMAL_EXT', 'GL_TEXTURE_POST_SPECULAR_HP',
    'GL_TEXTURE_PRE_SPECULAR_HP', 'GL_TEXTURE_PRIORITY',
    'GL_TEXTURE_PRIORITY_EXT', 'GL_TEXTURE_RANGE_LENGTH_APPLE',
    'GL_TEXTURE_RANGE_POINTER_APPLE', 'GL_TEXTURE_RECTANGLE',
    'GL_TEXTURE_RECTANGLE_ARB', 'GL_TEXTURE_RECTANGLE_NV',
    'GL_TEXTURE_REDUCTION_MODE_ARB', 'GL_TEXTURE_REDUCTION_MODE_EXT',
    'GL_TEXTURE_RED_SIZE', 'GL_TEXTURE_RED_SIZE_EXT',
    'GL_TEXTURE_RED_TYPE', 'GL_TEXTURE_RED_TYPE_ARB',
    'GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV',
    'GL_TEXTURE_RENDERBUFFER_NV', 'GL_TEXTURE_RESIDENT',
    'GL_TEXTURE_RESIDENT_EXT', 'GL_TEXTURE_SAMPLES',
    'GL_TEXTURE_SHADER_NV', 'GL_TEXTURE_SHADOW',
    'GL_TEXTURE_SHARED_SIZE', 'GL_TEXTURE_SHARED_SIZE_EXT',
    'GL_TEXTURE_SPARSE_ARB', 'GL_TEXTURE_SRGB_DECODE_EXT',
    'GL_TEXTURE_STACK_DEPTH', 'GL_TEXTURE_STENCIL_SIZE',
    'GL_TEXTURE_STENCIL_SIZE_EXT', 'GL_TEXTURE_STORAGE_HINT_APPLE',
    'GL_TEXTURE_STORAGE_SPARSE_BIT_AMD', 'GL_TEXTURE_SWIZZLE_A',
    'GL_TEXTURE_SWIZZLE_A_EXT', 'GL_TEXTURE_SWIZZLE_B',
    'GL_TEXTURE_SWIZZLE_B_EXT', 'GL_TEXTURE_SWIZZLE_G',
    'GL_TEXTURE_SWIZZLE_G_EXT', 'GL_TEXTURE_SWIZZLE_R',
    'GL_TEXTURE_SWIZZLE_RGBA', 'GL_TEXTURE_SWIZZLE_RGBA_EXT',
    'GL_TEXTURE_SWIZZLE_R_EXT', 'GL_TEXTURE_TARGET',
    'GL_TEXTURE_TILING_EXT', 'GL_TEXTURE_TOO_LARGE_EXT',
    'GL_TEXTURE_UNSIGNED_REMAP_MODE_NV',
    'GL_TEXTURE_UPDATE_BARRIER_BIT',
    'GL_TEXTURE_UPDATE_BARRIER_BIT_EXT', 'GL_TEXTURE_VIEW',
    'GL_TEXTURE_VIEW_MIN_LAYER', 'GL_TEXTURE_VIEW_MIN_LEVEL',
    'GL_TEXTURE_VIEW_NUM_LAYERS', 'GL_TEXTURE_VIEW_NUM_LEVELS',
    'GL_TEXTURE_WIDTH', 'GL_TEXTURE_WRAP_Q_SGIS', 'GL_TEXTURE_WRAP_R',
    'GL_TEXTURE_WRAP_R_EXT', 'GL_TEXTURE_WRAP_S', 'GL_TEXTURE_WRAP_T',
    'GL_TEXT_FRAGMENT_SHADER_ATI', 'GL_TILE_RASTER_ORDER_FIXED_MESA',
    'GL_TILE_RASTER_ORDER_INCREASING_X_MESA',
    'GL_TILE_RASTER_ORDER_INCREASING_Y_MESA', 'GL_TILING_TYPES_EXT',
    'GL_TIMELINE_SEMAPHORE_VALUE_NV', 'GL_TIMEOUT_EXPIRED',
    'GL_TIMEOUT_IGNORED', 'GL_TIMESTAMP', 'GL_TIME_ELAPSED',
    'GL_TIME_ELAPSED_EXT', 'GL_TOP_LEVEL_ARRAY_SIZE',
    'GL_TOP_LEVEL_ARRAY_STRIDE', 'GL_TRACK_MATRIX_NV',
    'GL_TRACK_MATRIX_TRANSFORM_NV', 'GL_TRANSFORM_BIT',
    'GL_TRANSFORM_FEEDBACK', 'GL_TRANSFORM_FEEDBACK_ACTIVE',
    'GL_TRANSFORM_FEEDBACK_ATTRIBS_NV',
    'GL_TRANSFORM_FEEDBACK_BARRIER_BIT',
    'GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT',
    'GL_TRANSFORM_FEEDBACK_BINDING',
    'GL_TRANSFORM_FEEDBACK_BINDING_NV',
    'GL_TRANSFORM_FEEDBACK_BUFFER',
    'GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE',
    'GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV',
    'GL_TRANSFORM_FEEDBACK_BUFFER_BINDING',
    'GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT',
    'GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV',
    'GL_TRANSFORM_FEEDBACK_BUFFER_EXT',
    'GL_TRANSFORM_FEEDBACK_BUFFER_INDEX',
    'GL_TRANSFORM_FEEDBACK_BUFFER_MODE',
    'GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT',
    'GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV',
    'GL_TRANSFORM_FEEDBACK_BUFFER_NV',
    'GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED',
    'GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV',
    'GL_TRANSFORM_FEEDBACK_BUFFER_SIZE',
    'GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT',
    'GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV',
    'GL_TRANSFORM_FEEDBACK_BUFFER_START',
    'GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT',
    'GL_TRANSFORM_FEEDBACK_BUFFER_START_NV',
    'GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE', 'GL_TRANSFORM_FEEDBACK_NV',
    'GL_TRANSFORM_FEEDBACK_OVERFLOW',
    'GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB',
    'GL_TRANSFORM_FEEDBACK_PAUSED',
    'GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN',
    'GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT',
    'GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV',
    'GL_TRANSFORM_FEEDBACK_RECORD_NV',
    'GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW',
    'GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB',
    'GL_TRANSFORM_FEEDBACK_VARYING', 'GL_TRANSFORM_FEEDBACK_VARYINGS',
    'GL_TRANSFORM_FEEDBACK_VARYINGS_EXT',
    'GL_TRANSFORM_FEEDBACK_VARYINGS_NV',
    'GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH',
    'GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT',
    'GL_TRANSFORM_HINT_APPLE', 'GL_TRANSLATE_2D_NV',
    'GL_TRANSLATE_3D_NV', 'GL_TRANSLATE_X_NV', 'GL_TRANSLATE_Y_NV',
    'GL_TRANSPOSE_AFFINE_2D_NV', 'GL_TRANSPOSE_AFFINE_3D_NV',
    'GL_TRANSPOSE_COLOR_MATRIX', 'GL_TRANSPOSE_COLOR_MATRIX_ARB',
    'GL_TRANSPOSE_CURRENT_MATRIX_ARB',
    'GL_TRANSPOSE_MODELVIEW_MATRIX',
    'GL_TRANSPOSE_MODELVIEW_MATRIX_ARB', 'GL_TRANSPOSE_NV',
    'GL_TRANSPOSE_PROGRAM_MATRIX_EXT',
    'GL_TRANSPOSE_PROJECTION_MATRIX',
    'GL_TRANSPOSE_PROJECTION_MATRIX_ARB',
    'GL_TRANSPOSE_TEXTURE_MATRIX', 'GL_TRANSPOSE_TEXTURE_MATRIX_ARB',
    'GL_TRIANGLES', 'GL_TRIANGLES_ADJACENCY',
    'GL_TRIANGLES_ADJACENCY_ARB', 'GL_TRIANGLES_ADJACENCY_EXT',
    'GL_TRIANGLE_FAN', 'GL_TRIANGLE_LIST_SUN', 'GL_TRIANGLE_MESH_SUN',
    'GL_TRIANGLE_STRIP', 'GL_TRIANGLE_STRIP_ADJACENCY',
    'GL_TRIANGLE_STRIP_ADJACENCY_ARB',
    'GL_TRIANGLE_STRIP_ADJACENCY_EXT', 'GL_TRIANGULAR_NV', 'GL_TRUE',
    'GL_TYPE', 'GL_UNCORRELATED_NV', 'GL_UNDEFINED_APPLE',
    'GL_UNDEFINED_VERTEX', 'GL_UNIFORM',
    'GL_UNIFORM_ADDRESS_COMMAND_NV', 'GL_UNIFORM_ARRAY_STRIDE',
    'GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX',
    'GL_UNIFORM_BARRIER_BIT', 'GL_UNIFORM_BARRIER_BIT_EXT',
    'GL_UNIFORM_BLOCK', 'GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS',
    'GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES',
    'GL_UNIFORM_BLOCK_BINDING', 'GL_UNIFORM_BLOCK_DATA_SIZE',
    'GL_UNIFORM_BLOCK_INDEX', 'GL_UNIFORM_BLOCK_NAME_LENGTH',
    'GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER',
    'GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER',
    'GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER',
    'GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV',
    'GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV',
    'GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER',
    'GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER',
    'GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER',
    'GL_UNIFORM_BUFFER', 'GL_UNIFORM_BUFFER_ADDRESS_NV',
    'GL_UNIFORM_BUFFER_BINDING', 'GL_UNIFORM_BUFFER_BINDING_EXT',
    'GL_UNIFORM_BUFFER_EXT', 'GL_UNIFORM_BUFFER_LENGTH_NV',
    'GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT', 'GL_UNIFORM_BUFFER_SIZE',
    'GL_UNIFORM_BUFFER_START', 'GL_UNIFORM_BUFFER_UNIFIED_NV',
    'GL_UNIFORM_IS_ROW_MAJOR', 'GL_UNIFORM_MATRIX_STRIDE',
    'GL_UNIFORM_NAME_LENGTH', 'GL_UNIFORM_OFFSET', 'GL_UNIFORM_SIZE',
    'GL_UNIFORM_TYPE', 'GL_UNKNOWN_CONTEXT_RESET',
    'GL_UNKNOWN_CONTEXT_RESET_ARB', 'GL_UNPACK_ALIGNMENT',
    'GL_UNPACK_CLIENT_STORAGE_APPLE', 'GL_UNPACK_CMYK_HINT_EXT',
    'GL_UNPACK_COMPRESSED_BLOCK_DEPTH',
    'GL_UNPACK_COMPRESSED_BLOCK_HEIGHT',
    'GL_UNPACK_COMPRESSED_BLOCK_SIZE',
    'GL_UNPACK_COMPRESSED_BLOCK_WIDTH',
    'GL_UNPACK_CONSTANT_DATA_SUNX', 'GL_UNPACK_IMAGE_DEPTH_SGIS',
    'GL_UNPACK_IMAGE_HEIGHT', 'GL_UNPACK_IMAGE_HEIGHT_EXT',
    'GL_UNPACK_LSB_FIRST', 'GL_UNPACK_RESAMPLE_OML',
    'GL_UNPACK_RESAMPLE_SGIX', 'GL_UNPACK_ROW_BYTES_APPLE',
    'GL_UNPACK_ROW_LENGTH', 'GL_UNPACK_SKIP_IMAGES',
    'GL_UNPACK_SKIP_IMAGES_EXT', 'GL_UNPACK_SKIP_PIXELS',
    'GL_UNPACK_SKIP_ROWS', 'GL_UNPACK_SKIP_VOLUMES_SGIS',
    'GL_UNPACK_SUBSAMPLE_RATE_SGIX', 'GL_UNPACK_SWAP_BYTES',
    'GL_UNSIGNALED', 'GL_UNSIGNED_BYTE', 'GL_UNSIGNED_BYTE_2_3_3_REV',
    'GL_UNSIGNED_BYTE_3_3_2', 'GL_UNSIGNED_BYTE_3_3_2_EXT',
    'GL_UNSIGNED_IDENTITY_NV', 'GL_UNSIGNED_INT',
    'GL_UNSIGNED_INT16_NV', 'GL_UNSIGNED_INT16_VEC2_NV',
    'GL_UNSIGNED_INT16_VEC3_NV', 'GL_UNSIGNED_INT16_VEC4_NV',
    'GL_UNSIGNED_INT64_AMD', 'GL_UNSIGNED_INT64_ARB',
    'GL_UNSIGNED_INT64_NV', 'GL_UNSIGNED_INT64_VEC2_ARB',
    'GL_UNSIGNED_INT64_VEC2_NV', 'GL_UNSIGNED_INT64_VEC3_ARB',
    'GL_UNSIGNED_INT64_VEC3_NV', 'GL_UNSIGNED_INT64_VEC4_ARB',
    'GL_UNSIGNED_INT64_VEC4_NV', 'GL_UNSIGNED_INT8_NV',
    'GL_UNSIGNED_INT8_VEC2_NV', 'GL_UNSIGNED_INT8_VEC3_NV',
    'GL_UNSIGNED_INT8_VEC4_NV', 'GL_UNSIGNED_INT_10F_11F_11F_REV',
    'GL_UNSIGNED_INT_10F_11F_11F_REV_EXT',
    'GL_UNSIGNED_INT_10_10_10_2', 'GL_UNSIGNED_INT_10_10_10_2_EXT',
    'GL_UNSIGNED_INT_24_8', 'GL_UNSIGNED_INT_24_8_EXT',
    'GL_UNSIGNED_INT_24_8_NV', 'GL_UNSIGNED_INT_2_10_10_10_REV',
    'GL_UNSIGNED_INT_5_9_9_9_REV', 'GL_UNSIGNED_INT_5_9_9_9_REV_EXT',
    'GL_UNSIGNED_INT_8_8_8_8', 'GL_UNSIGNED_INT_8_8_8_8_EXT',
    'GL_UNSIGNED_INT_8_8_8_8_REV', 'GL_UNSIGNED_INT_8_8_S8_S8_REV_NV',
    'GL_UNSIGNED_INT_ATOMIC_COUNTER', 'GL_UNSIGNED_INT_IMAGE_1D',
    'GL_UNSIGNED_INT_IMAGE_1D_ARRAY',
    'GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT',
    'GL_UNSIGNED_INT_IMAGE_1D_EXT', 'GL_UNSIGNED_INT_IMAGE_2D',
    'GL_UNSIGNED_INT_IMAGE_2D_ARRAY',
    'GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT',
    'GL_UNSIGNED_INT_IMAGE_2D_EXT',
    'GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE',
    'GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY',
    'GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT',
    'GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT',
    'GL_UNSIGNED_INT_IMAGE_2D_RECT',
    'GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT', 'GL_UNSIGNED_INT_IMAGE_3D',
    'GL_UNSIGNED_INT_IMAGE_3D_EXT', 'GL_UNSIGNED_INT_IMAGE_BUFFER',
    'GL_UNSIGNED_INT_IMAGE_BUFFER_EXT', 'GL_UNSIGNED_INT_IMAGE_CUBE',
    'GL_UNSIGNED_INT_IMAGE_CUBE_EXT',
    'GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY',
    'GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT',
    'GL_UNSIGNED_INT_S8_S8_8_8_NV', 'GL_UNSIGNED_INT_SAMPLER_1D',
    'GL_UNSIGNED_INT_SAMPLER_1D_ARRAY',
    'GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT',
    'GL_UNSIGNED_INT_SAMPLER_1D_EXT', 'GL_UNSIGNED_INT_SAMPLER_2D',
    'GL_UNSIGNED_INT_SAMPLER_2D_ARRAY',
    'GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT',
    'GL_UNSIGNED_INT_SAMPLER_2D_EXT',
    'GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE',
    'GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY',
    'GL_UNSIGNED_INT_SAMPLER_2D_RECT',
    'GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT',
    'GL_UNSIGNED_INT_SAMPLER_3D', 'GL_UNSIGNED_INT_SAMPLER_3D_EXT',
    'GL_UNSIGNED_INT_SAMPLER_BUFFER',
    'GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD',
    'GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT',
    'GL_UNSIGNED_INT_SAMPLER_CUBE',
    'GL_UNSIGNED_INT_SAMPLER_CUBE_EXT',
    'GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY',
    'GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB',
    'GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV', 'GL_UNSIGNED_INT_VEC2',
    'GL_UNSIGNED_INT_VEC2_EXT', 'GL_UNSIGNED_INT_VEC3',
    'GL_UNSIGNED_INT_VEC3_EXT', 'GL_UNSIGNED_INT_VEC4',
    'GL_UNSIGNED_INT_VEC4_EXT', 'GL_UNSIGNED_INVERT_NV',
    'GL_UNSIGNED_NORMALIZED', 'GL_UNSIGNED_NORMALIZED_ARB',
    'GL_UNSIGNED_SHORT', 'GL_UNSIGNED_SHORT_1_5_5_5_REV',
    'GL_UNSIGNED_SHORT_4_4_4_4', 'GL_UNSIGNED_SHORT_4_4_4_4_EXT',
    'GL_UNSIGNED_SHORT_4_4_4_4_REV', 'GL_UNSIGNED_SHORT_5_5_5_1',
    'GL_UNSIGNED_SHORT_5_5_5_1_EXT', 'GL_UNSIGNED_SHORT_5_6_5',
    'GL_UNSIGNED_SHORT_5_6_5_REV', 'GL_UNSIGNED_SHORT_8_8_APPLE',
    'GL_UNSIGNED_SHORT_8_8_MESA', 'GL_UNSIGNED_SHORT_8_8_REV_APPLE',
    'GL_UNSIGNED_SHORT_8_8_REV_MESA', 'GL_UPLOAD_GPU_MASK_NVX',
    'GL_UPPER_LEFT', 'GL_USE_MISSING_GLYPH_NV', 'GL_UTF16_NV',
    'GL_UTF8_NV', 'GL_UUID_SIZE_EXT', 'GL_V2F', 'GL_V3F',
    'GL_VALIDATE_STATUS', 'GL_VARIABLE_A_NV', 'GL_VARIABLE_B_NV',
    'GL_VARIABLE_C_NV', 'GL_VARIABLE_D_NV', 'GL_VARIABLE_E_NV',
    'GL_VARIABLE_F_NV', 'GL_VARIABLE_G_NV', 'GL_VARIANT_ARRAY_EXT',
    'GL_VARIANT_ARRAY_POINTER_EXT', 'GL_VARIANT_ARRAY_STRIDE_EXT',
    'GL_VARIANT_ARRAY_TYPE_EXT', 'GL_VARIANT_DATATYPE_EXT',
    'GL_VARIANT_EXT', 'GL_VARIANT_VALUE_EXT',
    'GL_VBO_FREE_MEMORY_ATI', 'GL_VECTOR_EXT', 'GL_VENDOR',
    'GL_VERSION', 'GL_VERSION_1_0', 'GL_VERSION_1_1',
    'GL_VERSION_1_2', 'GL_VERSION_1_3', 'GL_VERSION_1_4',
    'GL_VERSION_1_5', 'GL_VERSION_2_0', 'GL_VERSION_2_1',
    'GL_VERSION_3_0', 'GL_VERSION_3_1', 'GL_VERSION_3_2',
    'GL_VERSION_3_3', 'GL_VERSION_4_0', 'GL_VERSION_4_1',
    'GL_VERSION_4_2', 'GL_VERSION_4_3', 'GL_VERSION_4_4',
    'GL_VERSION_4_5', 'GL_VERSION_4_6', 'GL_VERTEX23_BIT_PGI',
    'GL_VERTEX4_BIT_PGI', 'GL_VERTEX_ARRAY',
    'GL_VERTEX_ARRAY_ADDRESS_NV', 'GL_VERTEX_ARRAY_BINDING',
    'GL_VERTEX_ARRAY_BINDING_APPLE', 'GL_VERTEX_ARRAY_BUFFER_BINDING',
    'GL_VERTEX_ARRAY_BUFFER_BINDING_ARB', 'GL_VERTEX_ARRAY_COUNT_EXT',
    'GL_VERTEX_ARRAY_EXT', 'GL_VERTEX_ARRAY_LENGTH_NV',
    'GL_VERTEX_ARRAY_LIST_IBM', 'GL_VERTEX_ARRAY_LIST_STRIDE_IBM',
    'GL_VERTEX_ARRAY_OBJECT_AMD', 'GL_VERTEX_ARRAY_OBJECT_EXT',
    'GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL',
    'GL_VERTEX_ARRAY_POINTER', 'GL_VERTEX_ARRAY_POINTER_EXT',
    'GL_VERTEX_ARRAY_RANGE_APPLE',
    'GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE',
    'GL_VERTEX_ARRAY_RANGE_LENGTH_NV', 'GL_VERTEX_ARRAY_RANGE_NV',
    'GL_VERTEX_ARRAY_RANGE_POINTER_APPLE',
    'GL_VERTEX_ARRAY_RANGE_POINTER_NV',
    'GL_VERTEX_ARRAY_RANGE_VALID_NV',
    'GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV', 'GL_VERTEX_ARRAY_SIZE',
    'GL_VERTEX_ARRAY_SIZE_EXT', 'GL_VERTEX_ARRAY_STORAGE_HINT_APPLE',
    'GL_VERTEX_ARRAY_STRIDE', 'GL_VERTEX_ARRAY_STRIDE_EXT',
    'GL_VERTEX_ARRAY_TYPE', 'GL_VERTEX_ARRAY_TYPE_EXT',
    'GL_VERTEX_ATTRIB_ARRAY0_NV', 'GL_VERTEX_ATTRIB_ARRAY10_NV',
    'GL_VERTEX_ATTRIB_ARRAY11_NV', 'GL_VERTEX_ATTRIB_ARRAY12_NV',
    'GL_VERTEX_ATTRIB_ARRAY13_NV', 'GL_VERTEX_ATTRIB_ARRAY14_NV',
    'GL_VERTEX_ATTRIB_ARRAY15_NV', 'GL_VERTEX_ATTRIB_ARRAY1_NV',
    'GL_VERTEX_ATTRIB_ARRAY2_NV', 'GL_VERTEX_ATTRIB_ARRAY3_NV',
    'GL_VERTEX_ATTRIB_ARRAY4_NV', 'GL_VERTEX_ATTRIB_ARRAY5_NV',
    'GL_VERTEX_ATTRIB_ARRAY6_NV', 'GL_VERTEX_ATTRIB_ARRAY7_NV',
    'GL_VERTEX_ATTRIB_ARRAY8_NV', 'GL_VERTEX_ATTRIB_ARRAY9_NV',
    'GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV',
    'GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT',
    'GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT',
    'GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING',
    'GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB',
    'GL_VERTEX_ATTRIB_ARRAY_DIVISOR',
    'GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB',
    'GL_VERTEX_ATTRIB_ARRAY_ENABLED',
    'GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB',
    'GL_VERTEX_ATTRIB_ARRAY_INTEGER',
    'GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT',
    'GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV',
    'GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV', 'GL_VERTEX_ATTRIB_ARRAY_LONG',
    'GL_VERTEX_ATTRIB_ARRAY_NORMALIZED',
    'GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB',
    'GL_VERTEX_ATTRIB_ARRAY_POINTER',
    'GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB',
    'GL_VERTEX_ATTRIB_ARRAY_SIZE', 'GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB',
    'GL_VERTEX_ATTRIB_ARRAY_STRIDE',
    'GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB',
    'GL_VERTEX_ATTRIB_ARRAY_TYPE', 'GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB',
    'GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV', 'GL_VERTEX_ATTRIB_BINDING',
    'GL_VERTEX_ATTRIB_MAP1_APPLE',
    'GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE',
    'GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE',
    'GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE',
    'GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE', 'GL_VERTEX_ATTRIB_MAP2_APPLE',
    'GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE',
    'GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE',
    'GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE',
    'GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE',
    'GL_VERTEX_ATTRIB_RELATIVE_OFFSET', 'GL_VERTEX_BINDING_BUFFER',
    'GL_VERTEX_BINDING_DIVISOR', 'GL_VERTEX_BINDING_OFFSET',
    'GL_VERTEX_BINDING_STRIDE', 'GL_VERTEX_BLEND_ARB',
    'GL_VERTEX_CONSISTENT_HINT_PGI', 'GL_VERTEX_DATA_HINT_PGI',
    'GL_VERTEX_ELEMENT_SWIZZLE_AMD', 'GL_VERTEX_ID_NV',
    'GL_VERTEX_ID_SWIZZLE_AMD', 'GL_VERTEX_PRECLIP_HINT_SGIX',
    'GL_VERTEX_PRECLIP_SGIX', 'GL_VERTEX_PROGRAM_ARB',
    'GL_VERTEX_PROGRAM_BINDING_NV', 'GL_VERTEX_PROGRAM_NV',
    'GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV',
    'GL_VERTEX_PROGRAM_POINT_SIZE',
    'GL_VERTEX_PROGRAM_POINT_SIZE_ARB',
    'GL_VERTEX_PROGRAM_POINT_SIZE_NV', 'GL_VERTEX_PROGRAM_TWO_SIDE',
    'GL_VERTEX_PROGRAM_TWO_SIDE_ARB', 'GL_VERTEX_PROGRAM_TWO_SIDE_NV',
    'GL_VERTEX_SHADER', 'GL_VERTEX_SHADER_ARB',
    'GL_VERTEX_SHADER_BINDING_EXT', 'GL_VERTEX_SHADER_BIT',
    'GL_VERTEX_SHADER_EXT', 'GL_VERTEX_SHADER_INSTRUCTIONS_EXT',
    'GL_VERTEX_SHADER_INVARIANTS_EXT', 'GL_VERTEX_SHADER_INVOCATIONS',
    'GL_VERTEX_SHADER_INVOCATIONS_ARB', 'GL_VERTEX_SHADER_LOCALS_EXT',
    'GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT',
    'GL_VERTEX_SHADER_OPTIMIZED_EXT', 'GL_VERTEX_SHADER_VARIANTS_EXT',
    'GL_VERTEX_SOURCE_ATI', 'GL_VERTEX_STATE_PROGRAM_NV',
    'GL_VERTEX_STREAM0_ATI', 'GL_VERTEX_STREAM1_ATI',
    'GL_VERTEX_STREAM2_ATI', 'GL_VERTEX_STREAM3_ATI',
    'GL_VERTEX_STREAM4_ATI', 'GL_VERTEX_STREAM5_ATI',
    'GL_VERTEX_STREAM6_ATI', 'GL_VERTEX_STREAM7_ATI',
    'GL_VERTEX_SUBROUTINE', 'GL_VERTEX_SUBROUTINE_UNIFORM',
    'GL_VERTEX_TEXTURE', 'GL_VERTEX_WEIGHTING_EXT',
    'GL_VERTEX_WEIGHT_ARRAY_EXT',
    'GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT',
    'GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT',
    'GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT',
    'GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT', 'GL_VERTICAL_LINE_TO_NV',
    'GL_VERTICES_SUBMITTED', 'GL_VERTICES_SUBMITTED_ARB',
    'GL_VIBRANCE_BIAS_NV', 'GL_VIBRANCE_SCALE_NV',
    'GL_VIDEO_BUFFER_BINDING_NV',
    'GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV', 'GL_VIDEO_BUFFER_NV',
    'GL_VIDEO_BUFFER_PITCH_NV',
    'GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV',
    'GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV',
    'GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV',
    'GL_VIDEO_CAPTURE_FRAME_WIDTH_NV',
    'GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV',
    'GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV',
    'GL_VIDEO_COLOR_CONVERSION_MATRIX_NV',
    'GL_VIDEO_COLOR_CONVERSION_MAX_NV',
    'GL_VIDEO_COLOR_CONVERSION_MIN_NV',
    'GL_VIDEO_COLOR_CONVERSION_OFFSET_NV', 'GL_VIEWPORT',
    'GL_VIEWPORT_BIT', 'GL_VIEWPORT_BOUNDS_RANGE',
    'GL_VIEWPORT_COMMAND_NV', 'GL_VIEWPORT_INDEX_PROVOKING_VERTEX',
    'GL_VIEWPORT_POSITION_W_SCALE_NV',
    'GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV',
    'GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV',
    'GL_VIEWPORT_SUBPIXEL_BITS', 'GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV',
    'GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV',
    'GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV',
    'GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV',
    'GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV',
    'GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV',
    'GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV',
    'GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV', 'GL_VIEWPORT_SWIZZLE_W_NV',
    'GL_VIEWPORT_SWIZZLE_X_NV', 'GL_VIEWPORT_SWIZZLE_Y_NV',
    'GL_VIEWPORT_SWIZZLE_Z_NV', 'GL_VIEW_CLASS_128_BITS',
    'GL_VIEW_CLASS_16_BITS', 'GL_VIEW_CLASS_24_BITS',
    'GL_VIEW_CLASS_32_BITS', 'GL_VIEW_CLASS_48_BITS',
    'GL_VIEW_CLASS_64_BITS', 'GL_VIEW_CLASS_8_BITS',
    'GL_VIEW_CLASS_96_BITS', 'GL_VIEW_CLASS_ASTC_10x10_RGBA',
    'GL_VIEW_CLASS_ASTC_10x5_RGBA', 'GL_VIEW_CLASS_ASTC_10x6_RGBA',
    'GL_VIEW_CLASS_ASTC_10x8_RGBA', 'GL_VIEW_CLASS_ASTC_12x10_RGBA',
    'GL_VIEW_CLASS_ASTC_12x12_RGBA', 'GL_VIEW_CLASS_ASTC_4x4_RGBA',
    'GL_VIEW_CLASS_ASTC_5x4_RGBA', 'GL_VIEW_CLASS_ASTC_5x5_RGBA',
    'GL_VIEW_CLASS_ASTC_6x5_RGBA', 'GL_VIEW_CLASS_ASTC_6x6_RGBA',
    'GL_VIEW_CLASS_ASTC_8x5_RGBA', 'GL_VIEW_CLASS_ASTC_8x6_RGBA',
    'GL_VIEW_CLASS_ASTC_8x8_RGBA', 'GL_VIEW_CLASS_BPTC_FLOAT',
    'GL_VIEW_CLASS_BPTC_UNORM', 'GL_VIEW_CLASS_EAC_R11',
    'GL_VIEW_CLASS_EAC_RG11', 'GL_VIEW_CLASS_ETC2_EAC_RGBA',
    'GL_VIEW_CLASS_ETC2_RGB', 'GL_VIEW_CLASS_ETC2_RGBA',
    'GL_VIEW_CLASS_RGTC1_RED', 'GL_VIEW_CLASS_RGTC2_RG',
    'GL_VIEW_CLASS_S3TC_DXT1_RGB', 'GL_VIEW_CLASS_S3TC_DXT1_RGBA',
    'GL_VIEW_CLASS_S3TC_DXT3_RGBA', 'GL_VIEW_CLASS_S3TC_DXT5_RGBA',
    'GL_VIEW_COMPATIBILITY_CLASS', 'GL_VIRTUAL_PAGE_SIZE_INDEX_ARB',
    'GL_VIRTUAL_PAGE_SIZE_X_AMD', 'GL_VIRTUAL_PAGE_SIZE_X_ARB',
    'GL_VIRTUAL_PAGE_SIZE_Y_AMD', 'GL_VIRTUAL_PAGE_SIZE_Y_ARB',
    'GL_VIRTUAL_PAGE_SIZE_Z_AMD', 'GL_VIRTUAL_PAGE_SIZE_Z_ARB',
    'GL_VIVIDLIGHT_NV', 'GL_VOLATILE_APPLE', 'GL_WAIT_FAILED',
    'GL_WARPS_PER_SM_NV', 'GL_WARP_SIZE_NV',
    'GL_WEIGHTED_AVERAGE_ARB', 'GL_WEIGHTED_AVERAGE_EXT',
    'GL_WEIGHT_ARRAY_ARB', 'GL_WEIGHT_ARRAY_BUFFER_BINDING',
    'GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB',
    'GL_WEIGHT_ARRAY_POINTER_ARB', 'GL_WEIGHT_ARRAY_SIZE_ARB',
    'GL_WEIGHT_ARRAY_STRIDE_ARB', 'GL_WEIGHT_ARRAY_TYPE_ARB',
    'GL_WEIGHT_SUM_UNITY_ARB', 'GL_WIDE_LINE_HINT_PGI',
    'GL_WINDOW_RECTANGLE_EXT', 'GL_WINDOW_RECTANGLE_MODE_EXT',
    'GL_WIN_phong_shading', 'GL_WIN_specular_fog',
    'GL_WRAP_BORDER_SUN', 'GL_WRITE_DISCARD_NV', 'GL_WRITE_ONLY',
    'GL_WRITE_ONLY_ARB', 'GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV',
    'GL_WRITE_PIXEL_DATA_RANGE_NV',
    'GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV', 'GL_W_EXT', 'GL_XOR',
    'GL_XOR_NV', 'GL_X_EXT', 'GL_YCBAYCR8A_4224_NV',
    'GL_YCBCR_422_APPLE', 'GL_YCBCR_MESA', 'GL_YCBYCR8_422_NV',
    'GL_YCRCBA_SGIX', 'GL_YCRCB_422_SGIX', 'GL_YCRCB_444_SGIX',
    'GL_YCRCB_SGIX', 'GL_Y_EXT',
    'GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV',
    'GL_Z4Y12Z4CB12Z4CR12_444_NV', 'GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV',
    'GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV',
    'GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV', 'GL_ZERO', 'GL_ZERO_EXT',
    'GL_ZERO_TO_ONE', 'GL_ZOOM_X', 'GL_ZOOM_Y', 'GL_Z_EXT',
    '__gl3_h_', '__gl3ext_h_', '__gl_h_', '__glext_h_',
    'struct_GladGLContext', 'struct___GLsync', 'struct__cl_context',
    'struct__cl_event']
