#N canvas 0 258 683 446 10;
#X text 452 8 GEM object;
#X obj 8 257 cnv 15 430 185 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 39 257 Inlets:;
#X text 42 413 Outlets:;
#X obj 8 221 cnv 15 430 30 empty empty empty 20 12 0 14 -195568 -66577
0;
#X text 17 220 Arguments:;
#X obj 8 56 cnv 15 430 160 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 449 77 cnv 15 170 280 empty empty empty 20 12 0 14 -228992 -66577
0;
#X text 453 60 Example:;
#X obj 514 350 cnv 15 100 60 empty empty empty 20 12 0 14 -195568 -66577
0;
#N canvas 0 0 450 300 gemwin 0;
#X obj 132 136 gemwin;
#X obj 67 89 outlet;
#X obj 67 10 inlet;
#X obj 67 41 route create;
#X msg 67 70 set destroy;
#X msg 142 68 set create;
#X msg 132 112 create \, 1;
#X msg 198 112 destroy;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 3 1 5 0;
#X connect 3 1 7 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X restore 519 389 pd gemwin;
#X msg 519 370 create;
#X text 515 349 Create window:;
#X obj 451 160 cnv 15 160 160 empty empty empty 20 12 0 14 -24198 -66577
0;
#X obj 451 119 gemhead;
#X obj 502 102 bng 15 250 50 0 empty empty pix_load 20 8 0 8 -262144
-1 -1;
#N canvas 0 0 587 366 image 0;
#X obj 77 48 inlet;
#X obj 77 344 outlet;
#X obj 77 175 pix_image ../../doc/gem/examples/data/fractal.JPG;
#X obj 223 55 inlet;
#X msg 223 123 open \$1;
#X obj 223 100 openpanel;
#X obj 77 212 pix_yuv;
#X text 133 214 we really want YUV;
#X connect 0 0 2 0;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X connect 6 0 1 0;
#X restore 451 138 pd image;
#X obj 451 323 pix_texture;
#X text 63 231 <none>;
#X text 18 427 Outlet 1: gemlist;
#X text 15 271 Inlet 1: gemlist;
#X obj 451 345 square 3;
#X text 503 88 (JPEG \, TIFF \, ..);
#X obj 544 122 gemhead;
#N canvas 0 0 587 366 image 0;
#X obj 77 48 inlet;
#X obj 77 344 outlet;
#X obj 77 205 pix_image ../../doc/gem/examples/data/fractal.JPG;
#X obj 223 55 inlet;
#X msg 223 123 open \$1;
#X obj 223 100 openpanel;
#X obj 77 301 pix_buf;
#X msg 103 277 auto 1;
#X obj 103 256 loadbang;
#X text 166 263 [pix_buf] with auto 1 is important if we want to recalculate
our pix-effect each frame but don't want to reload the image all the
time.;
#X obj 77 230 pix_yuv;
#X connect 0 0 2 0;
#X connect 2 0 10 0;
#X connect 3 0 5 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X connect 6 0 1 0;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 10 0 6 0;
#X restore 544 141 pd image;
#X obj 595 103 bng 15 250 50 0 empty empty pix_load 20 8 0 8 -262144
-1 -1;
#X text 16 394 Inlet 2: gemlist;
#X text 449 77 open two different images;
#X text 71 31 Class: pix mix object;
#X text 50 12 Synopsis: [pix_chroma_key];
#X text 29 57 Description: mix 2 images based on their color;
#X obj 451 298 pix_chroma_key;
#X msg 486 271 direction \$1;
#X obj 486 251 tgl 15 1 empty empty empty 0 -6 0 8 -262144 -1 -1 1
1;
#X text 15 286 Inlet 1: value <list> : list of 3 floats of the pixel-value
to key out: values are either Red/Green/Blue (in RGBA-Space) or Y(luma)/U(Cb)/V(Cr)
in YUV-Space;
#X text 16 326 Inlet 1: range <list> : list of 3 floats defining the
+/-range of the key;
#X text 16 352 Inlet 1: direction 0|1 : which stream is the key-source
(0=left stream \; 1 = right stream);
#X floatatom 485 168 5 0 255 0 - - -;
#X msg 485 185 value \$1 20 20;
#X msg 485 228 range 20 \$1 \$1;
#X floatatom 485 211 5 0 255 0 - - -;
#X text 67 196 The 2 images have to be of the same size.;
#X text 14 76 [pix_chroma_key] does compositing using pixel by pixel
comparisons on two video streams. the comparison is based on user a
user supplied RGB or YUV pixel value and +/- range. if the pixel in
the key source lies within the range \, then it is replaced by the
corresponding pixel im the other stream. typically this is most effective
on a static background like a green/blue screen \, but can be effective
when used with other GEM objects like pix_background for live video
processing.;
#X connect 10 0 11 0;
#X connect 11 0 10 0;
#X connect 14 0 16 0;
#X connect 15 0 16 1;
#X connect 16 0 31 0;
#X connect 17 0 21 0;
#X connect 23 0 24 0;
#X connect 24 0 31 1;
#X connect 25 0 24 1;
#X connect 31 0 17 0;
#X connect 32 0 31 0;
#X connect 33 0 32 0;
#X connect 37 0 38 0;
#X connect 38 0 31 0;
#X connect 39 0 31 0;
#X connect 40 0 39 0;
