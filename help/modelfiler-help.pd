#N canvas 354 229 732 634 10;
#X declare -lib Gem;
#X text 54 30 Class: geometric object;
#X obj 463 87 cnv 15 240 530 empty empty empty 20 12 0 14 #dce4fc #404040 0;
#X text 467 67 Example:;
#X obj 7 67 cnv 15 450 100 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 8 226 cnv 15 450 230 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 9 231 Inlets:;
#X obj 8 182 cnv 15 450 30 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X text 17 181 Arguments:;
#X text 452 8 GEM object;
#X obj 474 96 cnv 15 220 430 empty empty empty 20 12 0 14 #64fc64 #404040 0;
#X text 63 192 optional: name of a OBJ-file to be loaded;
#X obj 474 533 cnv 15 80 30 empty empty empty 20 12 0 14 #14e814 #404040 0;
#X obj 477 107 bng 15 250 50 0 empty empty empty 0 -6 0 8 #fcfcfc #000000 #000000;
#X obj 477 125 openpanel;
#X msg 477 146 open \$1;
#X text 27 260 Inlet 1: message: open <filename.obj>;
#X msg 506 394 backend OBJ;
#X msg 515 414 backend ASSIMP3;
#X text 27 342 Inlet 1: message: backend <symbol> :: choose which backend to use first to open the model;
#X msg 513 437 backend;
#X obj 477 225 t a;
#X text 550 461 query backends;
#X obj 494 464 t a;
#N canvas 484 243 450 300 META 0;
#X obj 10 25 declare -lib Gem;
#X text 10 135 AUTHOR IOhannes m zm√∂lnig;
#X text 10 155 LICENSE GPL v2;
#X text 10 45 DESCRIPTION load an Alias/Wavefront-Model to various tables.;
#X text 10 65 KEYWORDS Gem openGL;
#X text 20 85 INLET_0 gemlist open position color normal texture backend ...;
#X text 20 115 OUTLET_0 vertices;
#X restore 558 8 pd META;
#X obj 8 464 cnv 15 450 30 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 41 467 _backendinfo \$0 model;
#N canvas 393 109 534 459 properties 0;
#X msg 39 175 enumProps;
#X text 107 177 print available properties (for reading and/or writing);
#X msg 61 214 get texheight texwidth;
#X msg 84 245 set usematerial 1;
#X text 209 246 set an (available) named properties;
#X text 208 215 get (available) named properties;
#X msg 84 310 setProps usematerial 1;
#X text 232 309 store a named property for applying LATER;
#X msg 84 340 applyProps;
#X text 162 340 apply stored properties;
#X msg 84 370 clearProps;
#X text 161 366 clear stored properties;
#X text 26 35 ==========================;
#X text 26 22 getting/setting properties;
#X text 26 68 depending on the used backend for loading a model \, different properties might be available., f 61;
#X text 30 104 properties can only be enumerated after a model has been loaded (and thus the loader-backend has been determined);
#X obj 39 405 s \$0-ctl;
#X connect 0 0 16 0;
#X connect 2 0 16 0;
#X connect 3 0 16 0;
#X connect 6 0 16 0;
#X connect 8 0 16 0;
#X connect 10 0 16 0;
#X restore 353 468 pd properties;
#X obj 477 539 modelfiler;
#X msg 569 437 loader;
#X obj 13 508 table table_posX;
#X obj 13 528 table table_posY;
#X obj 13 549 table table_posZ;
#X obj 116 508 table table_normalX;
#X obj 116 528 table table_normalY;
#X obj 116 549 table table_normalZ;
#X obj 238 508 table table_colorR;
#X obj 238 528 table table_colorG;
#X obj 238 548 table table_colorB;
#X msg 495 172 open ../examples/data/venus.obj;
#X obj 477 574 print;
#X obj 489 360 t a;
#X obj 507 505 r \$0-ctl;
#X text 13 384 Outlets:;
#X obj 238 568 table table_colorA;
#X obj 354 508 table table_texU;
#X obj 354 528 table table_texV;
#X text 7 79 Description: loads a 3D model into a table;
#X text 33 14 Synopsis: [modelfiler];
#X msg 515 204 symbol table_pos;
#X msg 515 224 position \$1X \$1Y \$1Z;
#X msg 527 250 symbol table_color;
#X msg 527 270 color \$1R \$1G \$1B \$1A;
#X msg 534 296 symbol table_normal;
#X msg 534 316 normal \$1X \$1Y \$1Z;
#X msg 564 342 symbol table_tex;
#X msg 564 362 texture \$1U \$1V;
#X text 45 607 see also:;
#X obj 113 605 gemvertexbuffer;
#X text 33 409 Outlet 1 : vertices float : number of vertices copied to tables;
#X text 27 277 Inlet 1 : message: position <tableX> <tableY> <tableZ>;
#X text 27 293 Inlet 1 : message: color <tableR> <tableG> <tableB> <tableA>;
#X text 27 309 Inlet 1 : message: normal <tableX> <tableX> <tableZ>;
#X text 28 324 Inlet 1 : message: texture <tableU> <tableV>;
#X text 16 96 The [modelfilter] object loads the data from a 3D model into various tables \, so they can be used e.g. with VBOs (e.g. [gemvertexbuffer]);
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 20 0;
#X connect 16 0 22 0;
#X connect 17 0 22 0;
#X connect 19 0 22 0;
#X connect 20 0 27 0;
#X connect 22 0 27 0;
#X connect 27 0 39 0;
#X connect 28 0 22 0;
#X connect 38 0 20 0;
#X connect 40 0 27 0;
#X connect 41 0 27 0;
#X connect 48 0 49 0;
#X connect 49 0 40 0;
#X connect 50 0 51 0;
#X connect 51 0 40 0;
#X connect 52 0 53 0;
#X connect 53 0 40 0;
#X connect 54 0 55 0;
#X connect 55 0 40 0;
